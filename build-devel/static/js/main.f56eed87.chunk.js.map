{"version":3,"sources":["../node_modules/babel-core/lib/transformation/file/options sync","../node_modules/babel-core/lib/transformation/file sync","browserfs-setup.ts","path.ts","runner.ts","backend.ts","state.ts","control.ts","Table.tsx","Image.tsx","Chart.tsx","RenderedValue.tsx","rhsObject.ts","chunk.ts","RHS.tsx","DefChunk.tsx","DefChunks.tsx","SingleCodeMirrorDefinitions.tsx","FSItem.tsx","FSBrowser.tsx","FontSize.tsx","Menu.tsx","MenuBar.tsx","Footer.tsx","Dropdown.tsx","DropdownOption.tsx","Header.tsx","InteractionError.tsx","Editor.tsx","runtime-loader.ts","store.ts","reducer.ts","serviceWorker.js","index.tsx","App.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","BrowserFS","require","fs","BFSRequire","path","install","window","configure","worker","projectsDirectory","existsSync","mkdirSync","FileSystem","WorkerFS","attachRemoteListener","bfs","root","compileBase","join","compileBuiltinJS","compileProgram","runBase","runProgram","uncompiled","compiled","compiledBuiltin","program","pyretJarr","csv","assert","immutable","stopify","browserFS","nodeModules","wrapContent","content","RunKind","makeRequireAsync","basePath","cwd","currentRunner","cache","requireAsync","importPath","oldWd","nextPath","parse","dir","stoppedPath","cachePath","pauseK","kontinue","lastPath","__pyretExports","lastModule","g","stopifiedCode","statSync","mtime","String","readFileSync","contents","compile","writeFileSync","evalCompiled","result","type","toReturn","value","Promise","reject","runner","toStopify","stopifyLocally","newMethod","kind","stopifyModuleExports","Object","assign","document","Number","Math","Array","RegExp","Image","decodeURIComponent","$STOPIFY","setTimeout","console","parseFloat","isNaN","isFinite","run","pause","callback","resume","makeRequire","requireSync","Function","f","EditorMode","compileStart","performance","now","makeBackendMessageHandler","echoLog","setupFinished","compileFailure","runtimeFailure","lintFailure","lintSuccess","compileSuccess","createReplSuccess","compileInteractionSuccess","compileInteractionFailure","data","browserfsMessage","msgObject","JSON","msgType","tag","log","err","undefined","lintProgram","compilerWorker","options","message","request","programSource","lint","postMessage","baseDir","builtinJSDir","checks","typeCheck","recompileBuiltins","createRepl","compileInteraction","interactionFullPath","assertNever","arg","runProgram2","runKind","Sync","start","end","time","Async","startRequire","then","asyncRunner","endRequire","startRun","endRun","catch","error","resultP","entry","runtimeFiles","Worker","bfsSetup","programText","programName","backend","initialState","browseRoot","browsePath","currentFile","currentFileContents","rhs","objects","outdated","interactionErrors","lintFailures","control","autoRun","editTimer","dropdownVisible","editorMode","Chunks","fontSize","definitionsHighlights","fsBrowserVisible","currentChunk","firstUpdatableChunk","shouldAdvanceCursor","effectQueue","isFileSaved","isMessageHandlerReady","isReplReady","isSetupFinished","settingUp","creatingRepl","linting","linted","compiling","running","compiledSinceLastEdit","chunks","focusedChunk","menuTabVisible","menuItems","name","icon","TableWidget","htmlify","headers","rows","columns","map","header","index","Header","accessor","row","showOptions","length","defaultPageSize","className","text","d","showPagination","pageSize","showPageSizeOptions","filterable","ImageWidget","props","canvas","this","updateCanvas","image","ctx","getContext","clearRect","getWidth","getHeight","render","width","height","ref","React","Component","ChartWidget","chartType","title","hAxis","vAxis","legend","concat","legendToggle","RenderedValue","convert","toString","$brand","_headers","_rows","v","isArray","stringify","slice","getRow","hasSrcLoc","obj","prop","prototype","hasOwnProperty","call","srcloc","matches","loc","match","getStartLineForIndex","startLine","split","newId","uuidv4","findChunkFromSrcloc","file","l1","i","connector","connect","state","elements","rhsObject","a","isSelected","selectedStyle","background","borderTop","borderBottom","hasProp","isTrace","key","style","paddingLeft","display","alignItems","isRHSCheck","success","position","dispatch","setFocusedChunk","setChunks","setChunk","chunk","enqueueEffect","effect","setShouldAdvanceCursor","setRHS","input","createRef","editor","errorState","status","getDoc","getAllMarks","forEach","m","clear","highlights","doc","ch1","l2","ch2","markText","line","ch","current","focus","newChunks","event","getCursor","preventDefault","pos","token","getTokenAt","shiftKey","lineState","tokens","trim","alignSelf","top","zIndex","fontFamily","borderRadius","border","padding","marginRight","boxShadow","failures","onMouseDown","handleMouseDown","editorDidMount","setSize","mode","theme","lineNumbers","lineWrapping","lineNumberFormatter","l","autofocus","onBeforeChange","scheduleUpdate","onKeyDown","handleEnter","handleBackspace","handleDelete","handleArrowUp","handleArrowDown","autoCursor","handleReorder","oldFocusedId","destination","innerChunks","newResult","from","splice","removed","reorder","source","newFocusedChunk","getNewFocusedChunk","allChunks","focused","draggableId","draggableProvided","innerRef","draggableProps","flexDirection","dragHandleProps","minWidth","justifyContent","borderLeft","marginLeft","userSelect","onDragEnd","fc","droppableId","provided","droppableProps","placeholder","CodeMirror","RawCodeMirror","SingleCodeMirrorDefinitions","onChange","onEdit","setState","marks","FSItem","selected","onClick","stats","label","isDirectory","isFile","color","textAlign","flex","cursor","paddingRight","base","EditType","setBrowsePath","onExpandChild","traverseUp","newPath","traverseDown","childDirectory","expandChild","child","fullChildPath","browsePathString","createFSItemPair","filePath","toggleEditFile","editType","CreateFile","toggleEditDirectory","CreateDirectory","handleSubmit","editValue","target","deleteSelected","removeDirectory","readdirSync","unlinkSync","rmdirSync","selectCurrentDirectory","uploadFile","files","reader","FileReader","onload","forceUpdate","readAsText","b","that","onSubmit","flexGrow","alignContent","browsingRoot","sort","FSBrowser","compareFSItemPair","x","onIncrease","oldSize","onDecrease","onReset","setEditorMode","tab","Text","getTab","overflowY","toggleTab","item","Footer","Dropdown","children","stopPropagation","DropdownOption","enabled","internalName","Date","getTime","htmlFor","InteractionError","margin","stop","updateContents","setAutoRun","setStopify","setTypeCheck","setDropdownVisible","prewrittenDirectory","timestamp","compiledPath","replace","makeHeaderButton","interactionValues","dropdown","rightHandSide","vertical","percentage","definitions","makeDefinitions","onBlur","nextChunks","needsJiggle","handleRunSuccess","moduleUri","$checks","$locations","$traces","filter","t","location","makeRHSObjects","locations","traces","handleEffectSucceeded","action","handleCreateReplSuccess","timer","handleStartEditTimerSuccess","handleEditTimerSuccess","allLinted","shouldCompile","handleLintSuccess","handleCompileSuccess","handleSetupSuccess","handleStopSuccess","handleLoadFileSuccess","needsLint","getNewEffectQueue","handleSaveFileSuccess","handleSetupWorkerMessageHandlerSuccess","handleEffectFailed","handleCreateReplFailure","errors","push","handleLintFailure","places","findChunkFromSrclocResult","chunkIndex","hl","handleCompileFailure","handleRunFailure","handleUpdate","newEditorMode","totalLines","chunkString","handleSetEditorMode","handleSetCurrentRunner","handleSetCurrentFileContents","handleSetBrowsePath","handleSetCurrentFile","chunksOrChunk","c","handleSetChunks","shouldStartEditTimer","handleSetFocusedChunk","handleSetFontSize","handleSetMenuTabVisible","rootReducer","oldEffectQueue","handleEffectStarted","handleEffectEnded","handleEnqueueEffect","handleStartEditTimer","clearTimeout","handleLoadFile","chunkStrings","handleSetupWorkerMessageHandler","onLog","onCompileFailure","onRuntimeFailure","onCompileSuccess","onCreateReplSuccess","onCompileInteractionSuccess","onCompileInteractionFailure","onmessage","handleCreateRepl","handleSaveFile","handleCompile","baseDirectory","programFileName","handleRun","runnerCallback","receivedRunner","runResult","handleStop","handleTextLint","handleChunkLint","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","subscribe","getState","maybeEffect","applyEffect","j","handleFirstActionableEffect","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f56eed87.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 265;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 279;","export const BrowserFS = require('browserfs'); // eslint-disable-line global-require\n\nexport const fs = BrowserFS.BFSRequire('fs');\n\nexport const path = BrowserFS.BFSRequire('path');\n\nexport const install = (): void => {\n  BrowserFS.install(window);\n};\n\nexport const configure = (worker: Worker, projectsDirectory: string): void => {\n  BrowserFS.configure({\n    fs: 'LocalStorage',\n  }, (e: any) => {\n    if (e) {\n      throw e;\n    }\n\n    if (!fs.existsSync(projectsDirectory)) {\n      fs.mkdirSync(projectsDirectory);\n    }\n\n    BrowserFS.FileSystem.WorkerFS.attachRemoteListener(worker);\n    (window as any).bfs = BrowserFS.BFSRequire('fs');\n  });\n};\n","import { path } from './browserfs-setup';\n\nexport const root = '/';\nexport const compileBase = path.join(root, 'projects');\nexport const compileBuiltinJS = path.join(root, 'prewritten');\nexport const compileProgram = 'program.arr';\nexport const runBase = path.join(root, 'compiled', 'project');\nexport const runProgram = 'program.arr.js';\nexport const uncompiled = path.join(root, 'uncompiled');\nexport const compiled = path.join(root, 'compiled');\nexport const compiledBuiltin = path.join(compiled, 'builtin');\nexport const program = path.join(compileBase, compileProgram);\nexport const pyretJarr = 'pyret.jarr';\n","/* eslint-disable */\n\nconst csv = require('csv-parse/lib/sync');\nconst assert = require('assert');\nconst immutable = require('immutable');\nexport const stopify = require('@stopify/stopify');\nconst browserFS = require('./browserfs-setup.ts');\n\n(window as any).stopify = stopify;\n\nconst { fs } = browserFS;\nconst { path } = browserFS;\n\nconst nodeModules = {\n  assert,\n  'csv-parse/lib/sync': csv,\n  fs: browserFS.fs,\n  immutable,\n};\n\nfunction wrapContent(content: string): string {\n  return `(function() { ${content} })();`;\n}\n\nexport const makeRequireAsync = (\n  basePath: string): ((importPath: string) => Promise<any>\n  ) => {\n  let cwd = basePath;\n  let currentRunner: any = null;\n  const cache : {[key:string]: any} = {};\n\n  const requireAsyncMain = (importPath: string) => new Promise(((resolve, reject) => {\n    if (importPath in nodeModules) {\n      return (nodeModules as any)[importPath];\n    }\n    const oldWd = cwd;\n    const nextPath = path.join(cwd, importPath);\n    cwd = path.parse(nextPath).dir;\n    if (!fs.existsSync(nextPath)) {\n      throw new Error(`Path did not exist in requireSync: ${nextPath}`);\n    }\n    const stoppedPath = `${nextPath}.stopped`;\n    // Get the absolute path to uniquely identify modules\n    // Cache modules based upon the absolute path for singleton modules\n    const cachePath = path.resolve(stoppedPath);\n    if (cachePath in cache) { resolve(cache[cachePath]); return; }\n    let runner: any = null;\n    const contents = String(fs.readFileSync(nextPath));\n    const toStopify = wrapContent(contents);\n    runner = stopify.stopifyLocally(toStopify, { newMethod: 'direct' });\n    if (runner.kind !== 'ok') { reject(runner); }\n    fs.writeFileSync(stoppedPath, runner.code);\n    const stopifyModuleExports = {\n      exports: {\n        __pyretExports: nextPath,\n      },\n    };\n    runner.g = Object.assign(runner.g, {\n      document,\n      Number,\n      Math,\n      Array,\n      Object,\n      RegExp,\n      stopify,\n      Error,\n      Image,\n      decodeURIComponent,\n      require: requireAsync,\n      module: stopifyModuleExports,\n      // TS 'export' syntax desugars to 'exports.name = value;'\n      exports: stopifyModuleExports.exports,\n      String,\n      $STOPIFY: runner,\n      setTimeout,\n      console,\n      parseFloat,\n      isNaN,\n      isFinite,\n    });\n    runner.path = nextPath;\n    currentRunner = runner;\n\n    resolve({\n      run: new Promise((resolve, reject) => runner.run((result : any) => {\n        cwd = oldWd;\n        if (result.type !== 'normal') { reject(result); } else {\n          const toReturn = runner.g.module.exports;\n          cache[cachePath] = toReturn;\n          resolve(toReturn);\n        }\n      })),\n      pause: (callback: (line: number) => void): void => {\n        runner.pause(callback);\n      },\n      resume: (): void => {\n        runner.resume();\n      },\n    });\n  }));\n\n  const requireAsync = (importPath: string) => {\n    if (importPath in nodeModules) {\n      return (nodeModules as any)[importPath];\n    }\n    const oldWd = cwd;\n    const nextPath = path.join(cwd, importPath);\n    cwd = path.parse(nextPath).dir;\n    if (!fs.existsSync(nextPath)) {\n      throw new Error(`Path did not exist in requireSync: ${nextPath}`);\n    }\n    const stoppedPath = `${nextPath}.stopped`;\n    // Get the absolute path to uniquely identify modules\n    // Cache modules based upon the absolute path for singleton modules\n    const cachePath = path.resolve(stoppedPath);\n    if (cachePath in cache) { return cache[cachePath]; }\n    currentRunner.pauseK((kontinue: (result: any) => void) => {\n      const lastPath = currentRunner.path;\n      const module = {\n        exports: {\n          __pyretExports: nextPath,\n        },\n      };\n      const lastModule = currentRunner.g.module;\n      currentRunner.g.module = module;\n      // Need to set 'exports' global to work with TS export desugaring\n      currentRunner.g.exports = module.exports;\n      currentRunner.path = nextPath;\n      let stopifiedCode = '';\n      if (fs.existsSync(stoppedPath) && (fs.statSync(stoppedPath).mtime > fs.statSync(nextPath).mtime)) {\n        stopifiedCode = String(fs.readFileSync(stoppedPath));\n      } else {\n        const contents = String(fs.readFileSync(nextPath));\n        stopifiedCode = currentRunner.compile(wrapContent(contents));\n        fs.writeFileSync(stoppedPath, stopifiedCode);\n      }\n      currentRunner.evalCompiled(stopifiedCode, (result: any) => {\n        cwd = oldWd;\n        if (result.type !== 'normal') {\n          kontinue(result);\n          return;\n        }\n        const toReturn = currentRunner.g.module.exports;\n        currentRunner.path = lastPath;\n        // g.exports and g.module may be overwritten by JS code. Need to restore\n        currentRunner.g.module = lastModule;\n        // Need to set 'exports' global to work with TS export desugaring\n        currentRunner.g.exports = lastModule.exports;\n        cache[cachePath] = toReturn;\n        kontinue({ type: 'normal', value: toReturn });\n      });\n    });\n  };\n\n  return requireAsyncMain;\n};\n\nexport const makeRequire = (basePath: string): ((importPath: string) => any) => {\n  const cache : {[key:string]: any} = {};\n  let cwd = basePath;\n  /*\n    Recursively eval (with this definition of require in scope) all of the\n    described JavaScript.\n\n    Note that since JS code is generated/written with the assumption that\n    require() is sync, we can only use sync versions of the FS function here;\n    require must be entirely one synchronous run of the code.\n\n    Future use of stopify could enable the definition of requireAsync, which\n    could pause the stack while requiring and then resume.\n  */\n  const requireSync = (importPath: string) => {\n    if (importPath in nodeModules) {\n      return (nodeModules as any)[importPath];\n    }\n    const oldWd = cwd;\n    const nextPath = path.join(cwd, importPath);\n    if (nextPath in cache) { return cache[nextPath]; }\n    cwd = path.parse(nextPath).dir;\n    if (!fs.existsSync(nextPath)) {\n      throw new Error(`Path did not exist in requireSync: ${nextPath}`);\n    }\n    const contents = fs.readFileSync(nextPath);\n    // TS 'export' syntax desugars to 'exports.name = value;'\n    // Adding an 'exports' parameter simulates the global 'exports' variable\n    // Also, the comment below has meaning to eslint and makes it ignore the\n    // use of the Function constructor (which we do intend)\n    // eslint-disable-next-line\n    const f = new Function(\"require\", \"module\", \"exports\", contents);\n    const module = {\n      exports: {\n        __pyretExports: nextPath,\n      },\n    };\n    const result = f(requireSync, module, module.exports);\n    const toReturn = module.exports ? module.exports : result;\n    cwd = oldWd;\n    cache[nextPath] = toReturn;\n    return toReturn;\n  };\n\n  return requireSync;\n};\n","export interface LintOptions {\n  program: string,\n  programSource: string,\n}\n\nexport interface CompileOptions {\n  program: string,\n  baseDir: string,\n  builtinJSDir: string,\n  typeCheck: boolean,\n  checks: string,\n  recompileBuiltins: boolean,\n}\n\nexport enum RunKind {\n  Sync = 'SYNC',\n  Async = 'ASYNC',\n}\n\nexport interface RunResult {\n  time: number,\n  result: any,\n}\n\nlet compileStart = window.performance.now();\n\n/*\n * Handles Pyret compiler messages ONLY.\n * Ignores all other messages (including BrowserFS messages)\n */\nexport const makeBackendMessageHandler = (\n  echoLog: (l: string) => void,\n  setupFinished: () => void,\n  compileFailure: (e: string[]) => void,\n  runtimeFailure: (e: string[]) => void,\n  lintFailure: (data: { name: string, errors: string[]}) => void,\n  lintSuccess: (data: { name: string }) => void,\n  compileSuccess: () => void,\n  createReplSuccess: () => void,\n  compileInteractionSuccess: (data: { program: string }) => void,\n  compileInteractionFailure: (data: { program: string }) => void): ((e: MessageEvent) => null | void\n  ) => {\n  const backendMessageHandler = (e: MessageEvent) => {\n    if (e.data.browserfsMessage === true) {\n      return null;\n    }\n\n    try {\n      const msgObject: any = JSON.parse(e.data);\n\n      const msgType = msgObject.type;\n\n      if (msgObject.tag === 'error') {\n        try {\n          console.log(JSON.parse(msgObject.data));\n        } catch (err) {\n          console.log(msgObject.data);\n        }\n      }\n\n      if (msgType === undefined) {\n        return null;\n      } if (msgType === 'echo-log') {\n        echoLog(msgObject.contents);\n      } else if (msgType === 'lint-failure') {\n        lintFailure(msgObject.data);\n      } else if (msgType === 'lint-success') {\n        lintSuccess(msgObject.data);\n      } else if (msgType === 'setup-finished') {\n        setupFinished();\n      } else if (msgType === 'compile-failure') {\n        compileFailure(msgObject.data);\n      } else if (msgType === 'compile-success') {\n        console.log('compile-time: ', window.performance.now() - compileStart);\n        compileSuccess();\n      } else if (msgType === 'create-repl-success') {\n        createReplSuccess();\n      } else if (msgType === 'compile-interaction-success') {\n        compileInteractionSuccess({ program: msgObject.program });\n      } else if (msgType === 'compile-interaction-failure') {\n        compileInteractionFailure({ program: msgObject.program });\n      } else {\n        return null;\n      }\n\n      return null;\n    } catch (err) {\n      console.log(err);\n      runtimeFailure(err);\n      return null;\n    }\n  };\n\n  return backendMessageHandler;\n};\n\nexport const lintProgram = (\n  compilerWorker: Worker,\n  options: LintOptions,\n): void => {\n  const message = {\n    request: 'lint-program',\n    program: options.program,\n    'program-source': options.programSource,\n    lint: true,\n  };\n\n  compilerWorker.postMessage(message);\n};\n\nexport const compileProgram = (\n  compilerWorker: Worker,\n  options: CompileOptions,\n): void => {\n  compileStart = window.performance.now();\n  const message = {\n    request: 'compile-program',\n    program: options.program,\n    'base-dir': options.baseDir,\n    'builtin-js-dir': options.builtinJSDir,\n    checks: options.checks,\n    'type-check': options.typeCheck,\n    'recompile-builtins': options.recompileBuiltins,\n  };\n\n  compilerWorker.postMessage(message);\n};\n\nexport const createRepl = (\n  compilerWorker: Worker,\n): void => {\n  const message = {\n    request: 'create-repl',\n  };\n\n  compilerWorker.postMessage(message);\n};\n\nexport const compileInteraction = (\n  compilerWorker: Worker,\n  interactionFullPath: string,\n): void => {\n  const message = {\n    request: 'compile-interaction',\n    program: interactionFullPath,\n  };\n\n  compilerWorker.postMessage(message);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst assertNever = (arg: never): never => {\n  throw new Error('assertNever');\n};\n\nexport const runProgram2 = (\n  runner: any,\n  baseDir: string,\n  program: string,\n  runKind: RunKind,\n): Promise<any> => {\n  if (runKind === RunKind.Sync) {\n    const start = window.performance.now();\n    const result = runner.makeRequire(baseDir)(program);\n    const end = window.performance.now();\n    return Promise.resolve({\n      time: end - start,\n      result,\n    });\n  } if (runKind === RunKind.Async) {\n    return new Promise<any>((resolve) => {\n      const startRequire = window.performance.now();\n      runner.makeRequireAsync(baseDir)(program).then((asyncRunner: any) => {\n        const endRequire = window.performance.now();\n        console.log('require time', endRequire - startRequire);\n        resolve({\n          run: (callback: (result: RunResult) => void): void => {\n            const startRun = window.performance.now();\n            asyncRunner.run.then((result: any) => {\n              const endRun = window.performance.now();\n              console.log('run time', endRun - startRun);\n              callback({\n                time: endRun - startRequire,\n                result,\n              });\n            }).catch((result: any) => {\n              const endRun = window.performance.now();\n              callback({\n                time: endRun - startRequire,\n                result: { error: String(result.value), result },\n              });\n            });\n          },\n          pause: (callback: (line: number) => void): void => {\n            asyncRunner.pause(callback);\n          },\n          resume: (): void => {\n            asyncRunner.resume();\n          },\n        });\n      });\n    });\n  }\n  return assertNever(runKind);\n};\n\nexport const runProgram = (\n  runner: any,\n  baseDir: string,\n  program: string,\n  runKind: RunKind,\n): Promise<RunResult> => {\n  if (runKind === RunKind.Sync) {\n    const start = window.performance.now();\n    const result = runner.makeRequire(baseDir)(program);\n    const end = window.performance.now();\n\n    return Promise.resolve({\n      time: end - start,\n      result,\n    });\n  } if (runKind === RunKind.Async) {\n    const entry = runner.makeRequireAsync(baseDir);\n    const resultP = entry(program);\n\n    const wrapper = new Promise<RunResult>((resolve) => {\n      const startRequire = window.performance.now();\n      resultP.then((asyncRunner: any) => {\n        console.log('asyncRunner', asyncRunner);\n        const endRequire = window.performance.now();\n\n        const startRun = window.performance.now();\n        asyncRunner.run((result: any) => {\n          const endRun = window.performance.now();\n\n          console.log('require time', endRequire - startRequire);\n          console.log('run time', endRun - startRun);\n          console.log('total time', endRun - startRequire);\n\n          resolve({\n            time: endRun - startRequire,\n            result,\n          });\n        });\n      });\n    });\n\n    return wrapper;\n  }\n  // NOTE(michael): type checking in Typescript on enums is not exhaustive (as of v3.5.3)\n  return assertNever(runKind);\n};\n","import { Check } from './Check';\nimport { Chunk } from './chunk';\nimport { Effect } from './effect';\nimport { MenuItems } from './menu';\nimport { RHSObjects } from './rhsObject';\nimport * as control from './control';\n\nexport type State = {\n  effectQueue: Effect[];\n  browseRoot: string,\n  browsePath: string,\n  currentFile: string,\n  currentFileContents: string | undefined,\n  typeCheck: boolean,\n  checks: Check[],\n  rhs: RHSObjects,\n  interactionErrors: string[],\n  lintFailures: LintFailures,\n  runKind: control.backend.RunKind,\n  autoRun: boolean,\n  editTimer: NodeJS.Timer | false,\n  dropdownVisible: boolean,\n  editorMode: EditorMode,\n  fontSize: number,\n  message: string,\n  definitionsHighlights: number[][],\n  fsBrowserVisible: boolean,\n  currentRunner: any,\n  currentChunk: number,\n  firstUpdatableChunk: number | undefined,\n  chunks: Chunk[],\n  focusedChunk: number | undefined,\n  shouldAdvanceCursor: boolean,\n  isFileSaved: boolean,\n  isSetupFinished: boolean,\n  isMessageHandlerReady: boolean,\n  isReplReady: boolean,\n  settingUp: boolean,\n  creatingRepl: boolean,\n  linting: boolean,\n  linted: boolean,\n  compiling: boolean | 'out-of-date',\n  running: boolean,\n  compiledSinceLastEdit: boolean,\n  menuItems: MenuItems,\n  menuTabVisible: false | number,\n};\n\nexport enum EditorMode {\n  Chunks,\n  Text,\n}\n\nexport type LintFailure = {\n  name: string,\n  errors: string[]\n};\n\nexport type LintFailures = {\n  [name : string]: LintFailure\n};\n\nexport const initialState: State = {\n  browseRoot: '/',\n  browsePath: '/projects',\n  currentFile: '/projects/program.arr',\n  currentFileContents: undefined,\n  typeCheck: true,\n  checks: [],\n  rhs: {\n    objects: [],\n    outdated: false,\n  },\n  interactionErrors: [],\n  lintFailures: {},\n  runKind: control.backend.RunKind.Async,\n  autoRun: true,\n  editTimer: false,\n  dropdownVisible: false,\n  editorMode: EditorMode.Chunks,\n  fontSize: 12,\n  message: 'Ready to rock',\n  definitionsHighlights: [],\n  fsBrowserVisible: false,\n  currentRunner: undefined,\n  currentChunk: 0,\n  firstUpdatableChunk: 0,\n  shouldAdvanceCursor: false,\n  effectQueue: [],\n  isFileSaved: false,\n  isMessageHandlerReady: false,\n  isReplReady: false,\n  isSetupFinished: false,\n  settingUp: true,\n  creatingRepl: false,\n  linting: false,\n  linted: false,\n  compiling: false,\n  running: false,\n  compiledSinceLastEdit: false,\n  chunks: [],\n  focusedChunk: undefined,\n  menuTabVisible: false,\n  menuItems: [\n    {\n      name: 'Files',\n      icon: 'folderIcon.svg',\n    },\n    {\n      name: 'Options',\n      icon: 'gearIcon.svg',\n    },\n  ],\n};\n\nexport const CHUNKSEP = '#.CHUNK#\\n';\n","import * as bfsSetup from './browserfs-setup';\nimport load from './runtime-loader';\nimport * as runner from './runner';\nimport * as backend from './backend';\nimport * as path from './path';\n\nconst runtimeFiles = require('./runtime-files.json');\n\nexport { backend, path, bfsSetup };\n\nexport const worker = new Worker(path.pyretJarr);\n\nexport const installFileSystem = () => {\n  bfsSetup.install();\n  bfsSetup.configure(worker, path.compileBase);\n};\n\nexport const loadBuiltins = (): void => {\n  load(bfsSetup.fs, path.compileBuiltinJS, path.uncompiled, runtimeFiles);\n};\n\nexport const { runProgram } = backend;\nexport const { compileProgram } = backend;\nexport const { fs } = bfsSetup;\n\nexport const createFile = (file: string): void => {\n  bfsSetup.fs.writeFileSync(file, '');\n};\n\nexport const createDirectory = (dir: string): void => {\n  bfsSetup.fs.mkdirSync(dir);\n};\n\nexport const removeFile = (filePath: string): void => {\n  bfsSetup.fs.unlinkSync(filePath);\n};\n\n// Synchronous deleteDir\nexport const removeDirectory = (dir: string): void => {\n  const files = bfsSetup.fs.readdirSync(dir);\n\n  files.forEach((file: string) => {\n    const filePath = bfsSetup.path.join(dir, file);\n\n    const stats = bfsSetup.fs.statSync(filePath);\n\n    if (stats.isDirectory()) {\n      removeDirectory(filePath);\n    } else {\n      bfsSetup.fs.unlinkSync(filePath);\n    }\n  });\n\n  bfsSetup.fs.rmdirSync(dir);\n};\n\nexport const deleteDir = (dir: string): void => {\n  bfsSetup.fs.readdir(dir, (err: any, files: any) => {\n    if (err) {\n      throw err;\n    }\n\n    files.forEach((file: string) => {\n      const filePath = bfsSetup.path.join(dir, file);\n\n      bfsSetup.fs.stat(filePath, (statErr: any, stats: any) => {\n        if (err) {\n          throw statErr;\n        }\n\n        if (stats.isDirectory()) {\n          deleteDir(filePath);\n        } else {\n          bfsSetup.fs.unlink(filePath, (unlinkErr: any) => {\n            if (unlinkErr) {\n              throw unlinkErr;\n            }\n          });\n        }\n      });\n    });\n  });\n};\n\nexport const removeRootDirectory = (): void => {\n  deleteDir(path.root);\n};\n\nexport const lint = (\n  programText: string,\n  programName: string,\n): void => {\n  backend.lintProgram(\n    worker,\n    {\n      program: programText,\n      programSource: programName,\n    },\n  );\n};\n\nexport const compile = (\n  baseDirectory: string,\n  programFileName: string,\n  typeCheck: boolean,\n): void => {\n  backend.compileProgram(\n    worker,\n    {\n      program: programFileName,\n      baseDir: baseDirectory,\n      builtinJSDir: path.compileBuiltinJS,\n      checks: 'none',\n      typeCheck,\n      recompileBuiltins: false,\n    },\n  );\n};\n\nexport const run = (\n  baseDirectory: string,\n  programFileName: string,\n  callback: (result: any) => void,\n  runnerCallback: (runner: any) => void,\n  runKind: backend.RunKind,\n): void => {\n  backend.runProgram2(\n    runner,\n    baseDirectory,\n    programFileName,\n    runKind,\n  )\n    .then((receivedRunner: any): void => {\n      // the \"runner\" here is only a runner if RunKind is equal to Async\n      if (runKind === backend.RunKind.Async) {\n        runnerCallback(receivedRunner);\n      }\n      try {\n        if (runKind === backend.RunKind.Async) {\n          receivedRunner.run(callback);\n        }\n      } catch (x) {\n        console.error(x);\n        callback({\n          result: { error: String(x.value) },\n        });\n      }\n    });\n};\n\nexport const createRepl = () => {\n  backend.createRepl(worker);\n};\n\nexport const setupWorkerMessageHandler = (\n  onLog: (l: string) => void,\n  setupFinished: () => void,\n  onCompileFailure: (e: string[]) => void,\n  onRuntimeFailure: (e: string[]) => void,\n  lintFailure: (data: { name: string, errors: string[]}) => void,\n  lintSuccess: (data: { name: string }) => void,\n  onCompileSuccess: () => void,\n  onCreateReplSuccess: () => void,\n  onCompileInteractionSuccess: (data: { program: string }) => void,\n  onCompileInteractionFailure: (data: { program: string }) => void,\n): void => {\n  worker.onmessage = backend.makeBackendMessageHandler(\n    onLog,\n    setupFinished,\n    onCompileFailure,\n    onRuntimeFailure,\n    lintFailure,\n    lintSuccess,\n    onCompileSuccess,\n    onCreateReplSuccess,\n    onCompileInteractionSuccess,\n    onCompileInteractionFailure,\n  );\n};\n\nexport const openOrCreateFile = (filePath: string): string => {\n  if (bfsSetup.fs.existsSync(filePath)) {\n    return bfsSetup.fs.readFileSync(filePath, 'utf-8');\n  }\n  bfsSetup.fs.writeFileSync(filePath, '');\n  return '';\n};\n","import React from 'react';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport CopyToClipboard from 'react-copy-to-clipboard';\n\ntype TableWidgetProps = {\n  htmlify: (x: any) => any;\n  headers: string[];\n  rows: any[][];\n};\n\nexport default function TableWidget({ htmlify, headers, rows }: TableWidgetProps) {\n  const columns = headers.map(\n    (header: string, index: number) => ({\n      id: header,\n      Header: header,\n      accessor: (row: any) => htmlify(row[index]),\n    }),\n  );\n  const maxRowsPerPage = 5;\n  const showOptions = rows.length > maxRowsPerPage;\n  const defaultPageSize = showOptions ? maxRowsPerPage : rows.length;\n  return (\n    <div className=\"table-container\">\n      <CopyToClipboard text={rows.map((d) => d.join('\\t')).join('\\n')}>\n        <div className=\"table-copy\">\n          &#128203;\n        </div>\n      </CopyToClipboard>\n      <ReactTable\n        data={rows}\n        columns={columns}\n        showPagination={showOptions}\n        pageSize={defaultPageSize}\n        showPageSizeOptions={false}\n        filterable={showOptions}\n      />\n    </div>\n  );\n}\n","import React from 'react';\n\ntype ImageWidgetProps = {\n  image: any\n};\ntype ImageWidgetState = {};\n\nexport default class ImageWidget extends React.Component<ImageWidgetProps, ImageWidgetState> {\n  canvas: HTMLCanvasElement | null;\n\n  constructor(props : ImageWidgetProps) {\n    super(props);\n    this.canvas = null;\n  }\n\n  componentDidMount() {\n    this.updateCanvas();\n  }\n\n  componentDidUpdate() {\n    this.updateCanvas();\n  }\n\n  updateCanvas() {\n    const { image } = this.props;\n    const ctx = this.canvas!.getContext('2d');\n    ctx!.clearRect(0, 0, image.getWidth(), image.getHeight());\n    image.render(ctx, 0, 0);\n  }\n\n  render() {\n    const { image } = this.props;\n    return (\n      <div>\n        <canvas\n          width={image.getWidth()}\n          height={image.getHeight()}\n          ref={(canvas) => {\n            this.canvas = canvas;\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Chart from 'react-google-charts';\n\ntype ChartWidgetProps = {\n  headers: any[];\n  rows: any[][];\n  chartType: any;\n};\n\nexport default function ChartWidget({ headers, rows, chartType }: ChartWidgetProps) {\n  const options = {\n    // TODO(tiffany): get title from the chart\n    title: 'Title',\n    hAxis: { title: headers[1] },\n    vAxis: { title: headers[0] },\n    legend: 'none',\n  };\n  const headersArray = [headers];\n  const data = headersArray.concat(rows);\n  return (\n    <div>\n      <Chart\n        chartType={chartType}\n        data={data}\n        options={options}\n        width=\"100%\"\n        legendToggle\n      />\n    </div>\n  );\n}\n","import React from 'react';\n\nimport TableWidget from './Table';\nimport ImageWidget from './Image';\nimport ChartWidget from './Chart';\n\ntype RenderedValueProps = {\n  value: any;\n};\n\ntype RenderedValueState = {};\n\nfunction convert(value: any) {\n  if (value === undefined) {\n    return 'undefined';\n  }\n\n  if (typeof value === 'number') {\n    return value.toString();\n  } if (typeof value === 'string') {\n    return `\"${value}\"`;\n  } if (typeof value === 'boolean') {\n    return value.toString();\n  } if (typeof value === 'function') {\n    // TODO(michael) can we display more info than just <function> ?\n    return '<function>';\n  } if (value.$brand === '$table') {\n    return (\n      <TableWidget\n        headers={value._headers}\n        rows={value._rows}\n        htmlify={(v) => convert(v)}\n      />\n    );\n  } if (value.$brand === 'image') {\n    return (\n      <ImageWidget image={value} />\n    );\n  } if (value.$brand === 'chart') {\n    return (\n      <ChartWidget\n        headers={value._headers}\n        rows={value._rows}\n        chartType={value.chartType}\n      />\n    );\n  } if (typeof value === 'object') {\n    if (Array.isArray(value) && value.length > 100) {\n      const message = `${value.length - 100} elements hidden`;\n      return JSON.stringify(value.slice(0, 100).concat([`... ${message}`]));\n    }\n    // TODO(michael) palceholder for better object display\n    return JSON.stringify(value);\n  }\n  return 'error: data is not string-convertible';\n}\n\nexport default class RenderedValue extends React.Component<RenderedValueProps, RenderedValueState> {\n  render() {\n    const { value } = this.props;\n    return convert(value);\n  }\n}\n","export type RHSCheckValue = {\n  exception: boolean,\n  value: any,\n  exception_val: any,\n};\n\n// The result of evaluating a `check:` or `examples:` block.\n//\n// check:\n//   2 + 2 is 4\n// end\nexport type RHSCheck = {\n  key?: string,\n  lhs: RHSCheckValue, // 2 + 2\n  rhs: RHSCheckValue, // 4\n  path: string, // something like \"$check$block8\" (not used here)\n  loc: string, // something like \"file:///projects/program.arr:4:2-4:14\"\n  success: boolean, // `true`, since 2 + 2 = 4\n};\n\ntype N = number;\nexport type SrcLoc = [string, N, N, N, N, N, N];\n\nexport type Location = {\n  key?: string,\n  name: string,\n  value: any,\n  srcloc: SrcLoc,\n};\n\nexport type Trace = {\n  key?: string,\n  value: any,\n  srcloc: SrcLoc,\n};\n\nexport type RHSObject = Trace | Location | RHSCheck;\n\nexport function isTrace(a: RHSObject): a is Trace {\n  const hasProp = Object.prototype.hasOwnProperty;\n  return hasProp.call(a, 'value') && !hasProp.call(a, 'name');\n}\n\nexport function isLocation(a: RHSObject): a is Location {\n  const hasProp = Object.prototype.hasOwnProperty;\n  return hasProp.call(a, 'name');\n}\n\nexport function isRHSCheck(a: RHSObject): a is RHSCheck {\n  const hasProp = Object.prototype.hasOwnProperty;\n  return hasProp.call(a, 'lhs');\n}\n\nexport type HasSrcLoc =\n  { srcloc: SrcLoc } // Trace or Location\n  | { loc: string }; // RHSCheck\n\n// Typescript can't yet narrow union types using the default\n// hasOwnProperty predicate. This one works, though.\n// See https://fettblog.eu/typescript-hasownproperty/\nfunction hasOwnProperty<X extends {}, Y extends PropertyKey>(\n  obj: X,\n  prop: Y,\n): obj is X & Record<Y, unknown> {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport function getRow(hasSrcLoc: HasSrcLoc): number {\n  if (hasOwnProperty(hasSrcLoc, 'srcloc')) {\n    return hasSrcLoc.srcloc[1];\n  }\n\n  const { loc } = hasSrcLoc;\n\n  const matches = loc.match(/:(\\d+):\\d+-\\d+:\\d+$/);\n\n  if (matches === null) {\n    throw new Error('getRow: received malformed srcloc');\n  }\n\n  return Number(matches[1]);\n}\n\nexport type RHSObjects = {\n  objects: RHSObject[],\n  outdated: boolean,\n};\n\nexport type RunResult = {\n  time: number,\n  result: {\n    $answer: any,\n    $checks: RHSCheck[],\n    $locations: Location[],\n    $traces: Trace[],\n  },\n};\n\nexport function makeRHSObjects(result: RunResult, moduleUri: string): RHSObjects {\n  const {\n    $checks,\n    $locations,\n    $traces,\n  } = result.result;\n\n  function compareRHSObjects(a: RHSObject, b: RHSObject): number {\n    return getRow(a) - getRow(b);\n  }\n\n  // only keep toplevel expressions from this module.\n  const justTraces: RHSObject[] = $traces.filter((t) => t.srcloc[0] === moduleUri);\n\n  const withLocations = justTraces.concat($locations.map((location) => ({\n    ...location,\n    value: (result as any).result[location.name],\n  })));\n\n  const withChecks = withLocations.concat($checks);\n\n  const sorted = withChecks.sort(compareRHSObjects);\n\n  // Add unique keys to each object so that React can re-render them properly.\n  // We assume that each trace / check / location came from a different row.\n  const withKeys = sorted.map((rhsObject) => ({\n    key: getRow(rhsObject).toString(),\n    ...rhsObject,\n  }));\n\n  return {\n    objects: withKeys,\n    outdated: false,\n  };\n}\n","import { Controlled as CodeMirror } from 'react-codemirror2';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport type ErrorState =\n  ({ status: 'failed', effect: 'lint' | 'compile', failures: string[], highlights: number[][] }\n  | { status: 'succeeded', effect: 'lint' | 'compile' }\n  | { status: 'succeeded', effect: 'run', result: any }\n  | { status: 'notLinted' });\n\nexport type Chunk = {\n  startLine: number,\n  text: string,\n  id: string,\n  errorState: ErrorState,\n  editor: false | CodeMirror.Editor;\n  needsJiggle: boolean,\n};\n\nexport function getStartLineForIndex(chunks : Chunk[], index : number) {\n  if (index === 0) { return 0; }\n\n  return chunks[index - 1].startLine + chunks[index - 1].text.split('\\n').length;\n}\n\nexport function newId() {\n  return uuidv4();\n}\n\nexport function findChunkFromSrcloc(\n  chunks: Chunk[],\n  [file, l1] : [string, number],\n  currentFile: string,\n): number | false {\n  if (file !== `file://${currentFile}`) {\n    return false;\n  }\n\n  for (let i = 0; i < chunks.length; i += 1) {\n    const end = chunks[i].startLine + chunks[i].text.split('\\n').length;\n    if (l1 >= chunks[i].startLine && l1 <= end) {\n      return i;\n    }\n  }\n\n  return false;\n}\n","import React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport RenderedValue from './RenderedValue';\nimport { State } from './state';\nimport {\n  RHSObjects,\n  isTrace,\n  isLocation,\n  isRHSCheck,\n  getRow,\n} from './rhsObject';\nimport {\n  Chunk,\n  findChunkFromSrcloc,\n} from './chunk';\n\ntype stateProps = {\n  rhs: RHSObjects,\n  fontSize: number,\n  chunks: Chunk[],\n  currentFile: string,\n  focusedChunk: number | undefined,\n};\n\nfunction mapStateToProps(state: State): stateProps {\n  const {\n    rhs,\n    fontSize,\n    chunks,\n    currentFile,\n    focusedChunk,\n  } = state;\n  return {\n    rhs,\n    fontSize,\n    chunks,\n    currentFile,\n    focusedChunk,\n  };\n}\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype RHSProps = stateProps & PropsFromRedux;\n\nfunction RHS({\n  rhs,\n  fontSize,\n  chunks,\n  currentFile,\n  focusedChunk,\n}: RHSProps) {\n  const elements = (\n    rhs.objects.map((rhsObject) => {\n      const isSelected = focusedChunk !== undefined && findChunkFromSrcloc(\n        chunks,\n        [`file://${currentFile}`, getRow(rhsObject)],\n        currentFile,\n      ) === focusedChunk;\n      const selectedStyle = {\n        background: isSelected ? '#d7d4f0' : 'rgba(0, 0, 0, 0)',\n        borderTop: isSelected ? '2px solid #c8c8c8' : '2px solid rgba(0, 0, 0, 0)',\n        borderBottom: isSelected ? '2px solid #c8c8c8' : '2px solid rgba(0, 0, 0, 0)',\n      };\n      if (isTrace(rhsObject)) {\n        return (\n          <pre\n            key={rhsObject.key}\n            style={{\n              paddingLeft: '1em',\n              ...selectedStyle,\n            }}\n          >\n            <RenderedValue value={rhsObject.value} />\n          </pre>\n        );\n      }\n\n      if (isLocation(rhsObject)) {\n        return (\n          <pre\n            key={rhsObject.key}\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              paddingLeft: '1em',\n              ...selectedStyle,\n            }}\n          >\n            {rhsObject.name}\n            {' '}\n            =&nbsp;\n            <RenderedValue value={rhsObject.value} />\n          </pre>\n        );\n      }\n\n      if (isRHSCheck(rhsObject)) {\n        return (\n          <pre\n            key={rhsObject.key}\n            style={{\n              paddingLeft: '1em',\n              ...selectedStyle,\n            }}\n          >\n            Test\n            {' '}\n            {rhsObject.success ? 'succeeded' : 'failed'}\n            {' '}\n            at\n            {' '}\n            {rhsObject.loc}\n          </pre>\n        );\n      }\n\n      throw new Error(`RHS: malformed RHSObject, ${JSON.stringify(rhsObject)}`);\n    }));\n\n  const outdatedBackground = 'repeating-linear-gradient(45deg, #c8c8c8, #c8c8c8 8em, #979797 8em, #979797 16em)';\n\n  return (\n    <div\n      style={{\n        width: '100%',\n        height: '100%',\n        background: rhs.outdated ? outdatedBackground : '#fff',\n        fontSize,\n        position: 'relative',\n      }}\n    >\n      {elements}\n    </div>\n  );\n}\n\nexport default connector(RHS);\n","import React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport { State } from './state';\nimport { Chunk, getStartLineForIndex } from './chunk';\nimport { Action } from './action';\nimport { Effect } from './effect';\nimport { RHSObjects } from './rhsObject';\n\ntype stateProps = {\n  chunks: Chunk[],\n  focusedChunk: number | undefined,\n  rhs: RHSObjects,\n};\n\nfunction mapStateToProps(state: State): stateProps {\n  const { chunks, focusedChunk, rhs } = state;\n  return {\n    chunks,\n    focusedChunk,\n    rhs,\n  };\n}\n\ntype propsFromReact = {\n  index: number,\n  focused: boolean,\n};\n\ntype dispatchProps = {\n  setFocusedChunk: (index: number) => void,\n  setChunks: (chunks: Chunk[]) => void,\n  setChunk: (chunk: Chunk) => void,\n  enqueueEffect: (effect: Effect) => void,\n  setShouldAdvanceCursor: (value: boolean) => void,\n  setRHS: (value: RHSObjects) => void,\n};\n\nfunction mapDispatchToProps(dispatch: (action: Action) => any): dispatchProps {\n  return {\n    setFocusedChunk(index: number) {\n      dispatch({ type: 'update', key: 'focusedChunk', value: index });\n    },\n    setChunks(chunks: Chunk[]) {\n      dispatch({ type: 'update', key: 'chunks', value: chunks });\n    },\n    setChunk(chunk: Chunk) {\n      dispatch({ type: 'update', key: 'chunks', value: chunk });\n    },\n    enqueueEffect(effect: Effect) {\n      dispatch({ type: 'enqueueEffect', effect });\n    },\n    setShouldAdvanceCursor(value: boolean) {\n      dispatch({ type: 'update', key: 'shouldAdvanceCursor', value });\n    },\n    setRHS(value: RHSObjects) {\n      dispatch({ type: 'update', key: 'rhs', value });\n    },\n  };\n}\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype DefChunkProps = PropsFromRedux & dispatchProps & stateProps & propsFromReact;\n\nclass DefChunk extends React.Component<DefChunkProps, any> {\n  private input: React.RefObject<any>;\n\n  constructor(props: DefChunkProps) {\n    super(props);\n    this.input = React.createRef();\n  }\n\n  componentDidUpdate() {\n    const {\n      chunks,\n      index,\n    } = this.props;\n\n    const {\n      editor,\n      errorState,\n      startLine,\n    } = chunks[index];\n    if (editor && errorState.status === 'succeeded') {\n      const marks = editor.getDoc().getAllMarks();\n      marks.forEach((m) => m.clear());\n    } else if (editor && errorState.status === 'failed') {\n      const { highlights } = errorState;\n      const marks = editor.getDoc().getAllMarks();\n      marks.forEach((m) => m.clear());\n      if (highlights.length > 0) {\n        for (let i = 0; i < highlights.length; i += 1) {\n          const doc = editor.getDoc();\n          // lint errors are relative to the start of a chunk, compile errors\n          // are relative to the start of the program\n          if (errorState.effect === 'lint') {\n            const [l1, ch1, l2, ch2] = highlights[i];\n            doc.markText(\n              {\n                line: l1 - 1,\n                ch: ch1,\n              },\n              {\n                line: l2 - 1,\n                ch: ch2,\n              },\n              { className: 'styled-background-error' },\n            );\n          } else if (errorState.effect === 'compile') {\n            const [l1, ch1, l2, ch2] = highlights[i];\n            doc.markText(\n              {\n                line: l1 - startLine - 1,\n                ch: ch1,\n              },\n              {\n                line: l2 - startLine - 1,\n                ch: ch2,\n              },\n              { className: 'styled-background-error' },\n            );\n          }\n        }\n      }\n    }\n\n    const { focusedChunk } = this.props;\n    if (index === focusedChunk && this.input.current !== null) {\n      this.input.current.editor.focus();\n    }\n  }\n\n  scheduleUpdate(value: string) {\n    const {\n      chunks,\n      index,\n      setChunks,\n      rhs,\n      setRHS,\n    } = this.props;\n\n    const newChunks = [...chunks];\n    newChunks[index] = {\n      ...newChunks[index],\n      text: value,\n      errorState: { status: 'notLinted' },\n    };\n    for (let i = index; i < newChunks.length; i += 1) {\n      newChunks[i] = {\n        ...newChunks[i],\n        startLine: getStartLineForIndex(newChunks, i),\n      };\n    }\n    setChunks(newChunks);\n\n    if (!rhs.outdated) {\n      setRHS({ ...rhs, outdated: true });\n    }\n  }\n\n  handleArrowUp(editor: any, event: Event) {\n    const {\n      index,\n      setFocusedChunk,\n      setShouldAdvanceCursor,\n    } = this.props;\n    const pos = (editor as any).getCursor();\n    if (pos.line === 0 && index > 0) {\n      setFocusedChunk(index - 1);\n      setShouldAdvanceCursor(false);\n      event.preventDefault();\n    }\n  }\n\n  handleArrowDown(editor: any, event: Event) {\n    const {\n      index,\n      setFocusedChunk,\n      chunks,\n      setShouldAdvanceCursor,\n    } = this.props;\n    const pos = (editor as any).getCursor();\n    if (pos.line === chunks[index].text.split('\\n').length - 1 && index < chunks.length - 1) {\n      setFocusedChunk(index + 1);\n      setShouldAdvanceCursor(false);\n      event.preventDefault();\n    }\n  }\n\n  handleEnter(editor: any, event: Event) {\n    const {\n      enqueueEffect,\n      setShouldAdvanceCursor,\n    } = this.props;\n    const pos = (editor as any).getCursor();\n    const token = editor.getTokenAt(pos);\n    if ((event as any).shiftKey) {\n      setShouldAdvanceCursor(false);\n      enqueueEffect('saveFile');\n      event.preventDefault();\n    } else if (token.state.lineState.tokens.length === 0) {\n      setShouldAdvanceCursor(true);\n      enqueueEffect('saveFile');\n      event.preventDefault();\n    }\n  }\n\n  handleDelete(event: Event) {\n    const {\n      chunks, index, setChunks, setFocusedChunk,\n    } = this.props;\n    if (index === 0 && chunks.length > 1 && chunks[0].text.trim() === '') {\n      const newChunks = [...chunks.slice(1, chunks.length)];\n      for (let i = 0; i < newChunks.length; i += 1) {\n        newChunks[i] = {\n          ...newChunks[i],\n          startLine: getStartLineForIndex(newChunks, i),\n        };\n      }\n      setChunks(newChunks);\n      setFocusedChunk(0);\n      event.preventDefault();\n    } else if (index > 0 && index < chunks.length - 1 && chunks[index].text.trim() === '') {\n      const newChunks = [\n        ...chunks.slice(0, index),\n        ...chunks.slice(index + 1, chunks.length)];\n      for (let i = index; i < newChunks.length; i += 1) {\n        newChunks[i] = {\n          ...newChunks[i],\n          startLine: getStartLineForIndex(newChunks, i),\n        };\n      }\n      setChunks(newChunks);\n      event.preventDefault();\n    }\n  }\n\n  handleBackspace(event: Event) {\n    const {\n      chunks, index, setChunks, setFocusedChunk,\n    } = this.props;\n    if (index === 0 && chunks.length > 1 && chunks[0].text.trim() === '') {\n      const newChunks = [...chunks.slice(1, chunks.length)];\n      for (let i = 0; i < newChunks.length; i += 1) {\n        newChunks[i] = {\n          ...newChunks[i],\n          startLine: getStartLineForIndex(newChunks, i),\n        };\n      }\n      setChunks(newChunks);\n      setFocusedChunk(0);\n      event.preventDefault();\n    } else if (index > 0 && chunks[index].text.trim() === '') {\n      const newChunks = [\n        ...chunks.slice(0, index),\n        ...chunks.slice(index + 1, chunks.length)];\n      for (let i = index; i < newChunks.length; i += 1) {\n        newChunks[i] = {\n          ...newChunks[i],\n          startLine: getStartLineForIndex(newChunks, i),\n        };\n      }\n      setChunks(newChunks);\n      setFocusedChunk(index - 1);\n      event.preventDefault();\n    }\n  }\n\n  handleMouseDown() {\n    const {\n      index,\n      setFocusedChunk,\n      setShouldAdvanceCursor,\n    } = this.props;\n    setShouldAdvanceCursor(false);\n    setFocusedChunk(index);\n  }\n\n  render() {\n    const {\n      chunks, index, focusedChunk,\n    } = this.props;\n    const { text, startLine } = chunks[index];\n\n    return (\n      <div\n        style={{\n          width: '100%',\n          display: 'flex',\n        }}\n      >\n        <div\n          style={{\n            position: 'relative',\n            width: 0,\n            height: '100%',\n          }}\n        >\n          {(() => {\n            const chunk = chunks[index];\n\n            if (chunk.errorState.status === 'failed'\n                && focusedChunk === index) {\n              return (\n                <div style={{\n                  alignSelf: 'center',\n                  background: '#FFF2F2',\n                  position: 'absolute',\n                  top: '100%',\n                  width: '40em',\n                  zIndex: 500001,\n                  fontFamily: 'sans-serif',\n                  borderRadius: '3px',\n                  border: '0.3em solid hsl(204, 100%, 74%)',\n                  padding: '0.2em',\n                  marginRight: '1em',\n                  boxShadow: '0 0 1em',\n                }}\n                >\n                  {chunk.errorState.failures}\n                </div>\n              );\n            }\n\n            return false;\n          })()}\n        </div>\n        <div\n          style={{\n            width: '100%',\n          }}\n        >\n          <CodeMirror\n            ref={this.input}\n            onMouseDown={() => {\n              this.handleMouseDown();\n            }}\n            editorDidMount={(editor) => {\n              const { setChunk } = this.props;\n\n              const marks = editor.getDoc().getAllMarks();\n              marks.forEach((m) => m.clear());\n              editor.setSize(null, 'auto');\n\n              setChunk({ ...chunks[index], editor });\n            }}\n            value={text}\n            options={{\n              mode: 'pyret',\n              theme: 'default',\n              lineNumbers: true,\n              lineWrapping: true,\n              lineNumberFormatter: (l) => String(l + startLine),\n              autofocus: index === focusedChunk,\n            }}\n            onBeforeChange={(editor, data, value) => {\n              this.scheduleUpdate(value);\n            }}\n            onKeyDown={(editor, event) => {\n              switch ((event as any).key) {\n                case 'Enter':\n                  this.handleEnter(editor, event);\n                  break;\n                case 'Backspace':\n                  this.handleBackspace(event);\n                  break;\n                case 'Delete':\n                  this.handleDelete(event);\n                  break;\n                case 'ArrowUp':\n                  this.handleArrowUp(editor, event);\n                  break;\n                case 'ArrowDown':\n                  this.handleArrowDown(editor, event);\n                  break;\n                default:\n              }\n            }}\n            autoCursor\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connector(DefChunk);\n","import React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport {\n  DragDropContext, Droppable, Draggable, DropResult,\n} from 'react-beautiful-dnd';\nimport { Action } from './action';\nimport {\n  State,\n} from './state';\nimport { Chunk, getStartLineForIndex } from './chunk';\nimport { RHSObjects } from './rhsObject';\nimport DefChunk from './DefChunk';\n\ntype stateProps = {\n  chunks: Chunk[],\n  focusedChunk: number | undefined,\n  rhs: RHSObjects,\n};\n\ntype dispatchProps = {\n  handleReorder: any,\n  setRHS: (value: RHSObjects) => void,\n};\n\nfunction mapStateToProps(state: State): stateProps {\n  const {\n    chunks,\n    focusedChunk,\n    rhs,\n  } = state;\n\n  return {\n    chunks,\n    focusedChunk,\n    rhs,\n  };\n}\n\nfunction mapDispatchToProps(dispatch: (action: Action) => any): dispatchProps {\n  return {\n    handleReorder(\n      result: DropResult,\n      chunks: Chunk[],\n      oldFocusedId: string | false,\n    ) {\n      // Great examples! https://codesandbox.io/s/k260nyxq9v\n      const reorder = (innerChunks: Chunk[], start: number, end: number) => {\n        const newResult = Array.from(innerChunks);\n        const [removed] = newResult.splice(start, 1);\n        newResult.splice(end, 0, removed);\n        return newResult;\n      };\n      if (result.destination === undefined) { return; }\n\n      const newChunks = reorder(chunks, result.source.index, result.destination.index);\n\n      for (let i = 0; i < newChunks.length; i += 1) {\n        newChunks[i].startLine = getStartLineForIndex(newChunks, i);\n        if (result.source.index < result.destination.index) {\n          if (i >= result.source.index && i <= result.destination.index) {\n            newChunks[i].errorState.status = 'notLinted';\n          }\n        } else if (result.source.index > result.destination.index) {\n          if (i >= result.destination.index && i <= result.source.index) {\n            newChunks[i].errorState.status = 'notLinted';\n          }\n        }\n      }\n\n      // const firstAffectedChunk = Math.min(result.source.index, result.destination.index);\n\n      function getNewFocusedChunk() {\n        for (let i = 0; i < newChunks.length; i += 1) {\n          if (newChunks[i].id === oldFocusedId) {\n            return i;\n          }\n        }\n\n        return false;\n      }\n\n      dispatch({ type: 'update', key: 'chunks', value: newChunks });\n\n      if (oldFocusedId !== false) {\n        const newFocusedChunk = getNewFocusedChunk();\n        if (newFocusedChunk === false) {\n          throw new Error('handleReorder: new focused chunk is false');\n        }\n\n        if (chunks[newFocusedChunk].id !== oldFocusedId) {\n          dispatch({ type: 'update', key: 'focusedChunk', value: newFocusedChunk });\n        } else {\n          dispatch({ type: 'enqueueEffect', effect: 'saveFile' });\n        }\n      } else {\n        dispatch({ type: 'enqueueEffect', effect: 'saveFile' });\n      }\n    },\n    setRHS(value: RHSObjects) {\n      dispatch({ type: 'update', key: 'rhs', value });\n    },\n  };\n}\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype DefChunksProps = PropsFromRedux & dispatchProps & stateProps;\n\nfunction DefChunks({\n  handleReorder,\n  chunks,\n  focusedChunk,\n  rhs,\n  setRHS,\n}: DefChunksProps) {\n  const onDragEnd = (result: DropResult) => {\n    if (result.destination !== null\n        && result.source!.index !== result.destination!.index) {\n      if (focusedChunk === undefined) {\n        handleReorder(result, chunks, false);\n        setRHS({ ...rhs, outdated: true });\n      } else {\n        const fc = chunks[focusedChunk];\n        if (fc === undefined) {\n          throw new Error('onDragEnd: chunks[focusedChunk] is undefined');\n        }\n        handleReorder(result, chunks, fc.id);\n        setRHS({ ...rhs, outdated: true });\n      }\n    }\n  };\n\n  function setupChunk(chunk: Chunk, index: number) {\n    const focused = focusedChunk === index;\n\n    function getBorderColor() {\n      if (focused && chunk.errorState.status === 'failed') {\n        return 'red';\n      }\n\n      if (!focused && chunk.errorState.status === 'failed') {\n        return '#ff9999';\n      }\n\n      if (focused && chunk.errorState.status === 'notLinted') {\n        return 'orange';\n      }\n\n      if (!focused && chunk.errorState.status === 'notLinted') {\n        return 'yellow';\n      }\n\n      if (focused) {\n        return 'lightgray';\n      }\n\n      return '#eee';\n    }\n\n    const border = getBorderColor();\n\n    return (\n      <Draggable key={chunk.id} draggableId={chunk.id} index={index}>\n        {(draggableProvided) => (\n          <div\n            ref={draggableProvided.innerRef}\n            // eslint-disable-next-line react/jsx-props-no-spreading\n            {...draggableProvided.draggableProps}\n          >\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                width: '100%',\n              }}\n            >\n              <div\n              // eslint-disable-next-line react/jsx-props-no-spreading\n                {...draggableProvided.dragHandleProps}\n                style={{\n                  minWidth: '1.5em',\n                  height: 'auto',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  borderLeft: '1px solid lightgray',\n                  background: `${border}`,\n                  borderRadius: '75% 0% 0% 75%',\n                  marginLeft: '0.5em',\n                  userSelect: 'none',\n                }}\n              >\n                ::\n              </div>\n              <DefChunk\n                key={chunk.id}\n                index={index}\n                focused={focused}\n              />\n            </div>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n\n  const allChunks = chunks.map(setupChunk);\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"droppable\">\n        {(provided) => (\n          <div\n            // eslint-disable-next-line react/jsx-props-no-spreading\n            {...provided.droppableProps}\n            ref={provided.innerRef}\n          >\n            {allChunks}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n}\n\nexport default connector(DefChunks);\n","import React from 'react';\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\nimport 'codemirror/lib/codemirror.css';\nimport 'pyret-codemirror-mode/css/pyret.css';\n\n// pyret-codemirror-mode/mode/pyret.js expects window.CodeMirror to exist and\n// to be bound to the 'codemirror' import.\nimport * as RawCodeMirror from 'codemirror';\n\n(window as any).CodeMirror = RawCodeMirror;\nrequire('pyret-codemirror-mode/mode/pyret');\n\ntype Props = {\n  onEdit: (s: string) => void,\n  highlights: number[][],\n  text: string\n};\ntype State = {\n  editor: CodeMirror.Editor | null\n};\n\nexport default class SingleCodeMirrorDefinitions extends React.Component<Props, State> {\n  constructor(props : Props) {\n    super(props); this.state = { editor: null };\n  }\n\n  componentDidUpdate() {\n    const { editor } = this.state;\n    const { highlights } = this.props;\n\n    if (editor !== null) {\n      if (highlights.length > 0) {\n        for (let i = 0; i < highlights.length; i += 1) {\n          editor.getDoc().markText(\n            {\n              line: highlights[i][0] - 1,\n              ch: highlights[i][1],\n            },\n            {\n              line: highlights[i][2] - 1,\n              ch: highlights[i][3],\n            },\n            { className: 'styled-background-error' },\n          );\n        }\n      } else {\n        const marks = editor.getDoc().getAllMarks();\n        for (let i = 0; i < marks.length; i += 1) {\n          marks[i].clear();\n        }\n      }\n    }\n  }\n\n  onChange = (editor: CodeMirror.Editor, data: CodeMirror.EditorChange, value: string): void => {\n    const { onEdit } = this.props;\n\n    this.setState({ editor });\n\n    for (let i = 0; i < editor.getDoc().getAllMarks().length; i += 1) {\n      editor.getDoc().getAllMarks()[i].clear();\n    }\n    onEdit(value);\n  };\n\n  render() {\n    const { text } = this.props;\n\n    return (\n      <CodeMirror\n        value={text}\n        options={{\n          mode: 'pyret',\n          theme: 'default',\n          lineNumbers: true,\n          lineWrapping: true,\n        }}\n        onChange={this.onChange}\n        autoCursor={false}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  File,\n  Folder,\n} from 'react-feather';\nimport * as control from './control';\n\ntype FSItemProps = {\n  onClick: () => void;\n  path: string;\n  selected: boolean;\n};\n\ntype FSItemState = {};\n\nexport default class FSItem extends React.Component<FSItemProps, FSItemState> {\n  render() {\n    const { path, selected, onClick } = this.props;\n\n    const stats = control.fs.statSync(path);\n\n    const label = (() => {\n      if (stats.isDirectory()) {\n        return (\n          <Folder />\n        );\n      } if (stats.isFile()) {\n        return (\n          <File />\n        );\n      }\n      return '?';\n    })();\n\n    const background = selected ? 'darkgray' : 'rgba(0, 0, 0, 0.3)';\n\n    return (\n      <button\n        onClick={onClick}\n        style={{\n          background,\n          border: 0,\n          height: '2.7em',\n          color: '#fff',\n          textAlign: 'left',\n          flex: 'none',\n          cursor: 'pointer',\n        }}\n        type=\"button\"\n      >\n        <div style={{\n          display: 'flex',\n          flexDirection: 'row',\n        }}\n        >\n          <div style={{\n            width: '1em',\n            paddingRight: '1em',\n          }}\n          >\n            {label}\n          </div>\n          <div>\n            {control.bfsSetup.path.parse(path).base}\n          </div>\n        </div>\n      </button>\n    );\n  }\n}\n","// TODO (michael): improve accessibilty by enabling these rules\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n\nimport React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport {\n  Upload,\n  FilePlus,\n  FolderPlus,\n} from 'react-feather';\nimport * as control from './control';\nimport * as action from './action';\nimport FSItem from './FSItem';\n\ntype stateProps = {\n  browseRoot: string,\n  browsePath: string\n};\n\nfunction mapStateToProps(state: any): stateProps {\n  return {\n    browseRoot: state.browseRoot,\n    browsePath: state.browsePath,\n  };\n}\n\ntype dispatchProps = {\n  setBrowsePath: (path: string) => void,\n  onExpandChild: (path: string) => void,\n};\n\nfunction mapDispatchToProps(dispatch: (action: action.Action) => any): dispatchProps {\n  return {\n    setBrowsePath: (path: string) => dispatch({\n      type: 'update',\n      key: 'browsePath',\n      value: path,\n    }),\n    onExpandChild: (path: string) => dispatch({\n      type: 'update',\n      key: 'currentFile',\n      value: path,\n    }),\n  };\n}\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype FSBrowserProps = PropsFromRedux & dispatchProps & stateProps;\n\nenum EditType {\n  CreateFile,\n  CreateDirectory\n}\n\ntype FSBrowserState = {\n  editType: EditType | undefined,\n  editValue: string,\n  selected: string | undefined,\n};\n\nclass FSBrowser extends React.Component<FSBrowserProps, FSBrowserState> {\n  static compareFSItemPair(a: [string, FSItem], b: [string, FSItem]) {\n    if (a[0] < b[0]) {\n      return -1;\n    } if (a[0] > b[0]) {\n      return 1;\n    }\n    return 0;\n  }\n\n  constructor(props: FSBrowserProps) {\n    super(props);\n\n    this.state = {\n      editType: undefined,\n      editValue: '',\n      selected: undefined,\n    };\n  }\n\n  get browsePathString() {\n    const { browsePath } = this.props;\n    return browsePath;\n  }\n\n  get browsingRoot() {\n    const { browsePath, browseRoot } = this.props;\n    return browsePath === browseRoot;\n  }\n\n  traverseUp = (): void => {\n    const { browsePath, setBrowsePath } = this.props;\n\n    const newPath = control.bfsSetup.path.join(browsePath, '..');\n\n    this.setState({\n      selected: undefined,\n    });\n\n    setBrowsePath(newPath);\n  };\n\n  traverseDown = (childDirectory: string): void => {\n    const { browsePath, setBrowsePath } = this.props;\n\n    const newPath = control.bfsSetup.path.join(browsePath, childDirectory);\n\n    this.setState({\n      selected: undefined,\n    });\n\n    setBrowsePath(newPath);\n  };\n\n  expandChild = (child: string): void => {\n    const { onExpandChild } = this.props;\n\n    const fullChildPath = control.bfsSetup.path.join(this.browsePathString, child);\n    const stats = control.fs.statSync(fullChildPath);\n\n    if (stats.isDirectory()) {\n      this.traverseDown(child);\n    } else if (stats.isFile()) {\n      this.setState({\n        selected: child,\n      });\n\n      onExpandChild(fullChildPath);\n    }\n  };\n\n  createFSItemPair = (filePath: string): [string, any] => {\n    const { browsePath } = this.props;\n    const { selected } = this.state;\n\n    return [\n      filePath,\n      <FSItem\n        key={filePath}\n        onClick={() => this.expandChild(filePath)}\n        path={control.bfsSetup.path.join(browsePath, filePath)}\n        selected={filePath === selected}\n      />,\n    ];\n  };\n\n  toggleEditFile = (): void => {\n    const { editType } = this.state;\n\n    if (editType === EditType.CreateFile) {\n      this.setState({\n        editType: undefined,\n      });\n    } else {\n      this.setState({\n        editType: EditType.CreateFile,\n      });\n    }\n  };\n\n  toggleEditDirectory = (): void => {\n    const { editType } = this.state;\n\n    if (editType === EditType.CreateDirectory) {\n      this.setState({\n        editType: undefined,\n      });\n    } else {\n      this.setState({\n        editType: EditType.CreateDirectory,\n      });\n    }\n  };\n\n  handleSubmit = (value: React.SyntheticEvent): void => {\n    const { editValue, editType } = this.state;\n    const { browsePath } = this.props;\n\n    value.preventDefault();\n\n    const name = editValue;\n    const path = control.bfsSetup.path.join(browsePath, name);\n\n    if (editType === EditType.CreateFile) {\n      control.createFile(path);\n    } else {\n      control.createDirectory(path);\n    }\n\n    this.setState({\n      editType: undefined,\n      editValue: '',\n    });\n  };\n\n  onChange = (event: React.SyntheticEvent): void => {\n    this.setState({\n      editValue: (event.target as HTMLInputElement).value,\n    });\n  };\n\n  deleteSelected = (): void => {\n    const { selected } = this.state;\n    const { browsePath } = this.props;\n\n    if (selected === undefined) {\n      control.removeDirectory(this.browsePathString);\n\n      this.traverseUp();\n    } else {\n      control.removeFile(\n        control.bfsSetup.path.join(browsePath, selected),\n      );\n\n      this.setState({\n        selected: undefined,\n      });\n    }\n  };\n\n  selectCurrentDirectory = (): void => {\n    this.setState({\n      selected: undefined,\n    });\n  };\n\n  uploadFile = (event: any): void => {\n    const { browsePath } = this.props;\n\n    const file = event.target.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n\n      reader.onload = (e: any) => {\n        const data = e.target.result;\n        const { name } = file;\n\n        control.bfsSetup.fs.writeFileSync(\n          control.bfsSetup.path.join(browsePath, name),\n          data,\n        );\n\n        this.forceUpdate();\n      };\n\n      reader.readAsText(file);\n    }\n  };\n\n  render() {\n    const { editType, editValue, selected } = this.state;\n    const { browsePath } = this.props;\n\n    const that = this;\n\n    function makeEditor() {\n      if (editType !== undefined) {\n        return (\n          <div style={{\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n          }}\n          >\n            <pre style={{\n              paddingLeft: '1em',\n              paddingRight: '1em',\n            }}\n            >\n              {editType === EditType.CreateFile ? (\n                <div>Name:</div>\n              ) : (\n                <div style={{ display: 'flex', flexDirection: 'row' }}>\n                  Name:\n                </div>\n              )}\n            </pre>\n            <form\n              onSubmit={that.handleSubmit}\n              style={{\n                height: '100%',\n                flexGrow: 1,\n              }}\n            >\n              <input\n                type=\"text\"\n                value={editValue}\n                onChange={that.onChange}\n                style={{\n                  border: 0,\n                  padding: 0,\n                  width: '100%',\n                  height: '100%',\n                }}\n              />\n            </form>\n          </div>\n        );\n      }\n\n      return false;\n    }\n    const editor = makeEditor();\n\n    return (\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\n          <div\n            className=\"fs-browser-item\"\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              height: 'auto',\n            }}\n          >\n            <div\n              onClick={this.selectCurrentDirectory}\n              style={{\n                cursor: 'pointer',\n                fontFamily: 'monospace',\n                display: 'flex',\n                alignItems: 'center',\n                paddingLeft: '1em',\n                paddingRight: '1em',\n                background: selected ? 'none' : 'darkgray',\n              }}\n            >\n              {control.bfsSetup.path.parse(browsePath).base || '/'}\n            </div>\n            <div style={{\n              flexGrow: 1,\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'flex-end',\n            }}\n            >\n              <label\n                className=\"fs-browser-item\"\n                style={{\n                  width: '2.3em',\n                  height: '100%',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                <input\n                  type=\"file\"\n                  onChange={this.uploadFile}\n                  style={{\n                    display: 'none',\n                  }}\n                />\n                <Upload />\n              </label>\n              <button\n                className=\"fs-browser-item\"\n                onClick={this.toggleEditFile}\n                type=\"button\"\n              >\n                <FilePlus />\n              </button>\n              <button\n                className=\"fs-browser-item\"\n                onClick={this.toggleEditDirectory}\n                type=\"button\"\n              >\n                <FolderPlus />\n              </button>\n              {/* {!this.browsingRoot\n                  && (\n                  <button\n                  className=\"fs-browser-item\"\n                  onClick={this.deleteSelected}\n                  type=\"button\"\n                  >\n                  <X />\n                  </button>\n                  )} */}\n            </div>\n          </div>\n          {editor}\n          {!this.browsingRoot && (\n          <FSItem\n            onClick={this.traverseUp}\n            path=\"..\"\n            selected={false}\n          />\n          )}\n          {\n                        control.fs\n                          .readdirSync(this.browsePathString)\n                          .map(this.createFSItemPair)\n                          .sort(FSBrowser.compareFSItemPair)\n                          .map((x: [string, FSItem]) => x[1])\n                    }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connector(FSBrowser);\n","import React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { State } from './state';\nimport { Action } from './action';\n\ntype stateProps = {\n  fontSize: number,\n};\n\nfunction mapStateToProps(state: State): stateProps {\n  const { fontSize } = state;\n  return {\n    fontSize,\n  };\n}\n\ntype dispatchProps = {\n  onIncrease: (oldSize: number) => void,\n  onDecrease: (oldSize: number) => void,\n  onReset: () => void,\n};\n\nfunction mapDispatchToProps(dispatch: (action: Action) => any): dispatchProps {\n  return {\n    onIncrease(oldSize: number): void {\n      dispatch({ type: 'update', key: 'fontSize', value: oldSize + 1 });\n    },\n    onDecrease(oldSize: number): void {\n      dispatch({ type: 'update', key: 'fontSize', value: oldSize - 1 });\n    },\n    onReset(): void {\n      dispatch({ type: 'update', key: 'fontSize', value: 12 });\n    },\n  };\n}\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype FontSizeProps = PropsFromRedux & dispatchProps & stateProps;\n\nfunction FontSize({\n  onIncrease, onDecrease, onReset, fontSize,\n}: FontSizeProps) {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'row',\n        height: '2.7em',\n      }}\n    >\n      <button\n        className=\"option\"\n        onClick={() => onDecrease(fontSize)}\n        type=\"button\"\n        style={{\n          width: '2.7em',\n        }}\n      >\n        -\n      </button>\n      <button\n        className=\"option\"\n        onClick={onReset}\n        type=\"button\"\n        style={{\n          flexGrow: 2,\n        }}\n      >\n        Font (\n        {fontSize}\n        {' '}\n        px)\n      </button>\n      <button\n        className=\"option\"\n        onClick={() => onIncrease(fontSize)}\n        type=\"button\"\n        style={{\n          width: '2.7em',\n        }}\n      >\n        +\n      </button>\n    </div>\n  );\n}\n\nexport default connector(FontSize);\n","// TODO (michael): improve accessibilty by enabling these rules\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\nimport React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { MenuItems } from './menu';\nimport { State, EditorMode } from './state';\nimport { Action } from './action';\nimport FSBrowser from './FSBrowser';\nimport FontSize from './FontSize';\n\ntype StateProps = {\n  menuItems: MenuItems,\n  menuTabVisible: false | number,\n};\n\nfunction mapStateToProps(state: State): StateProps {\n  const { menuItems, menuTabVisible } = state;\n  return { menuItems, menuTabVisible };\n}\n\ntype DispatchProps = {\n  setEditorMode: (mode: EditorMode) => void,\n};\n\nfunction mapDispatchToProps(dispatch: (action: Action) => any): DispatchProps {\n  return {\n    setEditorMode: (mode: EditorMode) => {\n      dispatch({ type: 'update', key: 'editorMode', value: mode });\n    },\n  };\n}\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype MenuProps = PropsFromRedux & DispatchProps & StateProps;\n\nfunction Menu({ menuItems, menuTabVisible, setEditorMode }: MenuProps) {\n  function getTab() {\n    if (menuTabVisible === false) {\n      return false;\n    }\n\n    switch (menuItems[menuTabVisible].name) {\n      case 'Files':\n        return (\n          <FSBrowser />\n        );\n      case 'Options':\n        return (\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n            }}\n          >\n            <div\n              style={{\n                display: 'flex',\n                height: '2.7em',\n              }}\n            >\n              <button\n                onClick={() => setEditorMode(EditorMode.Text)}\n                className=\"option\"\n                key=\"TextEditor\"\n                type=\"button\"\n                style={{\n                  width: '50%',\n                }}\n              >\n                Text\n              </button>\n              <button\n                onClick={() => setEditorMode(EditorMode.Chunks)}\n                className=\"option\"\n                key=\"ChunkEditor\"\n                type=\"button\"\n                style={{\n                  width: '50%',\n                }}\n              >\n                Chunks\n              </button>\n            </div>\n            <FontSize key=\"FontSize\" />\n          </div>\n        );\n      default:\n        throw new Error(`Menu: unknown menu item name, ${menuItems[menuTabVisible].name}`);\n    }\n  }\n\n  const tab = getTab();\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        background: '#c8c8c8',\n        overflowY: tab === false ? undefined : 'scroll',\n        minWidth: tab === false ? undefined : '16em',\n      }}\n    >\n      {tab}\n    </div>\n  );\n}\n\nexport default connector(Menu);\n\n// export default class Menu extends React.Component<MenuProps, MenuState> {\n//   constructor(props: MenuProps) {\n//     super(props);\n//\n//     this.state = {\n//       visible: false,\n//       tab: 0,\n//     };\n//   }\n//\n//   toggleTab = (n: number): void => {\n//     const { tab, visible } = this.state;\n//     if (tab === n) {\n//       this.setState({\n//         visible: !visible,\n//       });\n//     } else {\n//       this.setState({\n//         tab: n,\n//         visible: true,\n//       });\n//     }\n//   };\n//\n//   render() {\n//     const { children } = this.props;\n//     const { visible, tab } = this.state;\n//\n//     function getChildArray() {\n//       if (Array.isArray(children)) {\n//         return children;\n//       }\n//       return [children];\n//     }\n//\n//     const childArray = getChildArray();\n//\n//     const childNodes = childArray.map((childTab: any, index: number) => (\n//       <div\n//         className={(\n//           visible && tab === index) ? (\n//             'menu-tab-active'\n//           ) : (\n//             'menu-tab-inactive'\n//           )}\n//         key={childTab.props.name}\n//         onClick={() => this.toggleTab(index)}\n//       >\n//         {childTab.props.icon}\n//       </div>\n//     ));\n//\n//     const content = childArray[tab];\n//\n//     return (\n//       <div className=\"menu-container\">\n//         <div className=\"menu-tabbar\">\n//           {childNodes}\n//         </div>\n//         {visible && content}\n//       </div>\n//     );\n//   }\n// }\n","// TODO (michael): improve accessibilty by enabling these rules\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\nimport React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { Action } from './action';\nimport { MenuItems } from './menu';\nimport { State } from './state';\n\ntype StateProps = {\n  menuItems: MenuItems,\n  menuTabVisible: false | number,\n};\n\nfunction mapStateToProps(state: State): StateProps {\n  const { menuItems, menuTabVisible } = state;\n  return { menuItems, menuTabVisible };\n}\n\ntype DispatchProps = {\n  toggleTab: (tab: number) => void,\n};\n\nfunction mapDispatchToProps(dispatch: (action: Action) => any): DispatchProps {\n  return {\n    toggleTab(tab) {\n      dispatch({ type: 'update', key: 'menuTabVisible', value: tab });\n    },\n  };\n}\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype MenuBarProps = PropsFromRedux & DispatchProps & StateProps;\n\nfunction MenuBar({ menuItems, menuTabVisible, toggleTab }: MenuBarProps) {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        height: '100%',\n      }}\n    >\n      {menuItems.map((item, index) => {\n        const { name } = item;\n        return (\n          <button\n            type=\"button\"\n            onClick={() => toggleTab(index)}\n            style={{\n              background: menuTabVisible === index ? 'darkgray' : '#979797',\n              height: '100%',\n              border: 'none',\n              color: 'rgb(255, 255, 255)',\n              marginRight: '0.1em',\n            }}\n            key={name}\n          >\n            {name}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default connector(MenuBar);\n","import React from 'react';\n\ntype FooterProps = {\n  message: string;\n};\n\nexport default function Footer({ message }: FooterProps) {\n  return (\n    <div className=\"footer-container\">\n      {message}\n    </div>\n  );\n}\n","// TODO (michael): improve accessibilty by enabling these rules\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\nimport React from 'react';\n\nexport default function Dropdown({ children }: { children: any }) {\n  return (\n    <div\n      className=\"run-dropdown\"\n      onClick={(e) => e.stopPropagation()}\n    >\n      {children}\n    </div>\n  );\n}\n","// TODO (michael): improve accessibilty by enabling these rules\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\nimport React from 'react';\n\nexport type DropdownOptionProps = {\n  enabled: boolean,\n  onClick: () => void,\n  children: React.ReactNode,\n};\n\nexport default function DropdownOption({ enabled, onClick, children }: DropdownOptionProps) {\n  const internalName = `DropdownOption${new Date().getTime()}`;\n\n  return (\n    <div\n      className={enabled ? 'run-option-enabled' : 'run-option-disabled'}\n      onClick={onClick}\n    >\n      <label\n        htmlFor={internalName}\n        className=\"run-option-label\"\n      >\n        {children}\n      </label>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Header({ children }: { children: any }) {\n  return (\n    <div\n      className=\"header-container\"\n      style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from 'react';\n\nexport type InteractionErrorProps = {\n  fontSize: number,\n  children: React.ReactNode,\n};\n\nexport default function InteractionError({ fontSize, children }: InteractionErrorProps) {\n  return (\n    <div className=\"interaction-error\">\n      <p style={{\n        fontSize,\n        padding: 0,\n        margin: 0,\n      }}\n      >\n        {children}\n      </p>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport { connect, ConnectedProps } from 'react-redux';\nimport SplitterLayout from 'react-splitter-layout';\nimport { Chunk } from './chunk';\nimport * as State from './state';\nimport { EditorMode } from './state';\nimport RHS from './RHS';\nimport DefChunks from './DefChunks';\nimport SingleCodeMirrorDefinitions from './SingleCodeMirrorDefinitions';\nimport Menu from './Menu';\nimport MenuBar from './MenuBar';\nimport Footer from './Footer';\nimport Dropdown from './Dropdown';\nimport DropdownOption from './DropdownOption';\nimport Header from './Header';\nimport InteractionError from './InteractionError';\nimport * as control from './control';\nimport 'react-splitter-layout/lib/index.css';\nimport * as action from './action';\n\ntype stateProps = {\n  browseRoot: string,\n  currentFileContents: undefined | string,\n  definitionsHighlights: number[][],\n  fontSize: number,\n  stopify: boolean,\n  checks: any[],\n  interactionErrors: any[],\n  editorMode: EditorMode,\n  chunks: Chunk[],\n  running: boolean,\n  compiling: boolean | 'out-of-date',\n  linting: boolean,\n  dropdownVisible: boolean,\n  autoRun: boolean,\n  typeCheck: boolean,\n};\n\nfunction mapStateToProps(state: State.State): stateProps {\n  return {\n    browseRoot: state.browseRoot,\n    currentFileContents: state.currentFileContents,\n    definitionsHighlights: state.definitionsHighlights,\n    fontSize: state.fontSize,\n    stopify: state.runKind === control.backend.RunKind.Async,\n    checks: state.checks,\n    interactionErrors: state.interactionErrors,\n    editorMode: state.editorMode,\n    chunks: state.chunks,\n    running: state.running,\n    compiling: state.compiling,\n    linting: state.linting,\n    dropdownVisible: state.dropdownVisible,\n    autoRun: state.autoRun,\n    typeCheck: state.typeCheck,\n  };\n}\n\ntype dispatchProps = {\n  stop: () => void,\n  run: () => void,\n  updateContents: (contents: string) => void,\n  setEditorMode: (mode: EditorMode) => void,\n  setAutoRun: (autoRun: boolean) => void,\n  setStopify: (stopify: boolean) => void,\n  setTypeCheck: (typeCheck: boolean) => void,\n  setDropdownVisible: (dropdownVisible: boolean) => void,\n};\n\nfunction mapDispatchToProps(dispatch: (action: action.Action) => any): dispatchProps {\n  return {\n    stop: () => dispatch({ type: 'enqueueEffect', effect: 'stop' }),\n    run: () => dispatch({ type: 'enqueueEffect', effect: 'saveFile' }),\n    updateContents: (contents: string) => dispatch({\n      type: 'update',\n      key: 'currentFileContents',\n      value: contents,\n    }),\n    setEditorMode: (mode: EditorMode) => {\n      dispatch({ type: 'update', key: 'editorMode', value: mode });\n    },\n    setAutoRun: (autoRun: boolean) => {\n      dispatch({ type: 'update', key: 'autoRun', value: autoRun });\n    },\n    setStopify: (stopify: boolean) => {\n      if (stopify) {\n        dispatch({ type: 'update', key: 'runKind', value: control.backend.RunKind.Async });\n      } else {\n        dispatch({ type: 'update', key: 'runKind', value: control.backend.RunKind.Sync });\n      }\n    },\n    setTypeCheck: (typeCheck: boolean) => {\n      dispatch({ type: 'update', key: 'typeCheck', value: typeCheck });\n    },\n    setDropdownVisible: (dropdownVisible: boolean) => {\n      dispatch({ type: 'update', key: 'dropdownVisible', value: dropdownVisible });\n    },\n  };\n}\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ncontrol.installFileSystem();\ncontrol.loadBuiltins();\n\n// type EditorProps = {};\n\ntype EditorProps = PropsFromRedux & dispatchProps & stateProps;\n\nexport class Editor extends React.Component<EditorProps, any> {\n  makeHeaderButton = (text: string, enabled: boolean, onClick: () => void) => (\n    <button\n      className={(enabled ? 'run-option-enabled' : 'run-option-disabled')}\n      onClick={onClick}\n      type=\"button\"\n    >\n      {text}\n    </button>\n  );\n\n  makeDefinitions() {\n    const {\n      editorMode,\n      currentFileContents,\n      updateContents,\n      definitionsHighlights,\n    } = this.props;\n\n    if (editorMode === EditorMode.Text) {\n      return (\n        <SingleCodeMirrorDefinitions\n          text={currentFileContents || ''}\n          onEdit={(contents: string) => updateContents(contents)}\n          highlights={definitionsHighlights}\n        />\n      );\n    }\n\n    if (editorMode === EditorMode.Chunks) {\n      return (\n        <DefChunks />\n      );\n    }\n\n    throw new Error('Unknown editor mode');\n  }\n\n  render() {\n    const {\n      fontSize,\n      interactionErrors,\n      stopify,\n      stop,\n      run,\n      running,\n      compiling,\n      linting,\n      dropdownVisible,\n      autoRun,\n      typeCheck,\n      setAutoRun,\n      setStopify,\n      setTypeCheck,\n      setDropdownVisible,\n    } = this.props;\n\n    const interactionValues = (\n      <RHS />\n    );\n\n    const dropdown = dropdownVisible && (\n      <Dropdown>\n        <DropdownOption\n          enabled={autoRun}\n          onClick={() => setAutoRun(!autoRun)}\n        >\n          Auto Run\n        </DropdownOption>\n        <DropdownOption\n          enabled={stopify}\n          onClick={() => setStopify(!stopify)}\n        >\n          Stopify\n        </DropdownOption>\n        <DropdownOption\n          enabled={typeCheck}\n          onClick={() => setTypeCheck(!typeCheck)}\n        >\n          Type Check\n        </DropdownOption>\n      </Dropdown>\n    );\n\n    const rightHandSide = (\n      <div className=\"interactions-area-container\">\n        {interactionErrors.length > 0 ? (\n          <SplitterLayout\n            vertical\n            percentage\n          >\n            {interactionValues}\n            <InteractionError fontSize={fontSize}>\n              {(() => {\n                if (interactionErrors.length === 1\n                        && interactionErrors[0] === 'Could not find module with uri: builtin://global') {\n                  return ['The first line of your program should be `import global as G`'];\n                }\n                return interactionErrors;\n              })()}\n            </InteractionError>\n          </SplitterLayout>\n        ) : interactionValues}\n      </div>\n    );\n\n    const definitions = this.makeDefinitions();\n\n    return (\n      <div className=\"page-container\">\n        <Header>\n          <div>\n            <MenuBar />\n          </div>\n          <div\n            style={{\n              height: '100%',\n            }}\n          >\n            {stopify && running ? (\n              <button\n                className=\"stop-available\"\n                onClick={stop}\n                type=\"button\"\n              >\n                Stop\n              </button>\n            ) : (\n              <button\n                className=\"stop-unavailable\"\n                type=\"button\"\n              >\n                Stop\n              </button>\n            )}\n            <div\n              className=\"run-container\"\n            >\n              <button\n                className=\"run-ready\"\n                type=\"button\"\n                onClick={run}\n              >\n                Run\n              </button>\n              <button\n                type=\"button\"\n                className=\"run-options\"\n                onClick={() => setDropdownVisible(!dropdownVisible)}\n                onBlur={() => setDropdownVisible(false)}\n              >\n                &#8628;\n                {dropdown}\n              </button>\n            </div>\n          </div>\n        </Header>\n        <div className=\"code-container\">\n          <Menu />\n          <SplitterLayout\n            vertical={false}\n            percentage\n          >\n            <div\n              className=\"edit-area-container\"\n              style={{ fontSize }}\n            >\n              {definitions}\n            </div>\n            {rightHandSide}\n          </SplitterLayout>\n        </div>\n        <Footer message={`linting; ${linting}; compiling: ${compiling}; running: ${running}`} />\n      </div>\n    );\n  }\n}\n\nexport default connector(Editor);\n","import { compiled, compiledBuiltin } from './path';\n\nexport default function load(\n  fs: any,\n  prewrittenDirectory: string,\n  uncompiledDirectory: string,\n  runtimeFiles: any,\n): void {\n  if (!fs.existsSync(prewrittenDirectory)) {\n    fs.mkdirSync(prewrittenDirectory);\n  }\n\n  if (!fs.existsSync(compiled)) {\n    fs.mkdirSync(compiled);\n  }\n\n  if (!fs.existsSync(compiledBuiltin)) {\n    fs.mkdirSync(compiledBuiltin);\n  }\n\n  runtimeFiles.forEach((item: any) => {\n    const { key, content, timestamp } = item;\n\n    const compiledPath = key.replace(/^prewritten/, 'compiled/builtin');\n\n    if (fs.existsSync(key)) {\n      const statResult = fs.statSync(key);\n      const localTimestamp = statResult.mtime.getTime();\n      if (localTimestamp < timestamp) {\n        fs.writeFileSync(key, content);\n        fs.writeFileSync(compiledPath, content);\n      }\n    } else {\n      fs.writeFileSync(key, content);\n      fs.writeFileSync(compiledPath, content);\n    }\n  });\n}\n","import { createStore } from 'redux';\nimport ideApp from './reducer';\nimport { EditorMode, CHUNKSEP, State } from './state';\nimport {\n  newId,\n  Chunk,\n} from './chunk';\nimport { Action } from './action';\nimport { RunKind } from './backend';\nimport * as control from './control';\n\ntype Dispatch = (action: Action) => void;\n\nlet currentRunner: any;\n\nfunction handleStartEditTimer(dispatch: Dispatch, editTimer: NodeJS.Timer | false) {\n  if (editTimer) {\n    clearTimeout(editTimer);\n  }\n\n  dispatch({\n    type: 'effectEnded',\n    status: 'succeeded',\n    effect: 'startEditTimer',\n    timer: setTimeout(() => {\n      dispatch({\n        type: 'effectEnded',\n        status: 'succeeded',\n        effect: 'editTimer',\n      });\n    }, 200),\n  });\n}\n\nfunction handleLoadFile(\n  dispatch: Dispatch,\n  currentFile: string,\n  editorMode: EditorMode,\n) {\n  const contents = control.openOrCreateFile(currentFile);\n\n  switch (editorMode) {\n    case EditorMode.Text:\n      dispatch({ type: 'update', key: 'currentFileContents', value: contents });\n      break;\n    case EditorMode.Chunks: {\n      const chunkStrings = contents.split(CHUNKSEP);\n      let totalLines = 0;\n      const chunks = chunkStrings.map((chunkString) => {\n        const chunk: Chunk = {\n          text: chunkString,\n          startLine: totalLines,\n          id: newId(),\n          errorState: { status: 'notLinted' },\n          editor: false,\n          needsJiggle: false,\n        };\n\n        totalLines += chunkString.split('\\n').length;\n\n        return chunk;\n      });\n\n      dispatch({ type: 'update', key: 'chunks', value: chunks });\n      break;\n    }\n    default:\n  }\n\n  dispatch({\n    type: 'effectEnded',\n    status: 'succeeded',\n    effect: 'loadFile',\n  });\n}\n\nfunction handleSetupWorkerMessageHandler(dispatch: Dispatch) {\n  function handleLog(message: string): void {\n    console.log(message);\n  }\n\n  function handleSetupFinished(): void {\n    dispatch({\n      type: 'effectEnded',\n      status: 'succeeded',\n      effect: 'setup',\n    });\n  }\n\n  function handleCompileFailure(errors: string[]): void {\n    dispatch({\n      type: 'effectEnded',\n      status: 'failed',\n      effect: 'compile',\n      errors,\n    });\n  }\n\n  function handleRuntimeFailure(errors: string[]): void {\n    dispatch({\n      type: 'effectEnded',\n      status: 'failed',\n      effect: 'run',\n      errors,\n    });\n  }\n\n  function handleLintFailure(lintFailure: { name: string, errors: string[] }): void {\n    dispatch({\n      type: 'effectEnded',\n      status: 'failed',\n      effect: 'lint',\n      name: lintFailure.name,\n      errors: lintFailure.errors,\n    });\n  }\n\n  function handleLintSuccess(lintSuccess: { name: string }): void {\n    dispatch({\n      type: 'effectEnded',\n      status: 'succeeded',\n      effect: 'lint',\n      name: lintSuccess.name,\n    });\n  }\n\n  function handleCompileSuccess(): void {\n    dispatch({\n      type: 'effectEnded',\n      status: 'succeeded',\n      effect: 'compile',\n    });\n  }\n\n  function handleCreateReplSuccess(): void {\n    dispatch({\n      type: 'effectEnded',\n      status: 'succeeded',\n      effect: 'createRepl',\n    });\n  }\n\n  function handleCompileInteractionSuccess(): void {\n    console.log('compile interaction success (nyi)');\n  }\n\n  function handleCompileInteractionFailure(): void {\n    console.log('compile interaction failure (nyi)');\n  }\n\n  control.setupWorkerMessageHandler(\n    handleLog,\n    handleSetupFinished,\n    handleCompileFailure,\n    handleRuntimeFailure,\n    handleLintFailure,\n    handleLintSuccess,\n    handleCompileSuccess,\n    handleCreateReplSuccess,\n    handleCompileInteractionSuccess,\n    handleCompileInteractionFailure,\n  );\n\n  dispatch({\n    type: 'effectEnded',\n    status: 'succeeded',\n    effect: 'setupWorkerMessageHandler',\n  });\n}\n\nfunction handleCreateRepl() {\n  control.createRepl();\n}\n\nfunction handleSaveFile(\n  dispatch: Dispatch,\n  mode: EditorMode,\n  path: string,\n  contents: string,\n  chunks: Chunk[],\n) {\n  switch (mode) {\n    case EditorMode.Text:\n      control.fs.writeFileSync(path, contents);\n      break;\n    case EditorMode.Chunks:\n      control.fs.writeFileSync(\n        path,\n        chunks.map((chunk) => chunk.text).join(CHUNKSEP),\n      );\n      break;\n    default:\n      throw new Error('handleSaveFile: unknown editor mode');\n  }\n\n  dispatch({\n    type: 'effectEnded',\n    status: 'succeeded',\n    effect: 'saveFile',\n  });\n}\n\nfunction handleCompile(dispatch: Dispatch, path: string, typeCheck: boolean) {\n  const { dir, base } = control.bfsSetup.path.parse(path);\n  control.compile(dir, base, typeCheck);\n}\n\nfunction handleRun(dispatch: Dispatch, currentFile: string, runKind: RunKind) {\n  const { base } = control.bfsSetup.path.parse(currentFile);\n  control.run(\n    control.path.runBase,\n    `${base}.js`,\n    (runResult: any) => {\n      console.log('runResult', runResult);\n      if (runResult.result.error === undefined) {\n        dispatch({\n          type: 'effectEnded',\n          status: 'succeeded',\n          effect: 'run',\n          result: runResult,\n        });\n      } else {\n        dispatch({\n          type: 'effectEnded',\n          status: 'failed',\n          effect: 'run',\n          errors: runResult.result.result,\n        });\n      }\n    },\n    (runner: any) => {\n      currentRunner = runner;\n    },\n    runKind,\n  );\n}\n\nfunction handleStop(dispatch: Dispatch) {\n  currentRunner.pause((line: number) => {\n    dispatch({\n      type: 'effectEnded',\n      status: 'succeeded',\n      effect: 'stop',\n      line,\n    });\n  });\n}\n\nfunction handleTextLint(currentFileContents: string): void {\n  control.lint(currentFileContents, 'text');\n}\n\nfunction handleChunkLint(text: string, id: string): void {\n  control.lint(text, id);\n}\n\nfunction handleFirstActionableEffect(\n  state: State,\n  dispatch: Dispatch,\n): false | { effect: number, applyEffect: () => void } {\n  const { effectQueue } = state;\n\n  for (let i = 0; i < effectQueue.length; i += 1) {\n    const effect = effectQueue[i];\n\n    switch (effect) {\n      case 'startEditTimer': {\n        const { editTimer } = state;\n        return {\n          effect: i,\n          applyEffect: () => handleStartEditTimer(dispatch, editTimer),\n        };\n      }\n      case 'loadFile':\n        {\n          console.log('loadFile');\n          const { currentFile, editorMode } = state;\n          if (currentFile !== undefined) {\n            return {\n              effect: i,\n              applyEffect: () => handleLoadFile(dispatch, currentFile, editorMode),\n            };\n          }\n        }\n        break;\n      case 'saveFile':\n        {\n          const {\n            editorMode, currentFile, currentFileContents, chunks,\n          } = state;\n          if (currentFile !== undefined && currentFileContents !== undefined) {\n            return {\n              effect: i,\n              applyEffect: () => handleSaveFile(\n                dispatch,\n                editorMode,\n                currentFile,\n                currentFileContents,\n                chunks,\n              ),\n            };\n          }\n        }\n        break;\n      case 'setupWorkerMessageHandler':\n        {\n          console.log('setupWorkerMessageHandler');\n          const { isMessageHandlerReady } = state;\n          if (!isMessageHandlerReady) {\n            return {\n              effect: i,\n              applyEffect: () => handleSetupWorkerMessageHandler(dispatch),\n            };\n          }\n        }\n        break;\n      case 'createRepl':\n        {\n          console.log('createRepl');\n          const { isReplReady } = state;\n          if (!isReplReady) {\n            return {\n              effect: i,\n              applyEffect: () => handleCreateRepl(),\n            };\n          }\n        }\n        break;\n      case 'lint': {\n        const {\n          editorMode,\n          chunks,\n          currentFileContents,\n          isSetupFinished,\n          isFileSaved,\n        } = state;\n\n        if (isSetupFinished && isFileSaved) {\n          if (currentFileContents !== undefined && editorMode === EditorMode.Text) {\n            return {\n              effect: i,\n              applyEffect: () => handleTextLint(currentFileContents),\n            };\n          }\n\n          if (editorMode === EditorMode.Chunks) {\n            const sendLintRequests = (): void => {\n              chunks.forEach(({ text, errorState, id }) => {\n                if (errorState.status !== 'succeeded') {\n                  console.log(`linting chunk ${id}`);\n                  handleChunkLint(text, id);\n                }\n              });\n            };\n\n            return {\n              effect: i,\n              applyEffect: sendLintRequests,\n            };\n          }\n        }\n\n        break;\n      }\n      case 'compile':\n        {\n          console.log('compile');\n          const {\n            currentFile,\n            typeCheck,\n            isMessageHandlerReady,\n            isSetupFinished,\n            compiling,\n            running,\n            isFileSaved,\n            chunks,\n          } = state;\n          let allLinted = true;\n\n          for (let j = 0; j < chunks.length; j += 1) {\n            if (chunks[j].errorState.status !== 'succeeded') {\n              allLinted = false;\n              break;\n            }\n          }\n\n          if (isMessageHandlerReady\n              && isSetupFinished\n              && isFileSaved\n              && compiling !== true\n              && !running\n              && allLinted) {\n            return {\n              effect: i,\n              applyEffect: () => handleCompile(dispatch, currentFile, typeCheck),\n            };\n          }\n        }\n        break;\n      case 'run': {\n        console.log('run');\n        const {\n          currentFile,\n          runKind,\n          isMessageHandlerReady,\n          isSetupFinished,\n          compiling,\n          running,\n        } = state;\n        if (isMessageHandlerReady && isSetupFinished && !compiling && !running) {\n          return {\n            effect: i,\n            applyEffect: () => handleRun(dispatch, currentFile, runKind),\n          };\n        }\n        break;\n      }\n      case 'stop': {\n        const { running } = state;\n        if (running && currentRunner !== undefined) {\n          return {\n            effect: i,\n            applyEffect: () => handleStop(dispatch),\n          };\n        }\n\n        return {\n          effect: i,\n          applyEffect: () => { },\n        };\n      }\n      default:\n        throw new Error('getFirstActionableEffect: unknown effect');\n    }\n  }\n\n  return false;\n}\n\nconst store = createStore(\n  ideApp,\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nstore.subscribe(() => {\n  const state = store.getState();\n\n  const { dispatch } = store;\n\n  const maybeEffect = handleFirstActionableEffect(state, dispatch);\n\n  if (!maybeEffect) {\n    return;\n  }\n\n  const { effect, applyEffect } = maybeEffect;\n\n  dispatch({ type: 'effectStarted', effect });\n  applyEffect();\n});\n\nstore.dispatch({ type: 'enqueueEffect', effect: 'setupWorkerMessageHandler' });\nstore.dispatch({ type: 'enqueueEffect', effect: 'loadFile' });\nstore.dispatch({ type: 'enqueueEffect', effect: 'saveFile' });\n\nexport default store;\n","import {\n  EffectFailure,\n  EffectSuccess,\n  EffectEnded,\n  FailureForEffect,\n  Update,\n  EffectStarted,\n  Action,\n  SuccessForEffect,\n  EnqueueEffect,\n} from './action';\n\nimport {\n  EditorMode,\n  State,\n  initialState,\n  CHUNKSEP,\n} from './state';\n\nimport {\n  Chunk,\n  newId,\n  getStartLineForIndex,\n  findChunkFromSrcloc,\n} from './chunk';\n\nimport {\n  Effect,\n} from './effect';\n\nimport {\n  makeRHSObjects,\n} from './rhsObject';\n\nfunction handleEnter(state: State): State {\n  const {\n    focusedChunk,\n    shouldAdvanceCursor,\n    chunks,\n  } = state;\n\n  if (focusedChunk !== undefined\n    && shouldAdvanceCursor\n    && chunks[focusedChunk] !== undefined\n    && chunks[focusedChunk].errorState.status !== 'failed') {\n    if (focusedChunk + 1 === chunks.length) {\n      const nextChunks: Chunk[] = [\n        ...chunks,\n        {\n          text: '',\n          startLine: getStartLineForIndex(chunks, focusedChunk + 1),\n          id: newId(),\n          errorState: { status: 'succeeded', effect: 'lint' },\n          editor: false,\n          needsJiggle: false,\n        },\n      ];\n      return {\n        ...state,\n        chunks: nextChunks,\n        focusedChunk: focusedChunk + 1,\n        shouldAdvanceCursor: false,\n      };\n    }\n\n    if (chunks[focusedChunk + 1].text.trim() !== '') {\n      const nextChunks: Chunk[] = [\n        ...chunks.slice(0, focusedChunk + 1),\n        {\n          text: '',\n          startLine: getStartLineForIndex(chunks, focusedChunk + 1),\n          id: newId(),\n          errorState: { status: 'succeeded', effect: 'lint' },\n          editor: false,\n          needsJiggle: false,\n        },\n        ...chunks.slice(focusedChunk + 1),\n      ];\n      for (let i = focusedChunk + 1; i < nextChunks.length; i += 1) {\n        nextChunks[i] = {\n          ...nextChunks[i],\n          startLine: getStartLineForIndex(nextChunks, i),\n        };\n      }\n      return {\n        ...state,\n        chunks: nextChunks,\n        focusedChunk: focusedChunk + 1,\n        shouldAdvanceCursor: false,\n      };\n    }\n\n    if (chunks[focusedChunk + 1].text.trim() === '') {\n      return {\n        ...state,\n        focusedChunk: focusedChunk + 1,\n        shouldAdvanceCursor: false,\n        chunks,\n      };\n    }\n  }\n\n  return state;\n}\n\nfunction handleEffectStarted(state: State, action: EffectStarted): State {\n  const oldEffectQueue = state.effectQueue;\n\n  if (oldEffectQueue[action.effect] === undefined) {\n    const message = `handleEffectStarted: effect to remove is out of bounds${JSON.stringify(action)}`;\n    throw new Error(message);\n  }\n\n  const effectQueue = [\n    ...oldEffectQueue.slice(0, action.effect),\n    ...oldEffectQueue.slice(action.effect + 1, oldEffectQueue.length),\n  ];\n\n  switch (oldEffectQueue[action.effect]) {\n    case 'createRepl':\n      return {\n        ...state,\n        creatingRepl: true,\n        effectQueue,\n      };\n    case 'lint':\n      return {\n        ...state,\n        linting: true,\n        effectQueue,\n      };\n    case 'compile':\n      return {\n        ...state,\n        compiling: true,\n        effectQueue,\n      };\n    case 'run':\n      return {\n        ...state,\n        running: true,\n        effectQueue,\n      };\n    default:\n      return {\n        ...state,\n        effectQueue,\n      };\n  }\n}\n\nfunction handleCreateReplSuccess(state: State): State {\n  return {\n    ...state,\n    creatingRepl: false,\n    isReplReady: true,\n  };\n}\n\nfunction handleStartEditTimerSuccess(\n  state: State,\n  action: SuccessForEffect<'startEditTimer'>,\n): State {\n  return {\n    ...state,\n    editTimer: action.timer,\n  };\n}\n\nfunction handleEditTimerSuccess(state: State): State {\n  const {\n    effectQueue,\n  } = state;\n\n  return {\n    ...state,\n    effectQueue: [...effectQueue, 'saveFile'],\n  };\n}\n\nfunction handleLintSuccess(state: State, action: SuccessForEffect<'lint'>): State {\n  const { editorMode } = state;\n\n  switch (editorMode) {\n    case EditorMode.Text: {\n      const { effectQueue } = state;\n      return {\n        ...state,\n        linting: false,\n        linted: true,\n        effectQueue: [...effectQueue, 'compile'],\n      };\n    }\n    case EditorMode.Chunks: {\n      const {\n        chunks,\n        effectQueue,\n        compiling,\n        running,\n      } = state;\n\n      let allLinted = true;\n      const newChunks: Chunk[] = chunks.map((chunk) => {\n        if (chunk.id === action.name) {\n          return {\n            ...chunk,\n            errorState: { status: 'succeeded', effect: 'lint' },\n          };\n        }\n\n        if (chunk.errorState.status !== 'succeeded') {\n          allLinted = false;\n        }\n\n        return chunk;\n      });\n\n      const shouldCompile = allLinted && !compiling && !running;\n\n      return {\n        ...state,\n        chunks: newChunks,\n        linted: allLinted,\n        linting: !allLinted,\n        effectQueue: shouldCompile ? [...effectQueue, 'compile'] : effectQueue,\n      };\n    }\n    default:\n      throw new Error('handleLintSuccess: unknown editor mode');\n  }\n}\n\nfunction handleCompileSuccess(state: State): State {\n  const { compiling, autoRun, effectQueue } = state;\n\n  if (compiling === 'out-of-date') {\n    return {\n      ...state,\n      compiling: false,\n      effectQueue: [...effectQueue, 'saveFile'],\n    };\n  }\n\n  return {\n    ...state,\n    compiling: false,\n    interactionErrors: [],\n    definitionsHighlights: [],\n    effectQueue: autoRun ? [...effectQueue, 'run'] : effectQueue,\n  };\n}\n\nfunction handleRunSuccess(state: State, status: SuccessForEffect<'run'>): State {\n  console.log('run result', status);\n  const rhs = makeRHSObjects(status.result, `file://${state.currentFile}`);\n\n  const {\n    chunks,\n    currentFile,\n  } = state;\n\n  const newChunks = chunks.slice();\n  const locations = status.result.result.$locations;\n  const traces = status.result.result.$traces;\n\n  locations.forEach((loc: any) => {\n    const { name, srcloc } = loc;\n    const chunk = findChunkFromSrcloc(chunks, srcloc, currentFile);\n    if (chunk !== false) {\n      newChunks[chunk].errorState = {\n        status: 'succeeded',\n        effect: 'run',\n        result: status.result.result[name],\n      };\n    }\n  });\n\n  traces.forEach((loc: any) => {\n    const { value, srcloc } = loc;\n    const chunk = findChunkFromSrcloc(chunks, srcloc, currentFile);\n    if (chunk !== false) {\n      newChunks[chunk].errorState = {\n        status: 'succeeded',\n        effect: 'run',\n        result: value,\n      };\n    }\n  });\n\n  return handleEnter({\n    ...state,\n    chunks: newChunks,\n    checks: status.result.result.$checks,\n    running: false,\n    rhs,\n  });\n}\n\nfunction handleSetupSuccess(state: State): State {\n  const { effectQueue } = state;\n\n  return {\n    ...state,\n    isSetupFinished: true,\n    settingUp: false,\n    effectQueue: [...effectQueue, 'saveFile'],\n  };\n}\n\nfunction handleStopSuccess(state: State, action: SuccessForEffect<'stop'>): State {\n  console.log('stop successful, paused on line', action.line);\n  return {\n    ...state,\n    running: false,\n  };\n}\n\nfunction handleLoadFileSuccess(state: State): State {\n  console.log('loaded a file successfully');\n  return {\n    ...state,\n  };\n}\n\nfunction handleSaveFileSuccess(state: State): State {\n  console.log('saved a file successfully');\n  const {\n    effectQueue,\n    autoRun,\n    compiling,\n    running,\n    chunks,\n  } = state;\n\n  function getNewEffectQueue(): Effect[] {\n    let needsLint = false;\n\n    for (let i = 0; i < chunks.length; i += 1) {\n      if (chunks[i].errorState.status !== 'succeeded') {\n        needsLint = true;\n        break;\n      }\n    }\n\n    if (autoRun && compiling !== true && !running) {\n      if (needsLint) {\n        return [...effectQueue, 'lint'];\n      }\n\n      if (autoRun) {\n        return [...effectQueue, 'compile'];\n      }\n    }\n\n    return effectQueue;\n  }\n\n  return {\n    ...state,\n    isFileSaved: true,\n    effectQueue: getNewEffectQueue(),\n  };\n}\n\nfunction handleSetupWorkerMessageHandlerSuccess(state: State): State {\n  return {\n    ...state,\n    isMessageHandlerReady: true,\n  };\n}\n\nfunction handleEffectSucceeded(state: State, action: EffectSuccess): State {\n  switch (action.effect) {\n    case 'createRepl':\n      return handleCreateReplSuccess(state);\n    case 'startEditTimer':\n      return handleStartEditTimerSuccess(state, action);\n    case 'editTimer':\n      return handleEditTimerSuccess(state);\n    case 'lint':\n      return handleLintSuccess(state, action);\n    case 'compile':\n      return handleCompileSuccess(state);\n    case 'run':\n      return handleRunSuccess(state, action);\n    case 'setup':\n      return handleSetupSuccess(state);\n    case 'stop':\n      return handleStopSuccess(state, action);\n    case 'loadFile':\n      return handleLoadFileSuccess(state);\n    case 'saveFile':\n      return handleSaveFileSuccess(state);\n    case 'setupWorkerMessageHandler':\n      return handleSetupWorkerMessageHandlerSuccess(state);\n    default:\n      throw new Error(`handleEffectSucceeded: unknown process ${JSON.stringify(action)}`);\n  }\n}\n\nfunction handleCreateReplFailure(): State {\n  throw new Error('handleCreateReplFailure: failed to create a REPL');\n}\n\nfunction handleLintFailure(state: State, action: FailureForEffect<'lint'>): State {\n  const { editorMode } = state;\n\n  switch (editorMode) {\n    case EditorMode.Text:\n      throw new Error('handleLintFailure: not yet implemented for text mode');\n    case EditorMode.Chunks: {\n      const { chunks } = state;\n\n      let allLinted = true;\n      const newChunks: Chunk[] = chunks.map((chunk) => {\n        if (chunk.id === action.name) {\n          const highlights: number[][] = [];\n          for (let i = 0; i < action.errors.length; i += 1) {\n            const matches = action.errors[i].match(/:\\d+:\\d+-\\d+:\\d+/g);\n            if (matches !== null) {\n              matches.forEach((m: any) => {\n                highlights.push(m.match(/\\d+/g)!.map(Number));\n              });\n            }\n          }\n\n          return {\n            ...chunk,\n            errorState: {\n              status: 'failed',\n              effect: 'lint',\n              failures: action.errors,\n              highlights,\n            },\n            needsJiggle: true,\n          };\n        }\n\n        if (chunk.errorState.status === 'notLinted') {\n          allLinted = false;\n        }\n\n        return chunk;\n      });\n\n      return handleEnter({\n        ...state,\n        chunks: newChunks,\n        linted: allLinted,\n        linting: !allLinted,\n      });\n    }\n    default:\n      throw new Error('handleLintFailure: unknown editor mode');\n  }\n}\n\nfunction handleCompileFailure(\n  state: State,\n  status: FailureForEffect<'compile'>,\n): State {\n  const { compiling } = state;\n  if (compiling === 'out-of-date') {\n    const { effectQueue } = state;\n    return {\n      ...state,\n      compiling: false,\n      effectQueue: [...effectQueue, 'saveFile'],\n    };\n  }\n\n  const { editorMode } = state;\n\n  const places: number[][] = [];\n  for (let i = 0; i < status.errors.length; i += 1) {\n    const matches = status.errors[i].match(/:\\d+:\\d+-\\d+:\\d+/g);\n    if (matches !== null) {\n      matches.forEach((m: any) => {\n        places.push(m.match(/\\d+/g)!.map(Number));\n      });\n    }\n  }\n\n  function findChunkFromSrclocResult([l1] : number[]): number | false {\n    const { chunks } = state;\n    for (let i = 0; i < chunks.length; i += 1) {\n      const end = chunks[i].startLine + chunks[i].text.split('\\n').length;\n      if (l1 >= chunks[i].startLine && l1 <= end) {\n        return i;\n      }\n    }\n    return false;\n  }\n\n  function getExistingHighlights(chunk : Chunk): number[][] | false {\n    if (chunk.errorState.status === 'failed') {\n      return chunk.errorState.highlights;\n    }\n\n    return false;\n  }\n\n  switch (editorMode) {\n    case EditorMode.Text:\n      return {\n        ...state,\n        compiling: false,\n        interactionErrors: status.errors,\n        definitionsHighlights: places,\n      };\n    case EditorMode.Chunks: {\n      if (places.length > 0) {\n        const { chunks } = state;\n        const newChunks = [...chunks];\n        for (let i = 0; i < places.length; i += 1) {\n          const chunkIndex = findChunkFromSrclocResult(places[i]);\n          if (chunkIndex) {\n            const hl = getExistingHighlights(newChunks[chunkIndex]);\n            newChunks[chunkIndex] = {\n              ...newChunks[chunkIndex],\n              errorState: {\n                status: 'failed',\n                effect: 'compile',\n                failures: status.errors,\n                highlights: hl ? [...hl, places[i]] : [places[i]],\n              },\n              needsJiggle: true,\n            };\n          }\n        }\n        return handleEnter({\n          ...state,\n          compiling: false,\n          chunks: newChunks,\n        });\n      }\n      return handleEnter({\n        ...state,\n        compiling: false,\n        interactionErrors: status.errors,\n        definitionsHighlights: places,\n      });\n    }\n    default:\n      throw new Error('handleCompileFailure: unknown editor mode');\n  }\n}\n\nfunction handleRunFailure(state: State, status: FailureForEffect<'run'>) {\n  console.log('handleFailure', status);\n  return handleEnter({\n    ...state,\n    running: false,\n    interactionErrors: [JSON.stringify(status.errors)],\n  });\n}\n\nfunction handleEffectFailed(state: State, action: EffectFailure): State {\n  switch (action.effect) {\n    case 'createRepl':\n      return handleCreateReplFailure();\n    case 'lint':\n      return handleLintFailure(state, action);\n    case 'compile':\n      return handleCompileFailure(state, action);\n    case 'run':\n      return handleRunFailure(state, action);\n    default:\n      throw new Error(`handleEffectFailed: unknown effect ${JSON.stringify(action)}`);\n  }\n}\n\nfunction handleEffectEnded(state: State, action: EffectEnded): State {\n  switch (action.status) {\n    case 'succeeded':\n      return handleEffectSucceeded(state, action);\n    case 'failed':\n      return handleEffectFailed(state, action);\n    default:\n      throw new Error(`handleEffectEnded: unknown action ${JSON.stringify(action)}`);\n  }\n}\n\nfunction handleEnqueueEffect(state: State, action: EnqueueEffect): State {\n  const { effectQueue } = state;\n  return {\n    ...state,\n    effectQueue: [...effectQueue, action.effect],\n  };\n}\n\nfunction handleSetEditorMode(state: State, newEditorMode: EditorMode): State {\n  const { editorMode } = state;\n\n  if (newEditorMode === EditorMode.Text && editorMode === EditorMode.Chunks) {\n    // we already keep currentFileContents in sync with chunk contents while\n    // in chunk mode, since we need it to save the file contents.\n    return {\n      ...state,\n      editorMode: EditorMode.Text,\n    };\n  }\n\n  if (newEditorMode === EditorMode.Chunks && editorMode === EditorMode.Text) {\n    // in text mode currentFileContents can be more up-to-date than chunks, so we\n    // need to recreate the chunks.\n\n    const { currentFileContents } = state;\n\n    if (currentFileContents === undefined) {\n      return {\n        ...state,\n        editorMode: EditorMode.Chunks,\n        chunks: [],\n      };\n    }\n\n    let totalLines = 0;\n    const chunks: Chunk[] = [];\n\n    currentFileContents.split(CHUNKSEP).forEach((chunkString) => {\n      chunks.push({\n        text: chunkString,\n        startLine: totalLines,\n        id: newId(),\n        errorState: { status: 'notLinted' },\n        editor: false,\n        needsJiggle: false,\n      });\n\n      totalLines += chunkString.split('\\n').length;\n    });\n\n    return {\n      ...state,\n      editorMode: EditorMode.Chunks,\n      chunks,\n    };\n  }\n\n  return state;\n}\n\nfunction handleSetCurrentRunner(state: State, runner: any): State {\n  return {\n    ...state,\n    currentRunner: runner,\n  };\n}\n\nfunction handleSetCurrentFileContents(state: State, contents: string): State {\n  const {\n    effectQueue,\n    compiling,\n    editorMode,\n  } = state;\n\n  if (editorMode !== EditorMode.Text) {\n    throw new Error('handleSetCurrentFileContents: not in text mode');\n  }\n\n  return {\n    ...state,\n    currentFileContents: contents,\n    effectQueue: [...effectQueue, 'startEditTimer'],\n    isFileSaved: false,\n    compiling: compiling ? 'out-of-date' : false,\n  };\n}\n\nfunction handleSetBrowsePath(state: State, path: string): State {\n  return {\n    ...state,\n    browsePath: path,\n  };\n}\n\nfunction handleSetCurrentFile(state: State, file: string): State {\n  const { effectQueue } = state;\n\n  return {\n    ...state,\n    currentFile: file,\n    effectQueue: [...effectQueue, 'loadFile'],\n  };\n}\n\nfunction handleSetChunks(state: State, chunksOrChunk: Chunk[] | Chunk): State {\n  const { editorMode } = state;\n  if (editorMode !== EditorMode.Chunks) {\n    throw new Error('handleSetChunks: not in chunk mode');\n  }\n\n  const {\n    compiling,\n  } = state;\n\n  if (Array.isArray(chunksOrChunk)) {\n    const chunks = chunksOrChunk;\n\n    const contents = chunks.map((chunk) => chunk.text).join(CHUNKSEP);\n\n    return {\n      ...state,\n      chunks,\n      currentFileContents: contents,\n      isFileSaved: false,\n      compiling: compiling ? 'out-of-date' : false,\n    };\n  }\n\n  const chunk = chunksOrChunk;\n  const { chunks } = state;\n\n  const newChunks = [];\n  for (let i = 0; i < chunks.length; i += 1) {\n    if (chunks[i].id === chunk.id) {\n      newChunks.push(chunk);\n    } else {\n      newChunks.push(chunks[i]);\n    }\n  }\n\n  const contents = newChunks.map((c) => c.text).join(CHUNKSEP);\n\n  return {\n    ...state,\n    chunks: newChunks,\n    currentFileContents: contents,\n    isFileSaved: false,\n    compiling: compiling ? 'out-of-date' : false,\n  };\n}\n\nfunction handleSetFocusedChunk(state: State, index: number): State {\n  const { effectQueue, isFileSaved, focusedChunk } = state;\n  const shouldStartEditTimer = !isFileSaved && focusedChunk !== index;\n  return {\n    ...state,\n    focusedChunk: index,\n    effectQueue: shouldStartEditTimer ? [...effectQueue, 'startEditTimer'] : effectQueue,\n  };\n}\n\nfunction handleSetFontSize(state: State, fontSize: number): State {\n  return { ...state, fontSize };\n}\n\nfunction handleSetMenuTabVisible(state: State, tab: false | number) {\n  const { menuTabVisible } = state;\n  if (menuTabVisible !== false) {\n    if (menuTabVisible !== tab) {\n      return { ...state, menuTabVisible: tab };\n    }\n\n    // typescript tries to lift a literal `false` to the `boolean` type, but `false | number`\n    // cannot be `true`.\n    const myFalse: false = false;\n    return { ...state, menuTabVisible: myFalse };\n  }\n\n  return { ...state, menuTabVisible: tab };\n}\n\nfunction handleUpdate(\n  state: State,\n  action: Update,\n): State {\n  switch (action.key) {\n    case 'editorMode':\n      return handleSetEditorMode(state, action.value);\n    case 'currentRunner':\n      return handleSetCurrentRunner(state, action.value);\n    case 'currentFileContents':\n      return handleSetCurrentFileContents(state, action.value);\n    case 'browsePath':\n      return handleSetBrowsePath(state, action.value);\n    case 'currentFile':\n      return handleSetCurrentFile(state, action.value);\n    case 'chunks':\n      return handleSetChunks(state, action.value);\n    case 'focusedChunk':\n      return handleSetFocusedChunk(state, action.value);\n    case 'fontSize':\n      return handleSetFontSize(state, action.value);\n    case 'autoRun':\n      return { ...state, autoRun: action.value };\n    case 'runKind':\n      return { ...state, runKind: action.value };\n    case 'typeCheck':\n      return { ...state, typeCheck: action.value };\n    case 'dropdownVisible':\n      return { ...state, dropdownVisible: action.value };\n    case 'shouldAdvanceCursor':\n      return { ...state, shouldAdvanceCursor: action.value };\n    case 'menuTabVisible':\n      return handleSetMenuTabVisible(state, action.value);\n    case 'rhs':\n      return { ...state, rhs: action.value };\n    default:\n      throw new Error(`handleUpdate: unknown action ${JSON.stringify(action)}`);\n  }\n}\n\nfunction rootReducer(state: State, action: Action): State {\n  switch (action.type) {\n    case 'effectStarted':\n      return handleEffectStarted(state, action);\n    case 'effectEnded':\n      return handleEffectEnded(state, action);\n    case 'enqueueEffect':\n      return handleEnqueueEffect(state, action);\n    case 'update':\n      return handleUpdate(state, action);\n    default:\n      return state;\n  }\n}\n\nexport default function ideApp(state = initialState, action: Action): State {\n  return rootReducer(state, action);\n}\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ConnectedEditor from './Editor';\nimport store from './store';\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <ConnectedEditor />\n    </Provider>\n  );\n}\n"],"sourceRoot":""}