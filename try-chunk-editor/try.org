#+TITLE: The Chunk Editor
# #+OPTIONS: toc:nil
# #+OPTIONS: num:nil
#+OPTIONS: html-postamble:nil
* Introduction
  Chunk editing is an experimental way to interact with (Pyret) programs.
  Statements on the left hand side are grouped into "chunks" that can be
  rearranged and linted independently. The right hand side displays results from
  each chunk.

  You can try it out [[https://michaelmmacleod.github.io/build/][here.]]

  We are looking for information on the editing experience. For example, did
  error messages show up in surprising or surprisingly useful ways? Are you
  surprised about when the program (doesn't) run? How does this experience
  differ from your usual editing experience with Pyret?

  The chunk editor is an effort to address some of the [[https://jpolitz.github.io/notes/2020/07/10/repl-problems.html][issues students have with
  existing ways of editing]]
* Things to Try
** <<simple>>Create a simple chunk
   Identifiers and the values they are bound to are displayed on the right hand
   side of the page.
   1) Write ~import global as G~ in an empty chunk. This is a temporary
      necessity of [[not-quite-yet][the new compiler backend]].
   2) Press =Enter= to move into the next chunk.
   3) Write ~x = 404 * 5~ in the new chunk.
   4) Press =Enter= to update the right hand side.

   [[file:bind-id-to-val.png]]
** <<multi-line>>Create a multi-line chunk
   Chunks are not limited to one line of code. Pressing =Enter= will advance you
   to the next chunk only if the one you're editing is syntactically complete.

   1) Write ~fun timesTwo(n :: Number) -> Number:~ in an empty chunk.
   2) Press =Enter= to move to the next line in the chunk.
   3) Write ~n * 2~ on the new line.
   4) Press =Enter=.
   5) Write ~end~ to complete the function definition.
   6) Press =Enter= to complete the chunk.

   [[file:multi-line-function.png]] 

   The chunk editor knows when you aren't finished with a statement. It will
   keep you in the same chunk until you complete it.
** Create new chunks with =Enter=
   Pressing =Enter= does different things depending on where your cursor is. If
   the cursor is at the end of a valid statement, =Enter= will create a new
   chunk and focus it (see [[simple]]). If the cursor is in the middle of a
   statement, =Enter= will create a new line in the same chunk (see [[multi-line]]).
** Move between chunks with the arrow keys
   Pressing =Up Arrow= while at the top of a chunk makes the cursor focus
   the chunk above. Similarly, pressing =Down Arrow= while at the bottom focuses
   the chunk below. This won't create any new chunks if they don't exist yet.
** Delete an empty chunk
   Using =Backspace= on an empty chunk will remove it, moving the cursor's focus
   into the chunk above. =Delete= works similarly, moving the cursor's focus
   into the chunk below.
** Fix an error
   Chunks with errors[fn:2] are highlighted red. Pressing =Enter= won't move
   into the next chunk.
   
   1) Write ~x = 12~ in another chunk to introduce a re-declaration error.
   2) Press =Enter= to display the error in one chunk.
   3) Click on the ~x = 404 * 5~ chunk to see the error there instead.
   3) Change ~x~ to ~y~ to fix the error.
   4) Press ~Enter~ to complete the chunk.
   
   [[file:errors.png]] 
** Write a test
   The result of a =check:= or =examples:= block is displayed inline with the
   identifier-value bindings on the right hand side of the page.

   1) Write ~check: 2 + 2 is 4 end~ in an empty chunk
   2) Press =Enter= to run the test. The right hand side of the page should show
      that the test succeeded.
   3) Change the ~4~ to a ~5~ to make the test fail.
   5) Press the run button. The right hand side should update to show that the
      test failed.
   
      [[file:test-failed.png]] 
** Build some flags
   Now that you've got a better idea of how to use the chunk editor, try
   using the [[https://www.pyret.org/docs/latest/image.html][image library]] (=include image=) to make the following flags. The
   image-structs library [[not-quite-yet][is not yet available]].
*** Flag of [[https:en.wikipedia.org/wiki/Flag_of_Japan#/media/File:Construction_sheet_of_the_Japanese_flag_no_text.svg][Japan]]
    [[file:japanese-flag.png]]
*** Flag of [[https:en.wikipedia.org/wiki/Flag_of_Italy][Italy]]
   [[file:italian-flag.png]] 
* <<not-quite-yet>>Things that don't entirely work yet
  There are actually two different things going on here. One is the new editor
  and interactions style, and another is a mostly-rewritten backend for the
  compiler. We're interested in feedback about the editing and interactions
  experience. There are a bunch of libraries missing and syntax that doesn't
  quite work yet because the backend representations changed in ways that break
  using the existing libraries as-is. It's useful to have the updated backend
  because it is substantially faster at compiling than the existing compiler's
  backend, which makes some of the quick interactions we need work much more
  smoothly.

  That said, it still could make sense to use the chunk editor with the existing
  compiler! Work on that could proceed in parallel with making the new, faster,
  Stopify-optional backend be feature complete with existing libraries.
  
  A lot of the existing Pyret libraries aren't fully supported in the new
  backend, like Tables and Reactors.
* Feedback
  Thanks for taking the time to check out the chunk editor! We'd appreciate it
  if you could send us some feedback, either through the Google form below or by
  [[mailto:joe.politz@gmail.com,michaelmmacleod@gmail.com][emailing us]] directly at =joe.politz@gmail.com= and =michaelmmacleod@gmail.com=.
  #+BEGIN_EXPORT html
  <iframe src="https://docs.google.com/forms/d/e/1FAIpQLSfQbtam74KFC5khvFMPKneyzqw7aTVZ_zIR-eJmTIT6jjCQJg/viewform?embedded=true" width="640" height="691" frameborder="0" marginheight="0" marginwidth="0">Loadingâ€¦</iframe>
  #+END_EXPORT

* Footnotes

[fn:2] Only compile and lint errors are currently displayed next to the
offending chunk(s). Runtime errors are displayed in a separate window.

[fn:3] The =image-structs= library is not yet available.
