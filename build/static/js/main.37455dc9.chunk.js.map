{"version":3,"sources":["../node_modules/babel-core/lib/transformation/file/options sync","../node_modules/babel-core/lib/transformation/file sync","browserfs-setup.ts","path.ts","runner.ts","backend.ts","state.ts","control.ts","Table.tsx","Image.tsx","Chart.tsx","Reactor.tsx","RenderedValue.tsx","rhsObject.ts","chunk.ts","RHS.tsx","DefChunk.tsx","DefChunks.tsx","SingleCodeMirrorDefinitions.tsx","FSItem.tsx","FSBrowser.tsx","FontSize.tsx","Menu.tsx","MenuBar.tsx","Footer.tsx","Dropdown.tsx","DropdownOption.tsx","Header.tsx","InteractionError.tsx","Editor.tsx","runtime-loader.ts","store.ts","reducer.ts","App.tsx","serviceWorker.js","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","BrowserFS","require","fs","BFSRequire","path","install","window","configure","worker","options","FileSystem","WorkerFS","attachRemoteListener","bfs","root","compileBase","join","compileBuiltinJS","compileProgram","runBase","runProgram","uncompiled","compiled","compiledBuiltin","program","pyretJarr","csv","assert","immutable","stopify","browserFS","nodeModules","wrapContent","content","RunKind","makeRequireAsync","basePath","cwd","currentRunner","cache","requireAsync","importPath","oldWd","nextPath","parse","dir","existsSync","stoppedPath","cachePath","pauseK","kontinue","lastPath","__pyretExports","lastModule","g","stopifiedCode","statSync","mtime","String","readFileSync","contents","compile","writeFileSync","evalCompiled","result","type","toReturn","value","Promise","reject","runner","toStopify","stopifyLocally","newMethod","kind","stopifyModuleExports","Object","assign","document","Number","Math","Array","RegExp","Image","JSON","Date","decodeURIComponent","$STOPIFY","setTimeout","console","parseFloat","isNaN","isFinite","run","pause","callback","resume","makeRequire","requireSync","Function","f","EditorMode","compileStart","performance","now","makeBackendMessageHandler","echoLog","setupFinished","compileFailure","runtimeFailure","lintFailure","lintSuccess","compileSuccess","createReplSuccess","compileInteractionSuccess","compileInteractionFailure","data","browserfsMessage","msgObject","msgType","tag","log","err","undefined","lintProgram","compilerWorker","message","request","programSource","lint","postMessage","baseDir","builtinJSDir","checks","typeCheck","recompileBuiltins","createRepl","compileInteraction","interactionFullPath","assertNever","arg","runProgram2","runKind","Sync","start","end","time","Async","startRequire","then","asyncRunner","endRequire","startRun","endRun","catch","error","resultP","entry","runtimeFiles","Worker","bfsSetup","programText","programName","backend","initialState","browseRoot","browsePath","currentFile","currentFileContents","rhs","objects","outdated","interactionErrors","lintFailures","control","autoRun","editTimer","dropdownVisible","editorMode","Chunks","fontSize","definitionsHighlights","fsBrowserVisible","currentChunk","firstUpdatableChunk","shouldAdvanceCursor","effectQueue","isFileSaved","isMessageHandlerReady","isReplReady","isSetupFinished","settingUp","creatingRepl","linting","linted","compiling","running","compiledSinceLastEdit","chunks","focusedChunk","menuTabVisible","menuItems","name","icon","firstSelectedChunkIndex","TableWidget","htmlify","headers","rows","columns","map","header","index","Header","accessor","row","showOptions","length","defaultPageSize","className","text","d","showPagination","pageSize","showPageSizeOptions","filterable","ImageWidget","props","canvas","this","updateCanvas","image","ctx","getContext","clearRect","getWidth","getHeight","render","width","height","ref","React","Component","ChartWidget","chartType","title","hAxis","vAxis","legend","concat","legendToggle","connector","connect","reactor","convert","divref","useRef","draw","getInitialValue","onClick","$interactNoPauseResume","node","div","current","firstChild","removeChild","lastChild","appendChild","toString","$brand","_headers","_rows","v","isArray","stringify","slice","RenderedValue","getRow","hasSrcLoc","obj","prop","prototype","hasOwnProperty","call","srcloc","matches","loc","match","getStartLineForIndex","startLine","split","newId","uuidv4","findChunkFromSrcloc","file","l1","i","state","elements","rhsObject","a","isSelected","selectedStyle","background","borderTop","borderBottom","hasProp","isTrace","key","style","paddingLeft","display","alignItems","isRHSCheck","success","position","deleteSelectedChunks","shouldPreventDefault","firstSelectedChunk","updatedChunks","reduce","newChunks","chunk","editor","push","doc","getDoc","getSelection","replaceSelection","newText","getValue","trim","errorState","status","shouldChangeFocus","effect","needsJiggle","dispatch","setFocusedChunk","setChunks","setChunk","enqueueEffect","setShouldAdvanceCursor","setRHS","setFirstSelectedChunkIndex","input","createRef","getAllMarks","forEach","m","clear","highlights","ch1","l2","ch2","markText","line","ch","focus","event","getCursor","preventDefault","pos","token","getTokenAt","shiftKey","lineState","tokens","newFocusedChunk","min","max","buttons","setSelections","anchor","head","alignSelf","top","zIndex","fontFamily","borderRadius","border","padding","marginRight","boxShadow","failures","onMouseEnter","execCommand","chunkEditor","onMouseDown","handleMouseDown","editorDidMount","setSize","mode","theme","lineNumbers","lineWrapping","lineNumberFormatter","l","autofocus","onBeforeChange","scheduleUpdate","onKeyDown","handleEnter","handleBackspace","handleDelete","handleArrowUp","handleArrowDown","autoCursor","handleReorder","oldFocusedId","destination","innerChunks","newResult","from","splice","removed","reorder","source","getNewFocusedChunk","allChunks","focused","draggableId","draggableProvided","innerRef","draggableProps","flexDirection","dragHandleProps","minWidth","justifyContent","borderLeft","marginLeft","userSelect","onDragEnd","fc","droppableId","provided","droppableProps","placeholder","CodeMirror","RawCodeMirror","SingleCodeMirrorDefinitions","onChange","onEdit","setState","marks","FSItem","selected","stats","label","isDirectory","isFile","color","textAlign","flex","cursor","paddingRight","base","EditType","setBrowsePath","onExpandChild","traverseUp","newPath","traverseDown","childDirectory","expandChild","child","fullChildPath","browsePathString","createFSItemPair","filePath","toggleEditFile","editType","CreateFile","toggleEditDirectory","CreateDirectory","handleSubmit","editValue","mkdirSync","target","deleteSelected","removeDirectory","readdirSync","unlinkSync","rmdirSync","selectCurrentDirectory","uploadFile","files","reader","FileReader","onload","forceUpdate","readAsText","b","that","onSubmit","flexGrow","alignContent","browsingRoot","sort","FSBrowser","compareFSItemPair","x","onIncrease","oldSize","onDecrease","onReset","setEditorMode","tab","Text","getTab","overflowY","toggleTab","item","Footer","Dropdown","children","stopPropagation","DropdownOption","enabled","internalName","getTime","htmlFor","InteractionError","margin","stop","updateContents","setAutoRun","setStopify","setTypeCheck","setDropdownVisible","prewrittenDirectory","timestamp","fullPathKey","compiledPath","replace","makeHeaderButton","body","addEventListener","makeCopyHandler","selection","clipboardData","setData","interactionValues","dropdown","rightHandSide","vertical","percentage","definitions","makeDefinitions","onBlur","nextChunks","handleRunSuccess","moduleUri","$checks","$locations","$traces","filter","t","location","makeRHSObjects","locations","traces","handleEffectSucceeded","action","handleCreateReplSuccess","timer","handleStartEditTimerSuccess","handleEditTimerSuccess","allLinted","shouldCompile","handleLintSuccess","handleCompileSuccess","handleSetupSuccess","handleStopSuccess","handleLoadFileSuccess","needsLint","getNewEffectQueue","handleSaveFileSuccess","handleSetupWorkerMessageHandlerSuccess","handleEffectFailed","handleCreateReplFailure","errors","handleLintFailure","places","findChunkFromSrclocResult","chunkIndex","hl","handleCompileFailure","handleRunFailure","handleUpdate","newEditorMode","totalLines","chunkString","handleSetEditorMode","handleSetCurrentRunner","handleSetCurrentFileContents","handleSetBrowsePath","handleSetCurrentFile","chunksOrChunk","c","handleSetChunks","shouldStartEditTimer","handleSetFocusedChunk","handleSetFontSize","handleSetMenuTabVisible","rootReducer","oldEffectQueue","handleEffectStarted","handleEffectEnded","handleEnqueueEffect","handleStartEditTimer","clearTimeout","handleLoadFile","chunkStrings","handleSetupWorkerMessageHandler","onLog","onCompileFailure","onRuntimeFailure","onCompileSuccess","onCreateReplSuccess","onCompileInteractionSuccess","onCompileInteractionFailure","onmessage","handleCreateRepl","handleSaveFile","handleCompile","baseDirectory","programFileName","handleRun","runnerCallback","receivedRunner","runResult","handleStop","handleTextLint","handleChunkLint","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","subscribe","getState","maybeEffect","applyEffect","j","handleFirstActionableEffect","App","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.37455dc9.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 269;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 283;","export const BrowserFS = require('browserfs'); // eslint-disable-line global-require\n\nexport const fs = BrowserFS.BFSRequire('fs');\n\nexport const path = BrowserFS.BFSRequire('path');\n\nexport const install = (): void => {\n  BrowserFS.install(window);\n};\n\nexport const configure = (worker: Worker /* , projectsDirectory: string */): void => {\n  BrowserFS.configure({\n    fs: 'MountableFileSystem',\n    options: {\n      '/projects': {\n        fs: 'LocalStorage',\n      },\n      '/prewritten': {\n        fs: 'InMemory',\n      },\n      '/compiled': {\n        fs: 'InMemory',\n      },\n    },\n  }, (e: any) => {\n    if (e) {\n      throw e;\n    }\n\n    // if (!fs.existsSync(projectsDirectory)) {\n    //   fs.mkdirSync(projectsDirectory);\n    // }\n\n    // if (!fs.existsSync('/compiled/builtin')) {\n    //   fs.mkdirSync('/compiled/builtin');\n    // }\n\n    BrowserFS.FileSystem.WorkerFS.attachRemoteListener(worker);\n    (window as any).bfs = BrowserFS.BFSRequire('fs');\n  });\n};\n","import { path } from './browserfs-setup';\n\nexport const root = '/';\nexport const compileBase = path.join(root, 'projects');\nexport const compileBuiltinJS = path.join(root, 'prewritten');\nexport const compileProgram = 'program.arr';\nexport const runBase = path.join(root, 'compiled', 'project');\nexport const runProgram = 'program.arr.js';\nexport const uncompiled = path.join(root, 'uncompiled');\nexport const compiled = path.join(root, 'compiled');\nexport const compiledBuiltin = path.join(compiled, 'builtin');\nexport const program = path.join(compileBase, compileProgram);\nexport const pyretJarr = 'pyret.jarr';\n","/* eslint-disable */\n\nconst csv = require('csv-parse/lib/sync');\nconst assert = require('assert');\nconst immutable = require('immutable');\nexport const stopify = require('@stopify/stopify');\nconst browserFS = require('./browserfs-setup.ts');\n\n(window as any).stopify = stopify;\n\nconst { fs } = browserFS;\nconst { path } = browserFS;\n\nconst nodeModules = {\n  assert,\n  'csv-parse/lib/sync': csv,\n  fs: browserFS.fs,\n  immutable,\n};\n\nfunction wrapContent(content: string): string {\n  return `(function() { ${content} })();`;\n}\n\nexport const makeRequireAsync = (\n  basePath: string): ((importPath: string) => Promise<any>\n  ) => {\n  let cwd = basePath;\n  let currentRunner: any = null;\n  const cache : {[key:string]: any} = {};\n\n  const requireAsyncMain = (importPath: string) => new Promise(((resolve, reject) => {\n    if (importPath in nodeModules) {\n      return (nodeModules as any)[importPath];\n    }\n    const oldWd = cwd;\n    const nextPath = path.join(cwd, importPath);\n    cwd = path.parse(nextPath).dir;\n    if (!fs.existsSync(nextPath)) {\n      throw new Error(`Path did not exist in requireSync: ${nextPath}`);\n    }\n    const stoppedPath = `${nextPath}.stopped`;\n    // Get the absolute path to uniquely identify modules\n    // Cache modules based upon the absolute path for singleton modules\n    const cachePath = path.resolve(stoppedPath);\n    if (cachePath in cache) { resolve(cache[cachePath]); return; }\n    let runner: any = null;\n    const contents = String(fs.readFileSync(nextPath));\n    const toStopify = wrapContent(contents);\n    runner = stopify.stopifyLocally(toStopify, { newMethod: 'direct' });\n    if (runner.kind !== 'ok') { reject(runner); }\n    fs.writeFileSync(stoppedPath, runner.code);\n    const stopifyModuleExports = {\n      exports: {\n        __pyretExports: nextPath,\n      },\n    };\n    runner.g = Object.assign(runner.g, {\n      document,\n      Number,\n      Math,\n      Array,\n      Object,\n      RegExp,\n      stopify,\n      Error,\n      Image,\n      JSON,\n      Date,\n      decodeURIComponent,\n      require: requireAsync,\n      module: stopifyModuleExports,\n      // TS 'export' syntax desugars to 'exports.name = value;'\n      exports: stopifyModuleExports.exports,\n      String,\n      $STOPIFY: runner,\n      setTimeout,\n      console,\n      parseFloat,\n      isNaN,\n      isFinite,\n    });\n    runner.path = nextPath;\n    currentRunner = runner;\n\n    resolve({\n      run: new Promise((resolve, reject) => runner.run((result : any) => {\n        cwd = oldWd;\n        if (result.type !== 'normal') { reject(result); } else {\n          const toReturn = runner.g.module.exports;\n          cache[cachePath] = toReturn;\n          resolve(toReturn);\n        }\n      })),\n      pause: (callback: (line: number) => void): void => {\n        runner.pause(callback);\n      },\n      resume: (): void => {\n        runner.resume();\n      },\n    });\n  }));\n\n  const requireAsync = (importPath: string) => {\n    if (importPath in nodeModules) {\n      return (nodeModules as any)[importPath];\n    }\n    const oldWd = cwd;\n    const nextPath = path.join(cwd, importPath);\n    cwd = path.parse(nextPath).dir;\n    if (!fs.existsSync(nextPath)) {\n      throw new Error(`Path did not exist in requireSync: ${nextPath}`);\n    }\n    const stoppedPath = `${nextPath}.stopped`;\n    // Get the absolute path to uniquely identify modules\n    // Cache modules based upon the absolute path for singleton modules\n    const cachePath = path.resolve(stoppedPath);\n    if (cachePath in cache) { return cache[cachePath]; }\n    currentRunner.pauseK((kontinue: (result: any) => void) => {\n      const lastPath = currentRunner.path;\n      const module = {\n        exports: {\n          __pyretExports: nextPath,\n        },\n      };\n      const lastModule = currentRunner.g.module;\n      currentRunner.g.module = module;\n      // Need to set 'exports' global to work with TS export desugaring\n      currentRunner.g.exports = module.exports;\n      currentRunner.path = nextPath;\n      let stopifiedCode = '';\n      if (fs.existsSync(stoppedPath) && (fs.statSync(stoppedPath).mtime > fs.statSync(nextPath).mtime)) {\n        stopifiedCode = String(fs.readFileSync(stoppedPath));\n      } else {\n        const contents = String(fs.readFileSync(nextPath));\n        stopifiedCode = currentRunner.compile(wrapContent(contents));\n        fs.writeFileSync(stoppedPath, stopifiedCode);\n      }\n      currentRunner.evalCompiled(stopifiedCode, (result: any) => {\n        cwd = oldWd;\n        if (result.type !== 'normal') {\n          kontinue(result);\n          return;\n        }\n        const toReturn = currentRunner.g.module.exports;\n        currentRunner.path = lastPath;\n        // g.exports and g.module may be overwritten by JS code. Need to restore\n        currentRunner.g.module = lastModule;\n        // Need to set 'exports' global to work with TS export desugaring\n        currentRunner.g.exports = lastModule.exports;\n        cache[cachePath] = toReturn;\n        kontinue({ type: 'normal', value: toReturn });\n      });\n    });\n  };\n\n  return requireAsyncMain;\n};\n\nexport const makeRequire = (basePath: string): ((importPath: string) => any) => {\n  const cache : {[key:string]: any} = {};\n  let cwd = basePath;\n  /*\n    Recursively eval (with this definition of require in scope) all of the\n    described JavaScript.\n\n    Note that since JS code is generated/written with the assumption that\n    require() is sync, we can only use sync versions of the FS function here;\n    require must be entirely one synchronous run of the code.\n\n    Future use of stopify could enable the definition of requireAsync, which\n    could pause the stack while requiring and then resume.\n  */\n  const requireSync = (importPath: string) => {\n    if (importPath in nodeModules) {\n      return (nodeModules as any)[importPath];\n    }\n    const oldWd = cwd;\n    const nextPath = path.join(cwd, importPath);\n    if (nextPath in cache) { return cache[nextPath]; }\n    cwd = path.parse(nextPath).dir;\n    if (!fs.existsSync(nextPath)) {\n      throw new Error(`Path did not exist in requireSync: ${nextPath}`);\n    }\n    const contents = fs.readFileSync(nextPath);\n    // TS 'export' syntax desugars to 'exports.name = value;'\n    // Adding an 'exports' parameter simulates the global 'exports' variable\n    // Also, the comment below has meaning to eslint and makes it ignore the\n    // use of the Function constructor (which we do intend)\n    // eslint-disable-next-line\n    const f = new Function(\"require\", \"module\", \"exports\", contents);\n    const module = {\n      exports: {\n        __pyretExports: nextPath,\n      },\n    };\n    const result = f(requireSync, module, module.exports);\n    const toReturn = module.exports ? module.exports : result;\n    cwd = oldWd;\n    cache[nextPath] = toReturn;\n    return toReturn;\n  };\n\n  return requireSync;\n};\n","export interface LintOptions {\n  program: string,\n  programSource: string,\n}\n\nexport interface CompileOptions {\n  program: string,\n  baseDir: string,\n  builtinJSDir: string,\n  typeCheck: boolean,\n  checks: string,\n  recompileBuiltins: boolean,\n}\n\nexport enum RunKind {\n  Sync = 'SYNC',\n  Async = 'ASYNC',\n}\n\nexport interface RunResult {\n  time: number,\n  result: any,\n}\n\nlet compileStart = window.performance.now();\n\n/*\n * Handles Pyret compiler messages ONLY.\n * Ignores all other messages (including BrowserFS messages)\n */\nexport const makeBackendMessageHandler = (\n  echoLog: (l: string) => void,\n  setupFinished: () => void,\n  compileFailure: (e: string[]) => void,\n  runtimeFailure: (e: string[]) => void,\n  lintFailure: (data: { name: string, errors: string[]}) => void,\n  lintSuccess: (data: { name: string }) => void,\n  compileSuccess: () => void,\n  createReplSuccess: () => void,\n  compileInteractionSuccess: (data: { program: string }) => void,\n  compileInteractionFailure: (data: { program: string }) => void): ((e: MessageEvent) => null | void\n  ) => {\n  const backendMessageHandler = (e: MessageEvent) => {\n    if (e.data.browserfsMessage === true) {\n      return null;\n    }\n\n    try {\n      const msgObject: any = JSON.parse(e.data);\n\n      const msgType = msgObject.type;\n\n      if (msgObject.tag === 'error') {\n        try {\n          console.log(JSON.parse(msgObject.data));\n        } catch (err) {\n          console.log(msgObject.data);\n        }\n      }\n\n      if (msgType === undefined) {\n        return null;\n      } if (msgType === 'echo-log') {\n        echoLog(msgObject.contents);\n      } else if (msgType === 'lint-failure') {\n        lintFailure(msgObject.data);\n      } else if (msgType === 'lint-success') {\n        lintSuccess(msgObject.data);\n      } else if (msgType === 'setup-finished') {\n        setupFinished();\n      } else if (msgType === 'compile-failure') {\n        compileFailure(msgObject.data);\n      } else if (msgType === 'compile-success') {\n        console.log('compile-time: ', window.performance.now() - compileStart);\n        compileSuccess();\n      } else if (msgType === 'create-repl-success') {\n        createReplSuccess();\n      } else if (msgType === 'compile-interaction-success') {\n        compileInteractionSuccess({ program: msgObject.program });\n      } else if (msgType === 'compile-interaction-failure') {\n        compileInteractionFailure({ program: msgObject.program });\n      } else {\n        return null;\n      }\n\n      return null;\n    } catch (err) {\n      console.log(err);\n      runtimeFailure(err);\n      return null;\n    }\n  };\n\n  return backendMessageHandler;\n};\n\nexport const lintProgram = (\n  compilerWorker: Worker,\n  options: LintOptions,\n): void => {\n  const message = {\n    request: 'lint-program',\n    program: options.program,\n    'program-source': options.programSource,\n    lint: true,\n  };\n\n  compilerWorker.postMessage(message);\n};\n\nexport const compileProgram = (\n  compilerWorker: Worker,\n  options: CompileOptions,\n): void => {\n  compileStart = window.performance.now();\n  const message = {\n    request: 'compile-program',\n    program: options.program,\n    'base-dir': options.baseDir,\n    'builtin-js-dir': options.builtinJSDir,\n    checks: options.checks,\n    'type-check': options.typeCheck,\n    'recompile-builtins': options.recompileBuiltins,\n  };\n\n  compilerWorker.postMessage(message);\n};\n\nexport const createRepl = (\n  compilerWorker: Worker,\n): void => {\n  const message = {\n    request: 'create-repl',\n  };\n\n  compilerWorker.postMessage(message);\n};\n\nexport const compileInteraction = (\n  compilerWorker: Worker,\n  interactionFullPath: string,\n): void => {\n  const message = {\n    request: 'compile-interaction',\n    program: interactionFullPath,\n  };\n\n  compilerWorker.postMessage(message);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst assertNever = (arg: never): never => {\n  throw new Error('assertNever');\n};\n\nexport const runProgram2 = (\n  runner: any,\n  baseDir: string,\n  program: string,\n  runKind: RunKind,\n): Promise<any> => {\n  if (runKind === RunKind.Sync) {\n    const start = window.performance.now();\n    const result = runner.makeRequire(baseDir)(program);\n    const end = window.performance.now();\n    return Promise.resolve({\n      time: end - start,\n      result,\n    });\n  } if (runKind === RunKind.Async) {\n    return new Promise<any>((resolve) => {\n      const startRequire = window.performance.now();\n      runner.makeRequireAsync(baseDir)(program).then((asyncRunner: any) => {\n        const endRequire = window.performance.now();\n        console.log('require time', endRequire - startRequire);\n        resolve({\n          run: (callback: (result: RunResult) => void): void => {\n            const startRun = window.performance.now();\n            asyncRunner.run.then((result: any) => {\n              const endRun = window.performance.now();\n              console.log('run time', endRun - startRun);\n              callback({\n                time: endRun - startRequire,\n                result,\n              });\n            }).catch((result: any) => {\n              const endRun = window.performance.now();\n              callback({\n                time: endRun - startRequire,\n                result: { error: String(result.value), result },\n              });\n            });\n          },\n          pause: (callback: (line: number) => void): void => {\n            asyncRunner.pause(callback);\n          },\n          resume: (): void => {\n            asyncRunner.resume();\n          },\n        });\n      });\n    });\n  }\n  return assertNever(runKind);\n};\n\nexport const runProgram = (\n  runner: any,\n  baseDir: string,\n  program: string,\n  runKind: RunKind,\n): Promise<RunResult> => {\n  if (runKind === RunKind.Sync) {\n    const start = window.performance.now();\n    const result = runner.makeRequire(baseDir)(program);\n    const end = window.performance.now();\n\n    return Promise.resolve({\n      time: end - start,\n      result,\n    });\n  } if (runKind === RunKind.Async) {\n    const entry = runner.makeRequireAsync(baseDir);\n    const resultP = entry(program);\n\n    const wrapper = new Promise<RunResult>((resolve) => {\n      const startRequire = window.performance.now();\n      resultP.then((asyncRunner: any) => {\n        console.log('asyncRunner', asyncRunner);\n        const endRequire = window.performance.now();\n\n        const startRun = window.performance.now();\n        asyncRunner.run((result: any) => {\n          const endRun = window.performance.now();\n\n          console.log('require time', endRequire - startRequire);\n          console.log('run time', endRun - startRun);\n          console.log('total time', endRun - startRequire);\n\n          resolve({\n            time: endRun - startRequire,\n            result,\n          });\n        });\n      });\n    });\n\n    return wrapper;\n  }\n  // NOTE(michael): type checking in Typescript on enums is not exhaustive (as of v3.5.3)\n  return assertNever(runKind);\n};\n","import { Check } from './Check';\nimport { Chunk } from './chunk';\nimport { Effect } from './effect';\nimport { MenuItems } from './menu-types';\nimport { RHSObjects } from './rhsObject';\nimport * as control from './control';\n\nexport type State = {\n  effectQueue: Effect[];\n  browseRoot: string,\n  browsePath: string,\n  currentFile: string,\n  currentFileContents: string | undefined,\n  typeCheck: boolean,\n  checks: Check[],\n  rhs: RHSObjects,\n  interactionErrors: string[],\n  lintFailures: LintFailures,\n  runKind: control.backend.RunKind,\n  autoRun: boolean,\n  editTimer: NodeJS.Timer | false,\n  dropdownVisible: boolean,\n  editorMode: EditorMode,\n  fontSize: number,\n  message: string,\n  definitionsHighlights: number[][],\n  fsBrowserVisible: boolean,\n  currentRunner: any,\n  currentChunk: number,\n  firstUpdatableChunk: number | undefined,\n  chunks: Chunk[],\n  focusedChunk: number | undefined,\n  shouldAdvanceCursor: boolean,\n  isFileSaved: boolean,\n  isSetupFinished: boolean,\n  isMessageHandlerReady: boolean,\n  isReplReady: boolean,\n  settingUp: boolean,\n  creatingRepl: boolean,\n  linting: boolean,\n  linted: boolean,\n  compiling: boolean | 'out-of-date',\n  running: boolean,\n  compiledSinceLastEdit: boolean,\n  menuItems: MenuItems,\n  menuTabVisible: false | number,\n  firstSelectedChunkIndex: false | number,\n};\n\nexport enum EditorMode {\n  Chunks,\n  Text,\n}\n\nexport type LintFailure = {\n  name: string,\n  errors: string[]\n};\n\nexport type LintFailures = {\n  [name : string]: LintFailure\n};\n\nexport const initialState: State = {\n  browseRoot: '/',\n  browsePath: '/projects',\n  currentFile: '/projects/program.arr',\n  currentFileContents: undefined,\n  typeCheck: true,\n  checks: [],\n  rhs: {\n    objects: [],\n    outdated: false,\n  },\n  interactionErrors: [],\n  lintFailures: {},\n  runKind: control.backend.RunKind.Async,\n  autoRun: true,\n  editTimer: false,\n  dropdownVisible: false,\n  editorMode: EditorMode.Chunks,\n  fontSize: 12,\n  message: 'Ready to rock',\n  definitionsHighlights: [],\n  fsBrowserVisible: false,\n  currentRunner: undefined,\n  currentChunk: 0,\n  firstUpdatableChunk: 0,\n  shouldAdvanceCursor: false,\n  effectQueue: [],\n  isFileSaved: false,\n  isMessageHandlerReady: false,\n  isReplReady: false,\n  isSetupFinished: false,\n  settingUp: true,\n  creatingRepl: false,\n  linting: false,\n  linted: false,\n  compiling: false,\n  running: false,\n  compiledSinceLastEdit: false,\n  chunks: [],\n  focusedChunk: undefined,\n  menuTabVisible: false,\n  menuItems: [\n    {\n      name: 'Files',\n      icon: 'folderIcon.svg',\n    },\n    {\n      name: 'Options',\n      icon: 'gearIcon.svg',\n    },\n  ],\n  firstSelectedChunkIndex: false,\n};\n\nexport const CHUNKSEP = '#.CHUNK#\\n';\n","import * as bfsSetup from './browserfs-setup';\nimport load from './runtime-loader';\nimport * as runner from './runner';\nimport * as backend from './backend';\nimport * as path from './path';\n\nconst runtimeFiles = require('./runtime-files.json');\n\nexport { backend, path, bfsSetup };\n\nexport const worker = new Worker(path.pyretJarr);\n\nexport const installFileSystem = () => {\n  bfsSetup.install();\n  bfsSetup.configure(worker /* , path.compileBase */);\n};\n\nexport const loadBuiltins = (): void => {\n  load(bfsSetup.fs, path.compileBuiltinJS, path.uncompiled, runtimeFiles);\n};\n\nexport const { runProgram } = backend;\nexport const { compileProgram } = backend;\nexport const { fs } = bfsSetup;\n\nexport const createFile = (file: string): void => {\n  bfsSetup.fs.writeFileSync(file, '');\n};\n\nexport const createDirectory = (dir: string): void => {\n  bfsSetup.fs.mkdirSync(dir);\n};\n\nexport const removeFile = (filePath: string): void => {\n  bfsSetup.fs.unlinkSync(filePath);\n};\n\n// Synchronous deleteDir\nexport const removeDirectory = (dir: string): void => {\n  const files = bfsSetup.fs.readdirSync(dir);\n\n  files.forEach((file: string) => {\n    const filePath = bfsSetup.path.join(dir, file);\n\n    const stats = bfsSetup.fs.statSync(filePath);\n\n    if (stats.isDirectory()) {\n      removeDirectory(filePath);\n    } else {\n      bfsSetup.fs.unlinkSync(filePath);\n    }\n  });\n\n  bfsSetup.fs.rmdirSync(dir);\n};\n\nexport const deleteDir = (dir: string): void => {\n  bfsSetup.fs.readdir(dir, (err: any, files: any) => {\n    if (err) {\n      throw err;\n    }\n\n    files.forEach((file: string) => {\n      const filePath = bfsSetup.path.join(dir, file);\n\n      bfsSetup.fs.stat(filePath, (statErr: any, stats: any) => {\n        if (err) {\n          throw statErr;\n        }\n\n        if (stats.isDirectory()) {\n          deleteDir(filePath);\n        } else {\n          bfsSetup.fs.unlink(filePath, (unlinkErr: any) => {\n            if (unlinkErr) {\n              throw unlinkErr;\n            }\n          });\n        }\n      });\n    });\n  });\n};\n\nexport const removeRootDirectory = (): void => {\n  deleteDir(path.root);\n};\n\nexport const lint = (\n  programText: string,\n  programName: string,\n): void => {\n  backend.lintProgram(\n    worker,\n    {\n      program: programText,\n      programSource: programName,\n    },\n  );\n};\n\nexport const compile = (\n  baseDirectory: string,\n  programFileName: string,\n  typeCheck: boolean,\n): void => {\n  backend.compileProgram(\n    worker,\n    {\n      program: programFileName,\n      baseDir: baseDirectory,\n      builtinJSDir: path.compileBuiltinJS,\n      checks: 'none',\n      typeCheck,\n      recompileBuiltins: false,\n    },\n  );\n};\n\nexport const run = (\n  baseDirectory: string,\n  programFileName: string,\n  callback: (result: any) => void,\n  runnerCallback: (runner: any) => void,\n  runKind: backend.RunKind,\n): void => {\n  backend.runProgram2(\n    runner,\n    baseDirectory,\n    programFileName,\n    runKind,\n  )\n    .then((receivedRunner: any): void => {\n      // the \"runner\" here is only a runner if RunKind is equal to Async\n      if (runKind === backend.RunKind.Async) {\n        runnerCallback(receivedRunner);\n      }\n      try {\n        if (runKind === backend.RunKind.Async) {\n          receivedRunner.run(callback);\n        }\n      } catch (x) {\n        console.error(x);\n        callback({\n          result: { error: String(x.value) },\n        });\n      }\n    });\n};\n\nexport const createRepl = () => {\n  backend.createRepl(worker);\n};\n\nexport const setupWorkerMessageHandler = (\n  onLog: (l: string) => void,\n  setupFinished: () => void,\n  onCompileFailure: (e: string[]) => void,\n  onRuntimeFailure: (e: string[]) => void,\n  lintFailure: (data: { name: string, errors: string[]}) => void,\n  lintSuccess: (data: { name: string }) => void,\n  onCompileSuccess: () => void,\n  onCreateReplSuccess: () => void,\n  onCompileInteractionSuccess: (data: { program: string }) => void,\n  onCompileInteractionFailure: (data: { program: string }) => void,\n): void => {\n  worker.onmessage = backend.makeBackendMessageHandler(\n    onLog,\n    setupFinished,\n    onCompileFailure,\n    onRuntimeFailure,\n    lintFailure,\n    lintSuccess,\n    onCompileSuccess,\n    onCreateReplSuccess,\n    onCompileInteractionSuccess,\n    onCompileInteractionFailure,\n  );\n};\n\nexport const openOrCreateFile = (filePath: string): string => {\n  if (bfsSetup.fs.existsSync(filePath)) {\n    return bfsSetup.fs.readFileSync(filePath, 'utf-8');\n  }\n  bfsSetup.fs.writeFileSync(filePath, '');\n  return '';\n};\n","import React from 'react';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport CopyToClipboard from 'react-copy-to-clipboard';\n\ntype TableWidgetProps = {\n  htmlify: (x: any) => any;\n  headers: string[];\n  rows: any[][];\n};\n\nexport default function TableWidget({ htmlify, headers, rows }: TableWidgetProps) {\n  const columns = headers.map(\n    (header: string, index: number) => ({\n      id: header,\n      Header: header,\n      accessor: (row: any) => htmlify(row[index]),\n    }),\n  );\n  const maxRowsPerPage = 5;\n  const showOptions = rows.length > maxRowsPerPage;\n  const defaultPageSize = showOptions ? maxRowsPerPage : rows.length;\n  return (\n    <div className=\"table-container\">\n      <CopyToClipboard text={rows.map((d) => d.join('\\t')).join('\\n')}>\n        <div className=\"table-copy\">\n          &#128203;\n        </div>\n      </CopyToClipboard>\n      <ReactTable\n        data={rows}\n        columns={columns}\n        showPagination={showOptions}\n        pageSize={defaultPageSize}\n        showPageSizeOptions={false}\n        filterable={showOptions}\n      />\n    </div>\n  );\n}\n","import React from 'react';\n\ntype ImageWidgetProps = {\n  image: any\n};\ntype ImageWidgetState = {};\n\nexport default class ImageWidget extends React.Component<ImageWidgetProps, ImageWidgetState> {\n  canvas: HTMLCanvasElement | null;\n\n  constructor(props : ImageWidgetProps) {\n    super(props);\n    this.canvas = null;\n  }\n\n  componentDidMount() {\n    this.updateCanvas();\n  }\n\n  componentDidUpdate() {\n    this.updateCanvas();\n  }\n\n  updateCanvas() {\n    const { image } = this.props;\n    const ctx = this.canvas!.getContext('2d');\n    ctx!.clearRect(0, 0, image.getWidth(), image.getHeight());\n    image.render(ctx, 0, 0);\n  }\n\n  render() {\n    const { image } = this.props;\n    return (\n      <div>\n        <canvas\n          width={image.getWidth()}\n          height={image.getHeight()}\n          ref={(canvas) => {\n            this.canvas = canvas;\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Chart from 'react-google-charts';\n\ntype ChartWidgetProps = {\n  headers: any[];\n  rows: any[][];\n  chartType: any;\n};\n\nexport default function ChartWidget({ headers, rows, chartType }: ChartWidgetProps) {\n  const options = {\n    // TODO(tiffany): get title from the chart\n    title: 'Title',\n    hAxis: { title: headers[1] },\n    vAxis: { title: headers[0] },\n    legend: 'none',\n  };\n  const headersArray = [headers];\n  const data = headersArray.concat(rows);\n  return (\n    <div>\n      <Chart\n        chartType={chartType}\n        data={data}\n        options={options}\n        width=\"100%\"\n        legendToggle\n      />\n    </div>\n  );\n}\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\nimport React, { useRef } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n// import { interact } from './control';\n// import { State } from './state';\n// import { Action } from './action';\n\ntype StateProps = {};\n\nfunction mapStateToProps(/* state: State */): StateProps {\n  return {};\n}\n\ntype DispatchProps = {};\n\nfunction mapDispatchToProps(/* dispatch: (action: any) => void */): DispatchProps {\n  return {};\n}\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromReact = {\n  reactor: {\n    $brand: 'reactor',\n    'get-value': () => any,\n    'draw': () => any,\n    '$interactNoPauseResume': (insertNode?: (node: any) => void) => any,\n  },\n  convert: (value: any) => any,\n};\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype Props = PropsFromRedux & DispatchProps & StateProps & PropsFromReact;\n\nfunction Reactor({ reactor, convert }: Props) {\n  const divref = useRef(null);\n\n  function getInitialValue() {\n    try {\n      return convert(reactor.draw());\n    } catch (e) {\n      console.log('failed draw with', e);\n      return convert(reactor['get-value']());\n    }\n  }\n  const value = getInitialValue();\n  return (\n    <div\n      ref={divref}\n      onClick={() => {\n        try {\n          reactor.$interactNoPauseResume((node) => {\n            console.log('here is the node, ', node, divref);\n            const div = divref.current;\n\n            if ((div as any) !== null) {\n              while ((div as any).firstChild) {\n                (div as any).removeChild((div as any).lastChild);\n              }\n\n              (div as any).appendChild(node);\n            }\n          });\n        } catch (e) {\n          console.log('failed with', e);\n        }\n      }}\n    >\n      {value}\n    </div>\n  );\n}\n\nexport default connector(Reactor);\n","import React from 'react';\n\nimport TableWidget from './Table';\nimport ImageWidget from './Image';\nimport ChartWidget from './Chart';\nimport ReactorWidget from './Reactor';\n\ntype RenderedValueProps = {\n  value: any;\n};\n\ntype RenderedValueState = {};\n\nfunction convert(value: any) {\n  if (value === undefined) {\n    return 'undefined';\n  }\n\n  if (typeof value === 'number') {\n    return value.toString();\n  }\n\n  if (typeof value === 'string') {\n    return `\"${value}\"`;\n  }\n\n  if (typeof value === 'boolean') {\n    return value.toString();\n  }\n\n  if (typeof value === 'function') {\n    // TODO(michael) can we display more info than just <function> ?\n    return '<function>';\n  }\n\n  if (value.$brand === '$table') {\n    return (\n      <TableWidget\n        headers={value._headers}\n        rows={value._rows}\n        htmlify={(v) => convert(v)}\n      />\n    );\n  }\n\n  if (value.$brand === 'image') {\n    return (\n      <ImageWidget image={value} />\n    );\n  }\n\n  if (value.$brand === 'chart') {\n    return (\n      <ChartWidget\n        headers={value._headers}\n        rows={value._rows}\n        chartType={value.chartType}\n      />\n    );\n  }\n\n  if (value.$brand === 'reactor') {\n    return (\n      <ReactorWidget reactor={value} convert={convert} />\n    );\n  }\n\n  if (typeof value === 'object') {\n    if (Array.isArray(value) && value.length > 100) {\n      const message = `${value.length - 100} elements hidden`;\n      return JSON.stringify(value.slice(0, 100).concat([`... ${message}`]));\n    }\n    // TODO(michael) palceholder for better object display\n    return JSON.stringify(value);\n  }\n  return 'error: data is not string-convertible';\n}\n\nexport default class RenderedValue extends React.Component<RenderedValueProps, RenderedValueState> {\n  render() {\n    const { value } = this.props;\n    return convert(value);\n  }\n}\n","export type RHSCheckValue = {\n  exception: boolean,\n  value: any,\n  exception_val: any,\n};\n\n// The result of evaluating a `check:` or `examples:` block.\n//\n// check:\n//   2 + 2 is 4\n// end\nexport type RHSCheck = {\n  key?: string,\n  lhs: RHSCheckValue, // 2 + 2\n  rhs: RHSCheckValue, // 4\n  path: string, // something like \"$check$block8\" (not used here)\n  loc: string, // something like \"file:///projects/program.arr:4:2-4:14\"\n  success: boolean, // `true`, since 2 + 2 = 4\n};\n\ntype N = number;\nexport type SrcLoc = [string, N, N, N, N, N, N];\n\nexport type Location = {\n  key?: string,\n  name: string,\n  value: any,\n  srcloc: SrcLoc,\n};\n\nexport type Trace = {\n  key?: string,\n  value: any,\n  srcloc: SrcLoc,\n};\n\nexport type RHSObject = Trace | Location | RHSCheck;\n\nexport function isTrace(a: RHSObject): a is Trace {\n  const hasProp = Object.prototype.hasOwnProperty;\n  return hasProp.call(a, 'value') && !hasProp.call(a, 'name');\n}\n\nexport function isLocation(a: RHSObject): a is Location {\n  const hasProp = Object.prototype.hasOwnProperty;\n  return hasProp.call(a, 'name');\n}\n\nexport function isRHSCheck(a: RHSObject): a is RHSCheck {\n  const hasProp = Object.prototype.hasOwnProperty;\n  return hasProp.call(a, 'lhs');\n}\n\nexport type HasSrcLoc =\n  { srcloc: SrcLoc } // Trace or Location\n  | { loc: string }; // RHSCheck\n\n// Typescript can't yet narrow union types using the default\n// hasOwnProperty predicate. This one works, though.\n// See https://fettblog.eu/typescript-hasownproperty/\nfunction hasOwnProperty<X extends {}, Y extends PropertyKey>(\n  obj: X,\n  prop: Y,\n): obj is X & Record<Y, unknown> {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport function getRow(hasSrcLoc: HasSrcLoc): number {\n  if (hasOwnProperty(hasSrcLoc, 'srcloc')) {\n    return hasSrcLoc.srcloc[1];\n  }\n\n  const { loc } = hasSrcLoc;\n\n  const matches = loc.match(/:(\\d+):\\d+-\\d+:\\d+$/);\n\n  if (matches === null) {\n    throw new Error('getRow: received malformed srcloc');\n  }\n\n  return Number(matches[1]);\n}\n\nexport type RHSObjects = {\n  objects: RHSObject[],\n  outdated: boolean,\n};\n\nexport type RunResult = {\n  time: number,\n  result: {\n    $answer: any,\n    $checks: RHSCheck[],\n    $locations: Location[],\n    $traces: Trace[],\n  },\n};\n\nexport function makeRHSObjects(result: RunResult, moduleUri: string): RHSObjects {\n  const {\n    $checks,\n    $locations,\n    $traces,\n  } = result.result;\n\n  function compareRHSObjects(a: RHSObject, b: RHSObject): number {\n    return getRow(a) - getRow(b);\n  }\n\n  // only keep toplevel expressions from this module.\n  const justTraces: RHSObject[] = $traces.filter((t) => t.srcloc[0] === moduleUri);\n\n  const withLocations = justTraces.concat($locations.map((location) => ({\n    ...location,\n    value: (result as any).result[location.name],\n  })));\n\n  const withChecks = withLocations.concat($checks);\n\n  const sorted = withChecks.sort(compareRHSObjects);\n\n  // Add unique keys to each object so that React can re-render them properly.\n  // We assume that each trace / check / location came from a different row.\n  const withKeys = sorted.map((rhsObject) => ({\n    key: getRow(rhsObject).toString(),\n    ...rhsObject,\n  }));\n\n  return {\n    objects: withKeys,\n    outdated: false,\n  };\n}\n","import { Controlled as CodeMirror } from 'react-codemirror2';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport type ErrorState =\n  ({ status: 'failed', effect: 'lint' | 'compile', failures: string[], highlights: number[][] }\n  | { status: 'succeeded', effect: 'lint' | 'compile' }\n  | { status: 'succeeded', effect: 'run', result: any }\n  | { status: 'notLinted' });\n\nexport type Chunk = {\n  startLine: number,\n  text: string,\n  id: string,\n  errorState: ErrorState,\n  editor: false | CodeMirror.Editor;\n  needsJiggle: boolean,\n};\n\nexport function getStartLineForIndex(chunks : Chunk[], index : number) {\n  if (index === 0) { return 0; }\n\n  return chunks[index - 1].startLine + chunks[index - 1].text.split('\\n').length;\n}\n\nexport function newId() {\n  return uuidv4();\n}\n\nexport function findChunkFromSrcloc(\n  chunks: Chunk[],\n  [file, l1] : [string, number],\n  currentFile: string,\n): number | false {\n  if (file !== `file://${currentFile}`) {\n    return false;\n  }\n\n  for (let i = 0; i < chunks.length; i += 1) {\n    const end = chunks[i].startLine + chunks[i].text.split('\\n').length;\n    if (l1 >= chunks[i].startLine && l1 <= end) {\n      return i;\n    }\n  }\n\n  return false;\n}\n","import React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport RenderedValue from './RenderedValue';\nimport { State } from './state';\nimport {\n  RHSObjects,\n  isTrace,\n  isLocation,\n  isRHSCheck,\n  getRow,\n} from './rhsObject';\nimport {\n  Chunk,\n  findChunkFromSrcloc,\n} from './chunk';\n\ntype StateProps = {\n  rhs: RHSObjects,\n  fontSize: number,\n  chunks: Chunk[],\n  currentFile: string,\n  focusedChunk: number | undefined,\n};\n\nfunction mapStateToProps(state: State): StateProps {\n  const {\n    rhs,\n    fontSize,\n    chunks,\n    currentFile,\n    focusedChunk,\n  } = state;\n  return {\n    rhs,\n    fontSize,\n    chunks,\n    currentFile,\n    focusedChunk,\n  };\n}\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype RHSProps = StateProps & PropsFromRedux;\n\nfunction RHS({\n  rhs,\n  fontSize,\n  chunks,\n  currentFile,\n  focusedChunk,\n}: RHSProps) {\n  const elements = (\n    rhs.objects.map((rhsObject) => {\n      const isSelected = !rhs.outdated && focusedChunk !== undefined && findChunkFromSrcloc(\n        chunks,\n        [`file://${currentFile}`, getRow(rhsObject)],\n        currentFile,\n      ) === focusedChunk;\n      const selectedStyle = {\n        background: isSelected ? '#d7d4f0' : 'rgba(0, 0, 0, 0)',\n        borderTop: isSelected ? '2px solid #c8c8c8' : '2px solid rgba(0, 0, 0, 0)',\n        borderBottom: isSelected ? '2px solid #c8c8c8' : '2px solid rgba(0, 0, 0, 0)',\n      };\n      if (isTrace(rhsObject)) {\n        return (\n          <pre\n            key={rhsObject.key}\n            style={{\n              paddingLeft: '1em',\n              ...selectedStyle,\n            }}\n          >\n            <RenderedValue value={rhsObject.value} />\n          </pre>\n        );\n      }\n\n      if (isLocation(rhsObject)) {\n        return (\n          <pre\n            key={rhsObject.key}\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              paddingLeft: '1em',\n              ...selectedStyle,\n            }}\n          >\n            {rhsObject.name}\n            {' '}\n            =&nbsp;\n            <RenderedValue value={rhsObject.value} />\n          </pre>\n        );\n      }\n\n      if (isRHSCheck(rhsObject)) {\n        return (\n          <pre\n            key={rhsObject.key}\n            style={{\n              paddingLeft: '1em',\n              ...selectedStyle,\n            }}\n          >\n            Test\n            {' '}\n            {rhsObject.success ? 'succeeded' : 'failed'}\n            {' '}\n            at\n            {' '}\n            {rhsObject.loc}\n          </pre>\n        );\n      }\n\n      throw new Error(`RHS: malformed RHSObject, ${JSON.stringify(rhsObject)}`);\n    }));\n\n  const outdatedBackground = 'repeating-linear-gradient(45deg, #c8c8c8, #c8c8c8 8em, #979797 8em, #979797 16em)';\n\n  return (\n    <div\n      style={{\n        width: '100%',\n        height: '100%',\n        background: rhs.outdated ? outdatedBackground : '#fff',\n        fontSize,\n        position: 'relative',\n      }}\n    >\n      {elements}\n    </div>\n  );\n}\n\nexport default connector(RHS);\n","import React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport { State } from './state';\nimport { Chunk, getStartLineForIndex, newId } from './chunk';\nimport { Action } from './action';\nimport { Effect } from './effect';\nimport { RHSObjects } from './rhsObject';\n\ntype StateProps = {\n  chunks: Chunk[],\n  focusedChunk: number | undefined,\n  rhs: RHSObjects,\n  firstSelectedChunkIndex: false | number,\n};\n\nfunction mapStateToProps(state: State): StateProps {\n  const {\n    chunks,\n    focusedChunk,\n    rhs,\n    firstSelectedChunkIndex,\n  } = state;\n  return {\n    chunks,\n    focusedChunk,\n    rhs,\n    firstSelectedChunkIndex,\n  };\n}\n\ntype PropsFromReact = {\n  index: number,\n  focused: boolean,\n};\n\ntype DispatchProps = {\n  setFocusedChunk: (index: number) => void,\n  setChunks: (chunks: Chunk[]) => void,\n  setChunk: (chunk: Chunk) => void,\n  enqueueEffect: (effect: Effect) => void,\n  setShouldAdvanceCursor: (value: boolean) => void,\n  setRHS: (value: RHSObjects) => void,\n  setFirstSelectedChunkIndex: (value: false | number) => void,\n};\n\nfunction mapDispatchToProps(dispatch: (action: Action) => any): DispatchProps {\n  return {\n    setFocusedChunk(index: number) {\n      dispatch({ type: 'update', key: 'focusedChunk', value: index });\n    },\n    setChunks(chunks: Chunk[]) {\n      dispatch({ type: 'update', key: 'chunks', value: chunks });\n    },\n    setChunk(chunk: Chunk) {\n      dispatch({ type: 'update', key: 'chunks', value: chunk });\n    },\n    enqueueEffect(effect: Effect) {\n      dispatch({ type: 'enqueueEffect', effect });\n    },\n    setShouldAdvanceCursor(value: boolean) {\n      dispatch({ type: 'update', key: 'shouldAdvanceCursor', value });\n    },\n    setRHS(value: RHSObjects) {\n      dispatch({ type: 'update', key: 'rhs', value });\n    },\n    setFirstSelectedChunkIndex(value: false | number) {\n      dispatch({ type: 'update', key: 'firstSelectedChunkIndex', value });\n    },\n  };\n}\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype DefChunkProps = PropsFromRedux & DispatchProps & StateProps & PropsFromReact;\n\nfunction deleteSelectedChunks(chunks: Chunk[], index: number): {\n  chunks: Chunk[],\n  shouldPreventDefault: boolean,\n  shouldChangeFocus: boolean,\n  firstSelectedChunk: false | number,\n} {\n  let shouldPreventDefault = false;\n  let firstSelectedChunk: false | number = false;\n  const updatedChunks = chunks.reduce(\n    (newChunks: Chunk[], chunk, i) => {\n      const { editor } = chunk;\n      if (editor === false) {\n        newChunks.push(chunk);\n        return newChunks;\n      }\n      const doc = editor.getDoc();\n      const selection = doc.getSelection();\n      if (selection === '') {\n        newChunks.push(chunk);\n        return newChunks;\n      }\n      if (firstSelectedChunk === false) {\n        firstSelectedChunk = i;\n      }\n      if (i === index) {\n        shouldPreventDefault = true;\n      }\n      doc.replaceSelection(''); // delete selected text\n      const newText = editor.getValue();\n      if (newText.trim() === '') {\n        return newChunks;\n      }\n      newChunks.push({\n        ...chunk,\n        text: newText,\n        errorState: { status: 'notLinted' },\n      });\n      return newChunks;\n    },\n    [],\n  );\n\n  const shouldChangeFocus = updatedChunks.length !== chunks.length;\n\n  if (updatedChunks.length === 0) {\n    updatedChunks.push({\n      startLine: 0,\n      text: '',\n      id: newId(),\n      errorState: { status: 'succeeded', effect: 'lint' },\n      editor: false,\n      needsJiggle: false,\n    });\n  }\n\n  for (let i = 0; i < updatedChunks.length; i += 1) {\n    updatedChunks[i].startLine = getStartLineForIndex(updatedChunks, i);\n  }\n\n  return {\n    chunks: updatedChunks,\n    shouldChangeFocus,\n    shouldPreventDefault,\n    firstSelectedChunk,\n  };\n}\n\nclass DefChunk extends React.Component<DefChunkProps, any> {\n  private input: React.RefObject<any>;\n\n  constructor(props: DefChunkProps) {\n    super(props);\n    this.input = React.createRef();\n  }\n\n  componentDidUpdate() {\n    const {\n      chunks,\n      index,\n    } = this.props;\n\n    const {\n      editor,\n      errorState,\n      startLine,\n    } = chunks[index];\n    if (editor && errorState.status === 'succeeded') {\n      const marks = editor.getDoc().getAllMarks();\n      marks.forEach((m) => m.clear());\n    } else if (editor && errorState.status === 'failed') {\n      const { highlights } = errorState;\n      const marks = editor.getDoc().getAllMarks();\n      marks.forEach((m) => m.clear());\n      if (highlights.length > 0) {\n        for (let i = 0; i < highlights.length; i += 1) {\n          const doc = editor.getDoc();\n          // lint errors are relative to the start of a chunk, compile errors\n          // are relative to the start of the program\n          if (errorState.effect === 'lint') {\n            const [l1, ch1, l2, ch2] = highlights[i];\n            doc.markText(\n              {\n                line: l1 - 1,\n                ch: ch1,\n              },\n              {\n                line: l2 - 1,\n                ch: ch2,\n              },\n              { className: 'styled-background-error' },\n            );\n          } else if (errorState.effect === 'compile') {\n            const [l1, ch1, l2, ch2] = highlights[i];\n            doc.markText(\n              {\n                line: l1 - startLine - 1,\n                ch: ch1,\n              },\n              {\n                line: l2 - startLine - 1,\n                ch: ch2,\n              },\n              { className: 'styled-background-error' },\n            );\n          }\n        }\n      }\n    }\n\n    const { focusedChunk } = this.props;\n    if (index === focusedChunk && this.input.current !== null) {\n      this.input.current.editor.focus();\n    }\n  }\n\n  scheduleUpdate(value: string) {\n    const {\n      chunks,\n      index,\n      setChunks,\n      rhs,\n      setRHS,\n    } = this.props;\n\n    const newChunks = [...chunks];\n    newChunks[index] = {\n      ...newChunks[index],\n      text: value,\n      errorState: { status: 'notLinted' },\n    };\n    for (let i = index; i < newChunks.length; i += 1) {\n      newChunks[i] = {\n        ...newChunks[i],\n        startLine: getStartLineForIndex(newChunks, i),\n      };\n    }\n    setChunks(newChunks);\n\n    if (!rhs.outdated) {\n      setRHS({ ...rhs, outdated: true });\n    }\n  }\n\n  handleArrowUp(editor: any, event: Event) {\n    const {\n      index,\n      setFocusedChunk,\n      setShouldAdvanceCursor,\n    } = this.props;\n    const pos = (editor as any).getCursor();\n    if (pos.line === 0 && index > 0) {\n      setFocusedChunk(index - 1);\n      setShouldAdvanceCursor(false);\n      event.preventDefault();\n    }\n  }\n\n  handleArrowDown(editor: any, event: Event) {\n    const {\n      index,\n      setFocusedChunk,\n      chunks,\n      setShouldAdvanceCursor,\n    } = this.props;\n    const pos = (editor as any).getCursor();\n    if (pos.line === chunks[index].text.split('\\n').length - 1 && index < chunks.length - 1) {\n      setFocusedChunk(index + 1);\n      setShouldAdvanceCursor(false);\n      event.preventDefault();\n    }\n  }\n\n  handleEnter(editor: any, event: Event) {\n    const {\n      enqueueEffect,\n      setShouldAdvanceCursor,\n    } = this.props;\n    const pos = (editor as any).getCursor();\n    const token = editor.getTokenAt(pos);\n    if ((event as any).shiftKey) {\n      setShouldAdvanceCursor(false);\n      enqueueEffect('saveFile');\n      event.preventDefault();\n    } else if (token.state.lineState.tokens.length === 0) {\n      setShouldAdvanceCursor(true);\n      enqueueEffect('saveFile');\n      event.preventDefault();\n    }\n  }\n\n  handleDelete(event: Event) {\n    const {\n      chunks,\n      index,\n      setChunks,\n      setFocusedChunk,\n      focusedChunk,\n      enqueueEffect,\n    } = this.props;\n    if (index === 0 && chunks.length > 1 && chunks[0].text.trim() === '') {\n      const newChunks = [...chunks.slice(1, chunks.length)];\n      for (let i = 0; i < newChunks.length; i += 1) {\n        newChunks[i] = {\n          ...newChunks[i],\n          startLine: getStartLineForIndex(newChunks, i),\n        };\n      }\n      setChunks(newChunks);\n      setFocusedChunk(0);\n      event.preventDefault();\n    } else if (index > 0 && index < chunks.length - 1 && chunks[index].text.trim() === '') {\n      const newChunks = [\n        ...chunks.slice(0, index),\n        ...chunks.slice(index + 1, chunks.length)];\n      for (let i = index; i < newChunks.length; i += 1) {\n        newChunks[i] = {\n          ...newChunks[i],\n          startLine: getStartLineForIndex(newChunks, i),\n        };\n      }\n      setChunks(newChunks);\n      event.preventDefault();\n    } else {\n      const result = deleteSelectedChunks(chunks, index);\n      setChunks(result.chunks);\n\n      const {\n        shouldPreventDefault,\n        shouldChangeFocus,\n        firstSelectedChunk,\n      } = result;\n\n      if (shouldChangeFocus && firstSelectedChunk !== false) {\n        const newFocusedChunk = Math.min(result.chunks.length - 1, firstSelectedChunk + 1);\n\n        if (newFocusedChunk !== focusedChunk) {\n          setFocusedChunk(newFocusedChunk);\n        } else {\n          enqueueEffect('saveFile');\n        }\n      }\n      if (shouldPreventDefault) {\n        event.preventDefault();\n      }\n    }\n  }\n\n  handleBackspace(event: Event) {\n    const {\n      chunks, index, setChunks, setFocusedChunk,\n    } = this.props;\n    if (index === 0 && chunks.length > 1 && chunks[0].text.trim() === '') {\n      const newChunks = [...chunks.slice(1, chunks.length)];\n      for (let i = 0; i < newChunks.length; i += 1) {\n        newChunks[i] = {\n          ...newChunks[i],\n          startLine: getStartLineForIndex(newChunks, i),\n        };\n      }\n      setChunks(newChunks);\n      setFocusedChunk(0);\n      event.preventDefault();\n    } else if (index > 0 && chunks[index].text.trim() === '') {\n      const newChunks = [\n        ...chunks.slice(0, index),\n        ...chunks.slice(index + 1, chunks.length)];\n      for (let i = index; i < newChunks.length; i += 1) {\n        newChunks[i] = {\n          ...newChunks[i],\n          startLine: getStartLineForIndex(newChunks, i),\n        };\n      }\n      setChunks(newChunks);\n      setFocusedChunk(index - 1);\n      event.preventDefault();\n    } else {\n      const result = deleteSelectedChunks(chunks, index);\n      setChunks(result.chunks);\n\n      const {\n        shouldPreventDefault,\n        shouldChangeFocus,\n        firstSelectedChunk,\n      } = result;\n\n      if (shouldChangeFocus && firstSelectedChunk !== false) {\n        setFocusedChunk(Math.max(0, firstSelectedChunk - 1));\n      }\n      if (shouldPreventDefault) {\n        event.preventDefault();\n      }\n    }\n  }\n\n  handleMouseDown(event: any) {\n    const {\n      index,\n      chunks,\n      setFocusedChunk,\n      setShouldAdvanceCursor,\n      setFirstSelectedChunkIndex,\n    } = this.props;\n    setShouldAdvanceCursor(false);\n    setFocusedChunk(index);\n\n    if (event.buttons !== 1) {\n      return;\n    }\n    chunks.forEach((chunk) => {\n      const { editor } = chunk;\n      if (editor === false) {\n        return;\n      }\n      const doc = editor.getDoc();\n      doc.setSelections([\n        { anchor: { line: 0, ch: 0 }, head: { line: 0, ch: 0 } },\n      ]); // remove all selections\n    });\n    setFirstSelectedChunkIndex(index);\n  }\n\n  render() {\n    const {\n      chunks, index, focusedChunk,\n    } = this.props;\n    const { text, startLine } = chunks[index];\n\n    return (\n      <div\n        style={{\n          width: '100%',\n          display: 'flex',\n        }}\n      >\n        <div\n          style={{\n            position: 'relative',\n            width: 0,\n            height: '100%',\n          }}\n        >\n          {(() => {\n            const chunk = chunks[index];\n\n            if (chunk.errorState.status === 'failed'\n          && focusedChunk === index) {\n              return (\n                <div style={{\n                  alignSelf: 'center',\n                  background: '#FFF2F2',\n                  position: 'absolute',\n                  top: '100%',\n                  width: '40em',\n                  zIndex: 500001,\n                  fontFamily: 'sans-serif',\n                  borderRadius: '3px',\n                  border: '0.3em solid hsl(204, 100%, 74%)',\n                  padding: '0.2em',\n                  marginRight: '1em',\n                  boxShadow: '0 0 1em',\n                }}\n                >\n                  {chunk.errorState.failures}\n                </div>\n              );\n            }\n\n            return false;\n          })()}\n        </div>\n        <div\n          style={{\n            width: '100%',\n          }}\n          onMouseEnter={(e: any) => {\n            if (e.buttons !== 1) {\n              return;\n            }\n\n            const { editor } = chunks[index];\n\n            if (editor === false) {\n              return;\n            }\n\n            const {\n              firstSelectedChunkIndex,\n              setFirstSelectedChunkIndex,\n            } = this.props;\n\n            if (firstSelectedChunkIndex === false) {\n              setFirstSelectedChunkIndex(index);\n              editor.execCommand('selectAll');\n            } else if (index <= firstSelectedChunkIndex) {\n              // selecting from bottom to the top\n              for (let i = 0; i < chunks.length; i += 1) {\n                const chunkEditor = chunks[i].editor;\n                if (chunkEditor === false) {\n                  return;\n                }\n                const doc = chunkEditor.getDoc();\n                if (i < index || i > firstSelectedChunkIndex) {\n                  doc.setSelections([\n                    { anchor: { line: 0, ch: 0 }, head: { line: 0, ch: 0 } },\n                  ]); // remove all selections\n                } else {\n                  chunkEditor.execCommand('selectAll');\n                }\n              }\n            } else if (index > firstSelectedChunkIndex) {\n              // selecting from top to bottom\n              for (let i = 0; i < chunks.length; i += 1) {\n                const chunkEditor = chunks[i].editor;\n                if (chunkEditor === false) {\n                  return;\n                }\n                const doc = chunkEditor.getDoc();\n                if (i > index || i < firstSelectedChunkIndex) {\n                  doc.setSelections([\n                    { anchor: { line: 0, ch: 0 }, head: { line: 0, ch: 0 } },\n                  ]); // remove all selections\n                } else {\n                  chunkEditor.execCommand('selectAll');\n                }\n              }\n            }\n          }}\n        >\n          <CodeMirror\n            ref={this.input}\n            onMouseDown={(editor: any, e: any) => {\n              this.handleMouseDown(e);\n            }}\n            editorDidMount={(editor) => {\n              const { setChunk } = this.props;\n\n              const marks = editor.getDoc().getAllMarks();\n              marks.forEach((m) => m.clear());\n              editor.setSize(null, 'auto');\n\n              setChunk({ ...chunks[index], editor });\n            }}\n            value={text}\n            options={{\n              mode: 'pyret',\n              theme: 'default',\n              lineNumbers: true,\n              lineWrapping: true,\n              lineNumberFormatter: (l) => String(l + startLine),\n              autofocus: index === focusedChunk,\n            }}\n            onBeforeChange={(editor, data, value) => {\n              this.scheduleUpdate(value);\n            }}\n            onKeyDown={(editor, event) => {\n              switch ((event as any).key) {\n                case 'Enter':\n                  this.handleEnter(editor, event);\n                  break;\n                case 'Backspace':\n                  this.handleBackspace(event);\n                  break;\n                case 'Delete':\n                  this.handleDelete(event);\n                  break;\n                case 'ArrowUp':\n                  this.handleArrowUp(editor, event);\n                  break;\n                case 'ArrowDown':\n                  this.handleArrowDown(editor, event);\n                  break;\n                default:\n              }\n            }}\n            autoCursor\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connector(DefChunk);\n","import React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport {\n  DragDropContext, Droppable, Draggable, DropResult,\n} from 'react-beautiful-dnd';\nimport { Action } from './action';\nimport {\n  State,\n} from './state';\nimport { Chunk, getStartLineForIndex } from './chunk';\nimport { RHSObjects } from './rhsObject';\nimport DefChunk from './DefChunk';\n\ntype StateProps = {\n  chunks: Chunk[],\n  focusedChunk: number | undefined,\n  rhs: RHSObjects,\n};\n\ntype DispatchProps = {\n  handleReorder: any,\n  setRHS: (value: RHSObjects) => void,\n};\n\nfunction mapStateToProps(state: State): StateProps {\n  const {\n    chunks,\n    focusedChunk,\n    rhs,\n  } = state;\n\n  return {\n    chunks,\n    focusedChunk,\n    rhs,\n  };\n}\n\nfunction mapDispatchToProps(dispatch: (action: Action) => any): DispatchProps {\n  return {\n    handleReorder(\n      result: DropResult,\n      chunks: Chunk[],\n      oldFocusedId: string | false,\n    ) {\n      // Great examples! https://codesandbox.io/s/k260nyxq9v\n      const reorder = (innerChunks: Chunk[], start: number, end: number) => {\n        const newResult = Array.from(innerChunks);\n        const [removed] = newResult.splice(start, 1);\n        newResult.splice(end, 0, removed);\n        return newResult;\n      };\n      if (result.destination === undefined) { return; }\n\n      const newChunks = reorder(chunks, result.source.index, result.destination.index);\n\n      for (let i = 0; i < newChunks.length; i += 1) {\n        newChunks[i].startLine = getStartLineForIndex(newChunks, i);\n        if (result.source.index < result.destination.index) {\n          if (i >= result.source.index && i <= result.destination.index) {\n            newChunks[i].errorState.status = 'notLinted';\n          }\n        } else if (result.source.index > result.destination.index) {\n          if (i >= result.destination.index && i <= result.source.index) {\n            newChunks[i].errorState.status = 'notLinted';\n          }\n        }\n      }\n\n      // const firstAffectedChunk = Math.min(result.source.index, result.destination.index);\n\n      function getNewFocusedChunk() {\n        for (let i = 0; i < newChunks.length; i += 1) {\n          if (newChunks[i].id === oldFocusedId) {\n            return i;\n          }\n        }\n\n        return false;\n      }\n\n      dispatch({ type: 'update', key: 'chunks', value: newChunks });\n\n      if (oldFocusedId !== false) {\n        const newFocusedChunk = getNewFocusedChunk();\n        if (newFocusedChunk === false) {\n          throw new Error('handleReorder: new focused chunk is false');\n        }\n\n        if (chunks[newFocusedChunk].id !== oldFocusedId) {\n          dispatch({ type: 'update', key: 'focusedChunk', value: newFocusedChunk });\n        } else {\n          dispatch({ type: 'enqueueEffect', effect: 'saveFile' });\n        }\n      } else {\n        dispatch({ type: 'enqueueEffect', effect: 'saveFile' });\n      }\n    },\n    setRHS(value: RHSObjects) {\n      dispatch({ type: 'update', key: 'rhs', value });\n    },\n  };\n}\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype DefChunksProps = PropsFromRedux & DispatchProps & StateProps;\n\nfunction DefChunks({\n  handleReorder,\n  chunks,\n  focusedChunk,\n  rhs,\n  setRHS,\n}: DefChunksProps) {\n  const onDragEnd = (result: DropResult) => {\n    if (result.destination !== null\n        && result.source!.index !== result.destination!.index) {\n      if (focusedChunk === undefined) {\n        handleReorder(result, chunks, false);\n        setRHS({ ...rhs, outdated: true });\n      } else {\n        const fc = chunks[focusedChunk];\n        if (fc === undefined) {\n          throw new Error('onDragEnd: chunks[focusedChunk] is undefined');\n        }\n        handleReorder(result, chunks, fc.id);\n        setRHS({ ...rhs, outdated: true });\n      }\n    }\n  };\n\n  function setupChunk(chunk: Chunk, index: number) {\n    const focused = focusedChunk === index;\n\n    function getBorderColor() {\n      if (focused && chunk.errorState.status === 'failed') {\n        return 'red';\n      }\n\n      if (!focused && chunk.errorState.status === 'failed') {\n        return '#ff9999';\n      }\n\n      if (focused && chunk.errorState.status === 'notLinted') {\n        return 'orange';\n      }\n\n      if (!focused && chunk.errorState.status === 'notLinted') {\n        return 'yellow';\n      }\n\n      if (focused) {\n        return 'lightgray';\n      }\n\n      return '#eee';\n    }\n\n    const border = getBorderColor();\n\n    return (\n      <Draggable key={chunk.id} draggableId={chunk.id} index={index}>\n        {(draggableProvided) => (\n          <div\n            ref={draggableProvided.innerRef}\n            // eslint-disable-next-line react/jsx-props-no-spreading\n            {...draggableProvided.draggableProps}\n          >\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                width: '100%',\n              }}\n            >\n              <div\n              // eslint-disable-next-line react/jsx-props-no-spreading\n                {...draggableProvided.dragHandleProps}\n                style={{\n                  minWidth: '1.5em',\n                  height: 'auto',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  borderLeft: '1px solid lightgray',\n                  background: `${border}`,\n                  borderRadius: '75% 0% 0% 75%',\n                  marginLeft: '0.5em',\n                  userSelect: 'none',\n                }}\n              >\n                ::\n              </div>\n              <DefChunk\n                key={chunk.id}\n                index={index}\n                focused={focused}\n              />\n            </div>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n\n  const allChunks = chunks.map(setupChunk);\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"droppable\">\n        {(provided) => (\n          <div\n            // eslint-disable-next-line react/jsx-props-no-spreading\n            {...provided.droppableProps}\n            ref={provided.innerRef}\n          >\n            {allChunks}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n}\n\nexport default connector(DefChunks);\n","import React from 'react';\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\nimport 'codemirror/lib/codemirror.css';\nimport 'pyret-codemirror-mode/css/pyret.css';\n\n// pyret-codemirror-mode/mode/pyret.js expects window.CodeMirror to exist and\n// to be bound to the 'codemirror' import.\nimport * as RawCodeMirror from 'codemirror';\n\n(window as any).CodeMirror = RawCodeMirror;\nrequire('pyret-codemirror-mode/mode/pyret');\n\ntype Props = {\n  onEdit: (s: string) => void,\n  highlights: number[][],\n  text: string\n};\ntype State = {\n  editor: CodeMirror.Editor | null\n};\n\nexport default class SingleCodeMirrorDefinitions extends React.Component<Props, State> {\n  constructor(props : Props) {\n    super(props); this.state = { editor: null };\n  }\n\n  componentDidUpdate() {\n    const { editor } = this.state;\n    const { highlights } = this.props;\n\n    if (editor !== null) {\n      if (highlights.length > 0) {\n        for (let i = 0; i < highlights.length; i += 1) {\n          editor.getDoc().markText(\n            {\n              line: highlights[i][0] - 1,\n              ch: highlights[i][1],\n            },\n            {\n              line: highlights[i][2] - 1,\n              ch: highlights[i][3],\n            },\n            { className: 'styled-background-error' },\n          );\n        }\n      } else {\n        const marks = editor.getDoc().getAllMarks();\n        for (let i = 0; i < marks.length; i += 1) {\n          marks[i].clear();\n        }\n      }\n    }\n  }\n\n  onChange = (editor: CodeMirror.Editor, data: CodeMirror.EditorChange, value: string): void => {\n    const { onEdit } = this.props;\n\n    this.setState({ editor });\n\n    for (let i = 0; i < editor.getDoc().getAllMarks().length; i += 1) {\n      editor.getDoc().getAllMarks()[i].clear();\n    }\n    onEdit(value);\n  };\n\n  render() {\n    const { text } = this.props;\n\n    return (\n      <CodeMirror\n        value={text}\n        options={{\n          mode: 'pyret',\n          theme: 'default',\n          lineNumbers: true,\n          lineWrapping: true,\n        }}\n        onChange={this.onChange}\n        autoCursor={false}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  File,\n  Folder,\n} from 'react-feather';\nimport * as control from './control';\n\ntype FSItemProps = {\n  onClick: () => void;\n  path: string;\n  selected: boolean;\n};\n\ntype FSItemState = {};\n\nexport default class FSItem extends React.Component<FSItemProps, FSItemState> {\n  render() {\n    const { path, selected, onClick } = this.props;\n\n    const stats = control.fs.statSync(path);\n\n    const label = (() => {\n      if (stats.isDirectory()) {\n        return (\n          <Folder />\n        );\n      } if (stats.isFile()) {\n        return (\n          <File />\n        );\n      }\n      return '?';\n    })();\n\n    const background = selected ? 'darkgray' : 'rgba(0, 0, 0, 0.3)';\n\n    return (\n      <button\n        onClick={onClick}\n        style={{\n          background,\n          border: 0,\n          height: '2.7em',\n          color: '#fff',\n          textAlign: 'left',\n          flex: 'none',\n          cursor: 'pointer',\n        }}\n        type=\"button\"\n      >\n        <div style={{\n          display: 'flex',\n          flexDirection: 'row',\n        }}\n        >\n          <div style={{\n            width: '1em',\n            paddingRight: '1em',\n          }}\n          >\n            {label}\n          </div>\n          <div>\n            {control.bfsSetup.path.parse(path).base}\n          </div>\n        </div>\n      </button>\n    );\n  }\n}\n","// TODO (michael): improve accessibilty by enabling these rules\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n\nimport React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport {\n  Upload,\n  FilePlus,\n  FolderPlus,\n} from 'react-feather';\nimport * as control from './control';\nimport * as action from './action';\nimport FSItem from './FSItem';\n\ntype StateProps = {\n  browseRoot: string,\n  browsePath: string\n};\n\nfunction mapStateToProps(state: any): StateProps {\n  return {\n    browseRoot: state.browseRoot,\n    browsePath: state.browsePath,\n  };\n}\n\ntype DispatchProps = {\n  setBrowsePath: (path: string) => void,\n  onExpandChild: (path: string) => void,\n};\n\nfunction mapDispatchToProps(dispatch: (action: action.Action) => any): DispatchProps {\n  return {\n    setBrowsePath: (path: string) => dispatch({\n      type: 'update',\n      key: 'browsePath',\n      value: path,\n    }),\n    onExpandChild: (path: string) => dispatch({\n      type: 'update',\n      key: 'currentFile',\n      value: path,\n    }),\n  };\n}\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype FSBrowserProps = PropsFromRedux & DispatchProps & StateProps;\n\nenum EditType {\n  CreateFile,\n  CreateDirectory\n}\n\ntype FSBrowserState = {\n  editType: EditType | undefined,\n  editValue: string,\n  selected: string | undefined,\n};\n\nclass FSBrowser extends React.Component<FSBrowserProps, FSBrowserState> {\n  static compareFSItemPair(a: [string, FSItem], b: [string, FSItem]) {\n    if (a[0] < b[0]) {\n      return -1;\n    } if (a[0] > b[0]) {\n      return 1;\n    }\n    return 0;\n  }\n\n  constructor(props: FSBrowserProps) {\n    super(props);\n\n    this.state = {\n      editType: undefined,\n      editValue: '',\n      selected: undefined,\n    };\n  }\n\n  get browsePathString() {\n    const { browsePath } = this.props;\n    return browsePath;\n  }\n\n  get browsingRoot() {\n    const { browsePath, browseRoot } = this.props;\n    return browsePath === browseRoot;\n  }\n\n  traverseUp = (): void => {\n    const { browsePath, setBrowsePath } = this.props;\n\n    const newPath = control.bfsSetup.path.join(browsePath, '..');\n\n    this.setState({\n      selected: undefined,\n    });\n\n    setBrowsePath(newPath);\n  };\n\n  traverseDown = (childDirectory: string): void => {\n    const { browsePath, setBrowsePath } = this.props;\n\n    const newPath = control.bfsSetup.path.join(browsePath, childDirectory);\n\n    this.setState({\n      selected: undefined,\n    });\n\n    setBrowsePath(newPath);\n  };\n\n  expandChild = (child: string): void => {\n    const { onExpandChild } = this.props;\n\n    const fullChildPath = control.bfsSetup.path.join(this.browsePathString, child);\n    const stats = control.fs.statSync(fullChildPath);\n\n    if (stats.isDirectory()) {\n      this.traverseDown(child);\n    } else if (stats.isFile()) {\n      this.setState({\n        selected: child,\n      });\n\n      onExpandChild(fullChildPath);\n    }\n  };\n\n  createFSItemPair = (filePath: string): [string, any] => {\n    const { browsePath } = this.props;\n    const { selected } = this.state;\n\n    return [\n      filePath,\n      <FSItem\n        key={filePath}\n        onClick={() => this.expandChild(filePath)}\n        path={control.bfsSetup.path.join(browsePath, filePath)}\n        selected={filePath === selected}\n      />,\n    ];\n  };\n\n  toggleEditFile = (): void => {\n    const { editType } = this.state;\n\n    if (editType === EditType.CreateFile) {\n      this.setState({\n        editType: undefined,\n      });\n    } else {\n      this.setState({\n        editType: EditType.CreateFile,\n      });\n    }\n  };\n\n  toggleEditDirectory = (): void => {\n    const { editType } = this.state;\n\n    if (editType === EditType.CreateDirectory) {\n      this.setState({\n        editType: undefined,\n      });\n    } else {\n      this.setState({\n        editType: EditType.CreateDirectory,\n      });\n    }\n  };\n\n  handleSubmit = (value: React.SyntheticEvent): void => {\n    const { editValue, editType } = this.state;\n    const { browsePath } = this.props;\n\n    value.preventDefault();\n\n    const name = editValue;\n    const path = control.bfsSetup.path.join(browsePath, name);\n\n    if (editType === EditType.CreateFile) {\n      control.createFile(path);\n    } else {\n      control.createDirectory(path);\n    }\n\n    this.setState({\n      editType: undefined,\n      editValue: '',\n    });\n  };\n\n  onChange = (event: React.SyntheticEvent): void => {\n    this.setState({\n      editValue: (event.target as HTMLInputElement).value,\n    });\n  };\n\n  deleteSelected = (): void => {\n    const { selected } = this.state;\n    const { browsePath } = this.props;\n\n    if (selected === undefined) {\n      control.removeDirectory(this.browsePathString);\n\n      this.traverseUp();\n    } else {\n      control.removeFile(\n        control.bfsSetup.path.join(browsePath, selected),\n      );\n\n      this.setState({\n        selected: undefined,\n      });\n    }\n  };\n\n  selectCurrentDirectory = (): void => {\n    this.setState({\n      selected: undefined,\n    });\n  };\n\n  uploadFile = (event: any): void => {\n    const { browsePath } = this.props;\n\n    const file = event.target.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n\n      reader.onload = (e: any) => {\n        const data = e.target.result;\n        const { name } = file;\n\n        control.bfsSetup.fs.writeFileSync(\n          control.bfsSetup.path.join(browsePath, name),\n          data,\n        );\n\n        this.forceUpdate();\n      };\n\n      reader.readAsText(file);\n    }\n  };\n\n  render() {\n    const { editType, editValue, selected } = this.state;\n    const { browsePath } = this.props;\n\n    const that = this;\n\n    function makeEditor() {\n      if (editType !== undefined) {\n        return (\n          <div style={{\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n          }}\n          >\n            <pre style={{\n              paddingLeft: '1em',\n              paddingRight: '1em',\n            }}\n            >\n              {editType === EditType.CreateFile ? (\n                <div>Name:</div>\n              ) : (\n                <div style={{ display: 'flex', flexDirection: 'row' }}>\n                  Name:\n                </div>\n              )}\n            </pre>\n            <form\n              onSubmit={that.handleSubmit}\n              style={{\n                height: '100%',\n                flexGrow: 1,\n              }}\n            >\n              <input\n                type=\"text\"\n                value={editValue}\n                onChange={that.onChange}\n                style={{\n                  border: 0,\n                  padding: 0,\n                  width: '100%',\n                  height: '100%',\n                }}\n              />\n            </form>\n          </div>\n        );\n      }\n\n      return false;\n    }\n    const editor = makeEditor();\n\n    return (\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\n          <div\n            className=\"fs-browser-item\"\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              height: 'auto',\n            }}\n          >\n            <div\n              onClick={this.selectCurrentDirectory}\n              style={{\n                cursor: 'pointer',\n                fontFamily: 'monospace',\n                display: 'flex',\n                alignItems: 'center',\n                paddingLeft: '1em',\n                paddingRight: '1em',\n                background: selected ? 'none' : 'darkgray',\n              }}\n            >\n              {control.bfsSetup.path.parse(browsePath).base || '/'}\n            </div>\n            <div style={{\n              flexGrow: 1,\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'flex-end',\n            }}\n            >\n              <label\n                className=\"fs-browser-item\"\n                style={{\n                  width: '2.3em',\n                  height: '100%',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                <input\n                  type=\"file\"\n                  onChange={this.uploadFile}\n                  style={{\n                    display: 'none',\n                  }}\n                />\n                <Upload />\n              </label>\n              <button\n                className=\"fs-browser-item\"\n                onClick={this.toggleEditFile}\n                type=\"button\"\n              >\n                <FilePlus />\n              </button>\n              <button\n                className=\"fs-browser-item\"\n                onClick={this.toggleEditDirectory}\n                type=\"button\"\n              >\n                <FolderPlus />\n              </button>\n              {/* {!this.browsingRoot\n                  && (\n                  <button\n                  className=\"fs-browser-item\"\n                  onClick={this.deleteSelected}\n                  type=\"button\"\n                  >\n                  <X />\n                  </button>\n                  )} */}\n            </div>\n          </div>\n          {editor}\n          {!this.browsingRoot && (\n          <FSItem\n            onClick={this.traverseUp}\n            path=\"..\"\n            selected={false}\n          />\n          )}\n          {\n                        control.fs\n                          .readdirSync(this.browsePathString)\n                          .map(this.createFSItemPair)\n                          .sort(FSBrowser.compareFSItemPair)\n                          .map((x: [string, FSItem]) => x[1])\n                    }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connector(FSBrowser);\n","import React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { State } from './state';\nimport { Action } from './action';\n\ntype StateProps = {\n  fontSize: number,\n};\n\nfunction mapStateToProps(state: State): StateProps {\n  const { fontSize } = state;\n  return {\n    fontSize,\n  };\n}\n\ntype DispatchProps = {\n  onIncrease: (oldSize: number) => void,\n  onDecrease: (oldSize: number) => void,\n  onReset: () => void,\n};\n\nfunction mapDispatchToProps(dispatch: (action: Action) => any): DispatchProps {\n  return {\n    onIncrease(oldSize: number): void {\n      dispatch({ type: 'update', key: 'fontSize', value: oldSize + 1 });\n    },\n    onDecrease(oldSize: number): void {\n      dispatch({ type: 'update', key: 'fontSize', value: oldSize - 1 });\n    },\n    onReset(): void {\n      dispatch({ type: 'update', key: 'fontSize', value: 12 });\n    },\n  };\n}\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype FontSizeProps = PropsFromRedux & DispatchProps & StateProps;\n\nfunction FontSize({\n  onIncrease, onDecrease, onReset, fontSize,\n}: FontSizeProps) {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'row',\n        height: '2.7em',\n      }}\n    >\n      <button\n        className=\"option\"\n        onClick={() => onDecrease(fontSize)}\n        type=\"button\"\n        style={{\n          width: '2.7em',\n        }}\n      >\n        -\n      </button>\n      <button\n        className=\"option\"\n        onClick={onReset}\n        type=\"button\"\n        style={{\n          flexGrow: 2,\n        }}\n      >\n        Font (\n        {fontSize}\n        {' '}\n        px)\n      </button>\n      <button\n        className=\"option\"\n        onClick={() => onIncrease(fontSize)}\n        type=\"button\"\n        style={{\n          width: '2.7em',\n        }}\n      >\n        +\n      </button>\n    </div>\n  );\n}\n\nexport default connector(FontSize);\n","// TODO (michael): improve accessibilty by enabling these rules\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\nimport React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { MenuItems } from './menu-types';\nimport { State, EditorMode } from './state';\nimport { Action } from './action';\nimport FSBrowser from './FSBrowser';\nimport FontSize from './FontSize';\n\ntype StateProps = {\n  menuItems: MenuItems,\n  menuTabVisible: false | number,\n};\n\nfunction mapStateToProps(state: State): StateProps {\n  const { menuItems, menuTabVisible } = state;\n  return { menuItems, menuTabVisible };\n}\n\ntype DispatchProps = {\n  setEditorMode: (mode: EditorMode) => void,\n};\n\nfunction mapDispatchToProps(dispatch: (action: Action) => any): DispatchProps {\n  return {\n    setEditorMode: (mode: EditorMode) => {\n      dispatch({ type: 'update', key: 'editorMode', value: mode });\n    },\n  };\n}\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype MenuProps = PropsFromRedux & DispatchProps & StateProps;\n\nfunction Menu({ menuItems, menuTabVisible, setEditorMode }: MenuProps) {\n  function getTab() {\n    if (menuTabVisible === false) {\n      return false;\n    }\n\n    switch (menuItems[menuTabVisible].name) {\n      case 'Files':\n        return (\n          <FSBrowser />\n        );\n      case 'Options':\n        return (\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n            }}\n          >\n            <div\n              style={{\n                display: 'flex',\n                height: '2.7em',\n              }}\n            >\n              <button\n                onClick={() => setEditorMode(EditorMode.Text)}\n                className=\"option\"\n                key=\"TextEditor\"\n                type=\"button\"\n                style={{\n                  width: '50%',\n                }}\n              >\n                Text\n              </button>\n              <button\n                onClick={() => setEditorMode(EditorMode.Chunks)}\n                className=\"option\"\n                key=\"ChunkEditor\"\n                type=\"button\"\n                style={{\n                  width: '50%',\n                }}\n              >\n                Chunks\n              </button>\n            </div>\n            <FontSize key=\"FontSize\" />\n          </div>\n        );\n      default:\n        throw new Error(`Menu: unknown menu item name, ${menuItems[menuTabVisible].name}`);\n    }\n  }\n\n  const tab = getTab();\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        background: '#c8c8c8',\n        overflowY: tab === false ? undefined : 'scroll',\n        minWidth: tab === false ? undefined : '16em',\n      }}\n    >\n      {tab}\n    </div>\n  );\n}\n\nexport default connector(Menu);\n\n// export default class Menu extends React.Component<MenuProps, MenuState> {\n//   constructor(props: MenuProps) {\n//     super(props);\n//\n//     this.state = {\n//       visible: false,\n//       tab: 0,\n//     };\n//   }\n//\n//   toggleTab = (n: number): void => {\n//     const { tab, visible } = this.state;\n//     if (tab === n) {\n//       this.setState({\n//         visible: !visible,\n//       });\n//     } else {\n//       this.setState({\n//         tab: n,\n//         visible: true,\n//       });\n//     }\n//   };\n//\n//   render() {\n//     const { children } = this.props;\n//     const { visible, tab } = this.state;\n//\n//     function getChildArray() {\n//       if (Array.isArray(children)) {\n//         return children;\n//       }\n//       return [children];\n//     }\n//\n//     const childArray = getChildArray();\n//\n//     const childNodes = childArray.map((childTab: any, index: number) => (\n//       <div\n//         className={(\n//           visible && tab === index) ? (\n//             'menu-tab-active'\n//           ) : (\n//             'menu-tab-inactive'\n//           )}\n//         key={childTab.props.name}\n//         onClick={() => this.toggleTab(index)}\n//       >\n//         {childTab.props.icon}\n//       </div>\n//     ));\n//\n//     const content = childArray[tab];\n//\n//     return (\n//       <div className=\"menu-container\">\n//         <div className=\"menu-tabbar\">\n//           {childNodes}\n//         </div>\n//         {visible && content}\n//       </div>\n//     );\n//   }\n// }\n","// TODO (michael): improve accessibilty by enabling these rules\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\nimport React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { Action } from './action';\nimport { MenuItems } from './menu-types';\nimport { State } from './state';\n\ntype StateProps = {\n  menuItems: MenuItems,\n  menuTabVisible: false | number,\n};\n\nfunction mapStateToProps(state: State): StateProps {\n  const { menuItems, menuTabVisible } = state;\n  return { menuItems, menuTabVisible };\n}\n\ntype DispatchProps = {\n  toggleTab: (tab: number) => void,\n};\n\nfunction mapDispatchToProps(dispatch: (action: Action) => any): DispatchProps {\n  return {\n    toggleTab(tab) {\n      dispatch({ type: 'update', key: 'menuTabVisible', value: tab });\n    },\n  };\n}\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype MenuBarProps = PropsFromRedux & DispatchProps & StateProps;\n\nfunction MenuBar({ menuItems, menuTabVisible, toggleTab }: MenuBarProps) {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        height: '100%',\n      }}\n    >\n      {menuItems.map((item, index) => {\n        const { name } = item;\n        return (\n          <button\n            type=\"button\"\n            onClick={() => toggleTab(index)}\n            style={{\n              background: menuTabVisible === index ? 'darkgray' : '#979797',\n              height: '100%',\n              border: 'none',\n              color: 'rgb(255, 255, 255)',\n              marginRight: '0.1em',\n            }}\n            key={name}\n          >\n            {name}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default connector(MenuBar);\n","import React from 'react';\n\ntype FooterProps = {\n  message: string;\n};\n\nexport default function Footer({ message }: FooterProps) {\n  return (\n    <div className=\"footer-container\">\n      {message}\n    </div>\n  );\n}\n","// TODO (michael): improve accessibilty by enabling these rules\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\nimport React from 'react';\n\nexport default function Dropdown({ children }: { children: any }) {\n  return (\n    <div\n      className=\"run-dropdown\"\n      onClick={(e) => e.stopPropagation()}\n    >\n      {children}\n    </div>\n  );\n}\n","// TODO (michael): improve accessibilty by enabling these rules\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\nimport React from 'react';\n\nexport type DropdownOptionProps = {\n  enabled: boolean,\n  onClick: () => void,\n  children: React.ReactNode,\n};\n\nexport default function DropdownOption({ enabled, onClick, children }: DropdownOptionProps) {\n  const internalName = `DropdownOption${new Date().getTime()}`;\n\n  return (\n    <div\n      className={enabled ? 'run-option-enabled' : 'run-option-disabled'}\n      onClick={onClick}\n    >\n      <label\n        htmlFor={internalName}\n        className=\"run-option-label\"\n      >\n        {children}\n      </label>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Header({ children }: { children: any }) {\n  return (\n    <div\n      className=\"header-container\"\n      style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from 'react';\n\nexport type InteractionErrorProps = {\n  fontSize: number,\n  children: React.ReactNode,\n};\n\nexport default function InteractionError({ fontSize, children }: InteractionErrorProps) {\n  return (\n    <div className=\"interaction-error\">\n      <p style={{\n        fontSize,\n        padding: 0,\n        margin: 0,\n      }}\n      >\n        {children}\n      </p>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport { connect, ConnectedProps } from 'react-redux';\nimport SplitterLayout from 'react-splitter-layout';\nimport { Chunk } from './chunk';\nimport * as State from './state';\nimport { EditorMode } from './state';\nimport RHS from './RHS';\nimport DefChunks from './DefChunks';\nimport SingleCodeMirrorDefinitions from './SingleCodeMirrorDefinitions';\nimport Menu from './Menu';\nimport MenuBar from './MenuBar';\nimport Footer from './Footer';\nimport Dropdown from './Dropdown';\nimport DropdownOption from './DropdownOption';\nimport Header from './Header';\nimport InteractionError from './InteractionError';\nimport * as control from './control';\nimport 'react-splitter-layout/lib/index.css';\nimport * as action from './action';\n\ntype StateProps = {\n  browseRoot: string,\n  currentFileContents: undefined | string,\n  definitionsHighlights: number[][],\n  fontSize: number,\n  stopify: boolean,\n  checks: any[],\n  interactionErrors: any[],\n  editorMode: EditorMode,\n  chunks: Chunk[],\n  running: boolean,\n  compiling: boolean | 'out-of-date',\n  linting: boolean,\n  dropdownVisible: boolean,\n  autoRun: boolean,\n  typeCheck: boolean,\n};\n\nfunction mapStateToProps(state: State.State): StateProps {\n  return {\n    browseRoot: state.browseRoot,\n    currentFileContents: state.currentFileContents,\n    definitionsHighlights: state.definitionsHighlights,\n    fontSize: state.fontSize,\n    stopify: state.runKind === control.backend.RunKind.Async,\n    checks: state.checks,\n    interactionErrors: state.interactionErrors,\n    editorMode: state.editorMode,\n    chunks: state.chunks,\n    running: state.running,\n    compiling: state.compiling,\n    linting: state.linting,\n    dropdownVisible: state.dropdownVisible,\n    autoRun: state.autoRun,\n    typeCheck: state.typeCheck,\n  };\n}\n\ntype DispatchProps = {\n  stop: () => void,\n  run: () => void,\n  updateContents: (contents: string) => void,\n  setEditorMode: (mode: EditorMode) => void,\n  setAutoRun: (autoRun: boolean) => void,\n  setStopify: (stopify: boolean) => void,\n  setTypeCheck: (typeCheck: boolean) => void,\n  setDropdownVisible: (dropdownVisible: boolean) => void,\n};\n\nfunction mapDispatchToProps(dispatch: (action: action.Action) => any): DispatchProps {\n  return {\n    stop: () => dispatch({ type: 'enqueueEffect', effect: 'stop' }),\n    run: () => dispatch({ type: 'enqueueEffect', effect: 'saveFile' }),\n    updateContents: (contents: string) => dispatch({\n      type: 'update',\n      key: 'currentFileContents',\n      value: contents,\n    }),\n    setEditorMode: (mode: EditorMode) => {\n      dispatch({ type: 'update', key: 'editorMode', value: mode });\n    },\n    setAutoRun: (autoRun: boolean) => {\n      dispatch({ type: 'update', key: 'autoRun', value: autoRun });\n    },\n    setStopify: (stopify: boolean) => {\n      if (stopify) {\n        dispatch({ type: 'update', key: 'runKind', value: control.backend.RunKind.Async });\n      } else {\n        dispatch({ type: 'update', key: 'runKind', value: control.backend.RunKind.Sync });\n      }\n    },\n    setTypeCheck: (typeCheck: boolean) => {\n      dispatch({ type: 'update', key: 'typeCheck', value: typeCheck });\n    },\n    setDropdownVisible: (dropdownVisible: boolean) => {\n      dispatch({ type: 'update', key: 'dropdownVisible', value: dropdownVisible });\n    },\n  };\n}\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ncontrol.installFileSystem();\ncontrol.loadBuiltins();\n\n// type EditorProps = {};\n\ntype EditorProps = PropsFromRedux & DispatchProps & StateProps;\n\nexport class Editor extends React.Component<EditorProps, any> {\n  componentDidMount() {\n    document.body.addEventListener('copy', this.makeCopyHandler());\n  }\n\n  makeHeaderButton = (text: string, enabled: boolean, onClick: () => void) => (\n    <button\n      className={(enabled ? 'run-option-enabled' : 'run-option-disabled')}\n      onClick={onClick}\n      type=\"button\"\n    >\n      {text}\n    </button>\n  );\n\n  makeDefinitions() {\n    const {\n      editorMode,\n      currentFileContents,\n      updateContents,\n      definitionsHighlights,\n    } = this.props;\n\n    if (editorMode === EditorMode.Text) {\n      return (\n        <SingleCodeMirrorDefinitions\n          text={currentFileContents || ''}\n          onEdit={(contents: string) => updateContents(contents)}\n          highlights={definitionsHighlights}\n        />\n      );\n    }\n\n    if (editorMode === EditorMode.Chunks) {\n      return (\n        <DefChunks />\n      );\n    }\n\n    throw new Error('Unknown editor mode');\n  }\n\n  makeCopyHandler() {\n    const that = this;\n\n    return (e: any) => {\n      const {\n        chunks,\n      } = that.props;\n\n      let data = '';\n\n      chunks.forEach((chunk, i) => {\n        const { editor } = chunk;\n\n        if (editor === false) {\n          return;\n        }\n\n        const doc = editor.getDoc();\n        const selection = doc.getSelection();\n\n        if (selection === '') {\n          return;\n        }\n\n        data += selection;\n\n        if (i !== chunks.length - 1) {\n          data += '#.CHUNK#\\n';\n        }\n      });\n\n      e.clipboardData.setData('text/plain', data);\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    const {\n      fontSize,\n      interactionErrors,\n      stopify,\n      stop,\n      run,\n      running,\n      compiling,\n      linting,\n      dropdownVisible,\n      autoRun,\n      typeCheck,\n      setAutoRun,\n      setStopify,\n      setTypeCheck,\n      setDropdownVisible,\n    } = this.props;\n\n    const interactionValues = (\n      <RHS />\n    );\n\n    const dropdown = dropdownVisible && (\n      <Dropdown>\n        <DropdownOption\n          enabled={autoRun}\n          onClick={() => setAutoRun(!autoRun)}\n        >\n          Auto Run\n        </DropdownOption>\n        <DropdownOption\n          enabled={stopify}\n          onClick={() => setStopify(!stopify)}\n        >\n          Stopify\n        </DropdownOption>\n        <DropdownOption\n          enabled={typeCheck}\n          onClick={() => setTypeCheck(!typeCheck)}\n        >\n          Type Check\n        </DropdownOption>\n      </Dropdown>\n    );\n\n    const rightHandSide = (\n      <div className=\"interactions-area-container\">\n        {interactionErrors.length > 0 ? (\n          <SplitterLayout\n            vertical\n            percentage\n          >\n            {interactionValues}\n            <InteractionError fontSize={fontSize}>\n              {(() => {\n                if (interactionErrors.length === 1\n                        && interactionErrors[0] === 'Could not find module with uri: builtin://global') {\n                  return ['The first line of your program should be `import global as G`'];\n                }\n                return interactionErrors;\n              })()}\n            </InteractionError>\n          </SplitterLayout>\n        ) : interactionValues}\n      </div>\n    );\n\n    const definitions = this.makeDefinitions();\n\n    return (\n      <div className=\"page-container\">\n        <Header>\n          <div>\n            <MenuBar />\n          </div>\n          <div\n            style={{\n              height: '100%',\n            }}\n          >\n            {stopify && running ? (\n              <button\n                className=\"stop-available\"\n                onClick={stop}\n                type=\"button\"\n              >\n                Stop\n              </button>\n            ) : (\n              <button\n                className=\"stop-unavailable\"\n                type=\"button\"\n              >\n                Stop\n              </button>\n            )}\n            <div\n              className=\"run-container\"\n            >\n              <button\n                className=\"run-ready\"\n                type=\"button\"\n                onClick={run}\n              >\n                Run\n              </button>\n              <button\n                type=\"button\"\n                className=\"run-options\"\n                onClick={() => setDropdownVisible(!dropdownVisible)}\n                onBlur={() => setDropdownVisible(false)}\n              >\n                &#8628;\n                {dropdown}\n              </button>\n            </div>\n          </div>\n        </Header>\n        <div className=\"code-container\">\n          <Menu />\n          <SplitterLayout\n            vertical={false}\n            percentage\n          >\n            <div\n              className=\"edit-area-container\"\n              style={{ fontSize }}\n            >\n              {definitions}\n            </div>\n            {rightHandSide}\n          </SplitterLayout>\n        </div>\n        <Footer message={`linting; ${linting}; compiling: ${compiling}; running: ${running}`} />\n      </div>\n    );\n  }\n}\n\nexport default connector(Editor);\n","import { compiled, compiledBuiltin } from './path';\n\nexport default function load(\n  fs: any,\n  prewrittenDirectory: string,\n  uncompiledDirectory: string,\n  runtimeFiles: any,\n): void {\n  if (!fs.existsSync(prewrittenDirectory)) {\n    fs.mkdirSync(prewrittenDirectory);\n  }\n\n  if (!fs.existsSync(compiled)) {\n    fs.mkdirSync(compiled);\n  }\n\n  if (!fs.existsSync(compiledBuiltin)) {\n    fs.mkdirSync(compiledBuiltin);\n  }\n\n  runtimeFiles.forEach((item: any) => {\n    const { key, content, timestamp } = item;\n\n    const fullPathKey = `/${key}`;\n\n    const compiledPath = fullPathKey.replace(/^\\/prewritten/, '/compiled/builtin');\n\n    if (fs.existsSync(fullPathKey)) {\n      const statResult = fs.statSync(fullPathKey);\n      const localTimestamp = statResult.mtime.getTime();\n      if (localTimestamp < timestamp) {\n        fs.writeFileSync(fullPathKey, content);\n        fs.writeFileSync(compiledPath, content);\n      }\n    } else {\n      fs.writeFileSync(fullPathKey, content);\n      fs.writeFileSync(compiledPath, content);\n    }\n  });\n}\n","import { createStore } from 'redux';\nimport ideApp from './reducer';\nimport { EditorMode, CHUNKSEP, State } from './state';\nimport {\n  newId,\n  Chunk,\n} from './chunk';\nimport { Action } from './action';\nimport { RunKind } from './backend';\nimport * as control from './control';\n\ntype Dispatch = (action: Action) => void;\n\nlet currentRunner: any;\n\nfunction handleStartEditTimer(dispatch: Dispatch, editTimer: NodeJS.Timer | false) {\n  if (editTimer) {\n    clearTimeout(editTimer);\n  }\n\n  dispatch({\n    type: 'effectEnded',\n    status: 'succeeded',\n    effect: 'startEditTimer',\n    timer: setTimeout(() => {\n      dispatch({\n        type: 'effectEnded',\n        status: 'succeeded',\n        effect: 'editTimer',\n      });\n    }, 200),\n  });\n}\n\nfunction handleLoadFile(\n  dispatch: Dispatch,\n  currentFile: string,\n  editorMode: EditorMode,\n) {\n  const contents = control.openOrCreateFile(currentFile);\n\n  switch (editorMode) {\n    case EditorMode.Text:\n      dispatch({ type: 'update', key: 'currentFileContents', value: contents });\n      break;\n    case EditorMode.Chunks: {\n      const chunkStrings = contents.split(CHUNKSEP);\n      let totalLines = 0;\n      const chunks = chunkStrings.map((chunkString) => {\n        const chunk: Chunk = {\n          text: chunkString,\n          startLine: totalLines,\n          id: newId(),\n          errorState: { status: 'notLinted' },\n          editor: false,\n          needsJiggle: false,\n        };\n\n        totalLines += chunkString.split('\\n').length;\n\n        return chunk;\n      });\n\n      dispatch({ type: 'update', key: 'chunks', value: chunks });\n      break;\n    }\n    default:\n  }\n\n  dispatch({\n    type: 'effectEnded',\n    status: 'succeeded',\n    effect: 'loadFile',\n  });\n}\n\nfunction handleSetupWorkerMessageHandler(dispatch: Dispatch) {\n  function handleLog(message: string): void {\n    console.log(message);\n  }\n\n  function handleSetupFinished(): void {\n    dispatch({\n      type: 'effectEnded',\n      status: 'succeeded',\n      effect: 'setup',\n    });\n  }\n\n  function handleCompileFailure(errors: string[]): void {\n    dispatch({\n      type: 'effectEnded',\n      status: 'failed',\n      effect: 'compile',\n      errors,\n    });\n  }\n\n  function handleRuntimeFailure(errors: string[]): void {\n    dispatch({\n      type: 'effectEnded',\n      status: 'failed',\n      effect: 'run',\n      errors,\n    });\n  }\n\n  function handleLintFailure(lintFailure: { name: string, errors: string[] }): void {\n    dispatch({\n      type: 'effectEnded',\n      status: 'failed',\n      effect: 'lint',\n      name: lintFailure.name,\n      errors: lintFailure.errors,\n    });\n  }\n\n  function handleLintSuccess(lintSuccess: { name: string }): void {\n    dispatch({\n      type: 'effectEnded',\n      status: 'succeeded',\n      effect: 'lint',\n      name: lintSuccess.name,\n    });\n  }\n\n  function handleCompileSuccess(): void {\n    dispatch({\n      type: 'effectEnded',\n      status: 'succeeded',\n      effect: 'compile',\n    });\n  }\n\n  function handleCreateReplSuccess(): void {\n    dispatch({\n      type: 'effectEnded',\n      status: 'succeeded',\n      effect: 'createRepl',\n    });\n  }\n\n  function handleCompileInteractionSuccess(): void {\n    console.log('compile interaction success (nyi)');\n  }\n\n  function handleCompileInteractionFailure(): void {\n    console.log('compile interaction failure (nyi)');\n  }\n\n  control.setupWorkerMessageHandler(\n    handleLog,\n    handleSetupFinished,\n    handleCompileFailure,\n    handleRuntimeFailure,\n    handleLintFailure,\n    handleLintSuccess,\n    handleCompileSuccess,\n    handleCreateReplSuccess,\n    handleCompileInteractionSuccess,\n    handleCompileInteractionFailure,\n  );\n\n  dispatch({\n    type: 'effectEnded',\n    status: 'succeeded',\n    effect: 'setupWorkerMessageHandler',\n  });\n}\n\nfunction handleCreateRepl() {\n  control.createRepl();\n}\n\nfunction handleSaveFile(\n  dispatch: Dispatch,\n  mode: EditorMode,\n  path: string,\n  contents: string,\n  chunks: Chunk[],\n) {\n  switch (mode) {\n    case EditorMode.Text:\n      control.fs.writeFileSync(path, contents);\n      break;\n    case EditorMode.Chunks:\n      control.fs.writeFileSync(\n        path,\n        chunks.map((chunk) => chunk.text).join(CHUNKSEP),\n      );\n      break;\n    default:\n      throw new Error('handleSaveFile: unknown editor mode');\n  }\n\n  dispatch({\n    type: 'effectEnded',\n    status: 'succeeded',\n    effect: 'saveFile',\n  });\n}\n\nfunction handleCompile(dispatch: Dispatch, path: string, typeCheck: boolean) {\n  const { dir, base } = control.bfsSetup.path.parse(path);\n  control.compile(dir, base, typeCheck);\n}\n\nfunction handleRun(dispatch: Dispatch, currentFile: string, runKind: RunKind) {\n  const { base } = control.bfsSetup.path.parse(currentFile);\n  control.run(\n    control.path.runBase,\n    `${base}.js`,\n    (runResult: any) => {\n      console.log('runResult', runResult);\n      if (runResult.result.error === undefined) {\n        dispatch({\n          type: 'effectEnded',\n          status: 'succeeded',\n          effect: 'run',\n          result: runResult,\n        });\n      } else {\n        dispatch({\n          type: 'effectEnded',\n          status: 'failed',\n          effect: 'run',\n          errors: runResult.result.result,\n        });\n      }\n    },\n    (runner: any) => {\n      currentRunner = runner;\n    },\n    runKind,\n  );\n}\n\nfunction handleStop(dispatch: Dispatch) {\n  currentRunner.pause((line: number) => {\n    dispatch({\n      type: 'effectEnded',\n      status: 'succeeded',\n      effect: 'stop',\n      line,\n    });\n  });\n}\n\nfunction handleTextLint(currentFileContents: string): void {\n  control.lint(currentFileContents, 'text');\n}\n\nfunction handleChunkLint(text: string, id: string): void {\n  control.lint(text, id);\n}\n\nfunction handleFirstActionableEffect(\n  state: State,\n  dispatch: Dispatch,\n): false | { effect: number, applyEffect: () => void } {\n  const { effectQueue } = state;\n\n  for (let i = 0; i < effectQueue.length; i += 1) {\n    const effect = effectQueue[i];\n\n    switch (effect) {\n      case 'startEditTimer': {\n        const { editTimer } = state;\n        return {\n          effect: i,\n          applyEffect: () => handleStartEditTimer(dispatch, editTimer),\n        };\n      }\n      case 'loadFile':\n        {\n          console.log('loadFile');\n          const { currentFile, editorMode } = state;\n          if (currentFile !== undefined) {\n            return {\n              effect: i,\n              applyEffect: () => handleLoadFile(dispatch, currentFile, editorMode),\n            };\n          }\n        }\n        break;\n      case 'saveFile':\n        {\n          const {\n            editorMode, currentFile, currentFileContents, chunks,\n          } = state;\n          if (currentFile !== undefined && currentFileContents !== undefined) {\n            return {\n              effect: i,\n              applyEffect: () => handleSaveFile(\n                dispatch,\n                editorMode,\n                currentFile,\n                currentFileContents,\n                chunks,\n              ),\n            };\n          }\n        }\n        break;\n      case 'setupWorkerMessageHandler':\n        {\n          console.log('setupWorkerMessageHandler');\n          const { isMessageHandlerReady } = state;\n          if (!isMessageHandlerReady) {\n            return {\n              effect: i,\n              applyEffect: () => handleSetupWorkerMessageHandler(dispatch),\n            };\n          }\n        }\n        break;\n      case 'createRepl':\n        {\n          console.log('createRepl');\n          const { isReplReady } = state;\n          if (!isReplReady) {\n            return {\n              effect: i,\n              applyEffect: () => handleCreateRepl(),\n            };\n          }\n        }\n        break;\n      case 'lint': {\n        const {\n          editorMode,\n          chunks,\n          currentFileContents,\n          isSetupFinished,\n          isFileSaved,\n        } = state;\n\n        if (isSetupFinished && isFileSaved) {\n          if (currentFileContents !== undefined && editorMode === EditorMode.Text) {\n            return {\n              effect: i,\n              applyEffect: () => handleTextLint(currentFileContents),\n            };\n          }\n\n          if (editorMode === EditorMode.Chunks) {\n            const sendLintRequests = (): void => {\n              chunks.forEach(({ text, errorState, id }) => {\n                if (errorState.status !== 'succeeded') {\n                  console.log(`linting chunk ${id}`);\n                  handleChunkLint(text, id);\n                }\n              });\n            };\n\n            return {\n              effect: i,\n              applyEffect: sendLintRequests,\n            };\n          }\n        }\n\n        break;\n      }\n      case 'compile':\n        {\n          console.log('compile');\n          const {\n            currentFile,\n            typeCheck,\n            isMessageHandlerReady,\n            isSetupFinished,\n            compiling,\n            running,\n            isFileSaved,\n            chunks,\n          } = state;\n          let allLinted = true;\n\n          for (let j = 0; j < chunks.length; j += 1) {\n            if (chunks[j].errorState.status !== 'succeeded') {\n              allLinted = false;\n              break;\n            }\n          }\n\n          if (isMessageHandlerReady\n              && isSetupFinished\n              && isFileSaved\n              && compiling !== true\n              && !running\n              && allLinted) {\n            return {\n              effect: i,\n              applyEffect: () => handleCompile(dispatch, currentFile, typeCheck),\n            };\n          }\n        }\n        break;\n      case 'run': {\n        console.log('run');\n        const {\n          currentFile,\n          runKind,\n          isMessageHandlerReady,\n          isSetupFinished,\n          compiling,\n          running,\n        } = state;\n        if (isMessageHandlerReady && isSetupFinished && !compiling && !running) {\n          return {\n            effect: i,\n            applyEffect: () => handleRun(dispatch, currentFile, runKind),\n          };\n        }\n        break;\n      }\n      case 'stop': {\n        const { running } = state;\n        if (running && currentRunner !== undefined) {\n          return {\n            effect: i,\n            applyEffect: () => handleStop(dispatch),\n          };\n        }\n\n        return {\n          effect: i,\n          applyEffect: () => { },\n        };\n      }\n      default:\n        throw new Error('getFirstActionableEffect: unknown effect');\n    }\n  }\n\n  return false;\n}\n\nconst store = createStore(\n  ideApp,\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nstore.subscribe(() => {\n  const state = store.getState();\n\n  const { dispatch } = store;\n\n  const maybeEffect = handleFirstActionableEffect(state, dispatch);\n\n  if (!maybeEffect) {\n    return;\n  }\n\n  const { effect, applyEffect } = maybeEffect;\n\n  dispatch({ type: 'effectStarted', effect });\n  applyEffect();\n});\n\nstore.dispatch({ type: 'enqueueEffect', effect: 'setupWorkerMessageHandler' });\nstore.dispatch({ type: 'enqueueEffect', effect: 'loadFile' });\nstore.dispatch({ type: 'enqueueEffect', effect: 'saveFile' });\n\nexport default store;\n","import {\n  EffectFailure,\n  EffectSuccess,\n  EffectEnded,\n  FailureForEffect,\n  Update,\n  EffectStarted,\n  Action,\n  SuccessForEffect,\n  EnqueueEffect,\n} from './action';\n\nimport {\n  EditorMode,\n  State,\n  initialState,\n  CHUNKSEP,\n} from './state';\n\nimport {\n  Chunk,\n  newId,\n  getStartLineForIndex,\n  findChunkFromSrcloc,\n} from './chunk';\n\nimport {\n  Effect,\n} from './effect';\n\nimport {\n  makeRHSObjects,\n} from './rhsObject';\n\nfunction handleEnter(state: State): State {\n  const {\n    focusedChunk,\n    shouldAdvanceCursor,\n    chunks,\n  } = state;\n\n  if (focusedChunk !== undefined\n    && shouldAdvanceCursor\n    && chunks[focusedChunk] !== undefined\n    && chunks[focusedChunk].errorState.status !== 'failed') {\n    if (focusedChunk + 1 === chunks.length) {\n      const nextChunks: Chunk[] = [\n        ...chunks,\n        {\n          text: '',\n          startLine: getStartLineForIndex(chunks, focusedChunk + 1),\n          id: newId(),\n          errorState: { status: 'succeeded', effect: 'lint' },\n          editor: false,\n          needsJiggle: false,\n        },\n      ];\n      return {\n        ...state,\n        chunks: nextChunks,\n        focusedChunk: focusedChunk + 1,\n        shouldAdvanceCursor: false,\n      };\n    }\n\n    if (chunks[focusedChunk + 1].text.trim() !== '') {\n      const nextChunks: Chunk[] = [\n        ...chunks.slice(0, focusedChunk + 1),\n        {\n          text: '',\n          startLine: getStartLineForIndex(chunks, focusedChunk + 1),\n          id: newId(),\n          errorState: { status: 'succeeded', effect: 'lint' },\n          editor: false,\n          needsJiggle: false,\n        },\n        ...chunks.slice(focusedChunk + 1),\n      ];\n      for (let i = focusedChunk + 1; i < nextChunks.length; i += 1) {\n        nextChunks[i] = {\n          ...nextChunks[i],\n          startLine: getStartLineForIndex(nextChunks, i),\n        };\n      }\n      return {\n        ...state,\n        chunks: nextChunks,\n        focusedChunk: focusedChunk + 1,\n        shouldAdvanceCursor: false,\n      };\n    }\n\n    if (chunks[focusedChunk + 1].text.trim() === '') {\n      return {\n        ...state,\n        focusedChunk: focusedChunk + 1,\n        shouldAdvanceCursor: false,\n        chunks,\n      };\n    }\n  }\n\n  return state;\n}\n\nfunction handleEffectStarted(state: State, action: EffectStarted): State {\n  const oldEffectQueue = state.effectQueue;\n\n  if (oldEffectQueue[action.effect] === undefined) {\n    const message = `handleEffectStarted: effect to remove is out of bounds${JSON.stringify(action)}`;\n    throw new Error(message);\n  }\n\n  const effectQueue = [\n    ...oldEffectQueue.slice(0, action.effect),\n    ...oldEffectQueue.slice(action.effect + 1, oldEffectQueue.length),\n  ];\n\n  switch (oldEffectQueue[action.effect]) {\n    case 'createRepl':\n      return {\n        ...state,\n        creatingRepl: true,\n        effectQueue,\n      };\n    case 'lint':\n      return {\n        ...state,\n        linting: true,\n        effectQueue,\n      };\n    case 'compile':\n      return {\n        ...state,\n        compiling: true,\n        effectQueue,\n      };\n    case 'run':\n      return {\n        ...state,\n        running: true,\n        effectQueue,\n      };\n    default:\n      return {\n        ...state,\n        effectQueue,\n      };\n  }\n}\n\nfunction handleCreateReplSuccess(state: State): State {\n  return {\n    ...state,\n    creatingRepl: false,\n    isReplReady: true,\n  };\n}\n\nfunction handleStartEditTimerSuccess(\n  state: State,\n  action: SuccessForEffect<'startEditTimer'>,\n): State {\n  return {\n    ...state,\n    editTimer: action.timer,\n  };\n}\n\nfunction handleEditTimerSuccess(state: State): State {\n  const {\n    effectQueue,\n  } = state;\n\n  return {\n    ...state,\n    effectQueue: [...effectQueue, 'saveFile'],\n  };\n}\n\nfunction handleLintSuccess(state: State, action: SuccessForEffect<'lint'>): State {\n  const { editorMode } = state;\n\n  switch (editorMode) {\n    case EditorMode.Text: {\n      const { effectQueue } = state;\n      return {\n        ...state,\n        linting: false,\n        linted: true,\n        effectQueue: [...effectQueue, 'compile'],\n      };\n    }\n    case EditorMode.Chunks: {\n      const {\n        chunks,\n        effectQueue,\n        compiling,\n        running,\n      } = state;\n\n      let allLinted = true;\n      const newChunks: Chunk[] = chunks.map((chunk) => {\n        if (chunk.id === action.name) {\n          return {\n            ...chunk,\n            errorState: { status: 'succeeded', effect: 'lint' },\n          };\n        }\n\n        if (chunk.errorState.status !== 'succeeded') {\n          allLinted = false;\n        }\n\n        return chunk;\n      });\n\n      const shouldCompile = allLinted && !compiling && !running;\n\n      return {\n        ...state,\n        chunks: newChunks,\n        linted: allLinted,\n        linting: !allLinted,\n        effectQueue: shouldCompile ? [...effectQueue, 'compile'] : effectQueue,\n      };\n    }\n    default:\n      throw new Error('handleLintSuccess: unknown editor mode');\n  }\n}\n\nfunction handleCompileSuccess(state: State): State {\n  const { compiling, autoRun, effectQueue } = state;\n\n  if (compiling === 'out-of-date') {\n    return {\n      ...state,\n      compiling: false,\n      effectQueue: [...effectQueue, 'saveFile'],\n    };\n  }\n\n  return {\n    ...state,\n    compiling: false,\n    interactionErrors: [],\n    definitionsHighlights: [],\n    effectQueue: autoRun ? [...effectQueue, 'run'] : effectQueue,\n  };\n}\n\nfunction handleRunSuccess(state: State, status: SuccessForEffect<'run'>): State {\n  console.log('run result', status);\n  const rhs = makeRHSObjects(status.result, `file://${state.currentFile}`);\n\n  const {\n    chunks,\n    currentFile,\n  } = state;\n\n  const newChunks = chunks.slice();\n  const locations = status.result.result.$locations;\n  const traces = status.result.result.$traces;\n\n  locations.forEach((loc: any) => {\n    const { name, srcloc } = loc;\n    const chunk = findChunkFromSrcloc(chunks, srcloc, currentFile);\n    if (chunk !== false) {\n      newChunks[chunk].errorState = {\n        status: 'succeeded',\n        effect: 'run',\n        result: status.result.result[name],\n      };\n    }\n  });\n\n  traces.forEach((loc: any) => {\n    const { value, srcloc } = loc;\n    const chunk = findChunkFromSrcloc(chunks, srcloc, currentFile);\n    if (chunk !== false) {\n      newChunks[chunk].errorState = {\n        status: 'succeeded',\n        effect: 'run',\n        result: value,\n      };\n    }\n  });\n\n  return handleEnter({\n    ...state,\n    chunks: newChunks,\n    checks: status.result.result.$checks,\n    running: false,\n    rhs,\n  });\n}\n\nfunction handleSetupSuccess(state: State): State {\n  const { effectQueue } = state;\n\n  return {\n    ...state,\n    isSetupFinished: true,\n    settingUp: false,\n    effectQueue: [...effectQueue, 'saveFile'],\n  };\n}\n\nfunction handleStopSuccess(state: State, action: SuccessForEffect<'stop'>): State {\n  console.log('stop successful, paused on line', action.line);\n  return {\n    ...state,\n    running: false,\n  };\n}\n\nfunction handleLoadFileSuccess(state: State): State {\n  console.log('loaded a file successfully');\n  return {\n    ...state,\n  };\n}\n\nfunction handleSaveFileSuccess(state: State): State {\n  console.log('saved a file successfully');\n  const {\n    effectQueue,\n    autoRun,\n    compiling,\n    running,\n    chunks,\n  } = state;\n\n  function getNewEffectQueue(): Effect[] {\n    let needsLint = false;\n\n    for (let i = 0; i < chunks.length; i += 1) {\n      if (chunks[i].errorState.status !== 'succeeded') {\n        needsLint = true;\n        break;\n      }\n    }\n\n    if (autoRun && compiling !== true && !running) {\n      if (needsLint) {\n        return [...effectQueue, 'lint'];\n      }\n\n      if (autoRun) {\n        return [...effectQueue, 'compile'];\n      }\n    }\n\n    return effectQueue;\n  }\n\n  return {\n    ...state,\n    isFileSaved: true,\n    effectQueue: getNewEffectQueue(),\n  };\n}\n\nfunction handleSetupWorkerMessageHandlerSuccess(state: State): State {\n  return {\n    ...state,\n    isMessageHandlerReady: true,\n  };\n}\n\nfunction handleEffectSucceeded(state: State, action: EffectSuccess): State {\n  switch (action.effect) {\n    case 'createRepl':\n      return handleCreateReplSuccess(state);\n    case 'startEditTimer':\n      return handleStartEditTimerSuccess(state, action);\n    case 'editTimer':\n      return handleEditTimerSuccess(state);\n    case 'lint':\n      return handleLintSuccess(state, action);\n    case 'compile':\n      return handleCompileSuccess(state);\n    case 'run':\n      return handleRunSuccess(state, action);\n    case 'setup':\n      return handleSetupSuccess(state);\n    case 'stop':\n      return handleStopSuccess(state, action);\n    case 'loadFile':\n      return handleLoadFileSuccess(state);\n    case 'saveFile':\n      return handleSaveFileSuccess(state);\n    case 'setupWorkerMessageHandler':\n      return handleSetupWorkerMessageHandlerSuccess(state);\n    default:\n      throw new Error(`handleEffectSucceeded: unknown process ${JSON.stringify(action)}`);\n  }\n}\n\nfunction handleCreateReplFailure(): State {\n  throw new Error('handleCreateReplFailure: failed to create a REPL');\n}\n\nfunction handleLintFailure(state: State, action: FailureForEffect<'lint'>): State {\n  const { editorMode } = state;\n\n  switch (editorMode) {\n    case EditorMode.Text:\n      throw new Error('handleLintFailure: not yet implemented for text mode');\n    case EditorMode.Chunks: {\n      const { chunks } = state;\n\n      let allLinted = true;\n      const newChunks: Chunk[] = chunks.map((chunk) => {\n        if (chunk.id === action.name) {\n          const highlights: number[][] = [];\n          for (let i = 0; i < action.errors.length; i += 1) {\n            const matches = action.errors[i].match(/:\\d+:\\d+-\\d+:\\d+/g);\n            if (matches !== null) {\n              matches.forEach((m: any) => {\n                highlights.push(m.match(/\\d+/g)!.map(Number));\n              });\n            }\n          }\n\n          return {\n            ...chunk,\n            errorState: {\n              status: 'failed',\n              effect: 'lint',\n              failures: action.errors,\n              highlights,\n            },\n            needsJiggle: true,\n          };\n        }\n\n        if (chunk.errorState.status === 'notLinted') {\n          allLinted = false;\n        }\n\n        return chunk;\n      });\n\n      return handleEnter({\n        ...state,\n        chunks: newChunks,\n        linted: allLinted,\n        linting: !allLinted,\n      });\n    }\n    default:\n      throw new Error('handleLintFailure: unknown editor mode');\n  }\n}\n\nfunction handleCompileFailure(\n  state: State,\n  status: FailureForEffect<'compile'>,\n): State {\n  const { compiling } = state;\n  if (compiling === 'out-of-date') {\n    const { effectQueue } = state;\n    return {\n      ...state,\n      compiling: false,\n      effectQueue: [...effectQueue, 'saveFile'],\n    };\n  }\n\n  const { editorMode } = state;\n\n  const places: number[][] = [];\n  for (let i = 0; i < status.errors.length; i += 1) {\n    const matches = status.errors[i].match(/:\\d+:\\d+-\\d+:\\d+/g);\n    if (matches !== null) {\n      matches.forEach((m: any) => {\n        places.push(m.match(/\\d+/g)!.map(Number));\n      });\n    }\n  }\n\n  function findChunkFromSrclocResult([l1] : number[]): number | false {\n    const { chunks } = state;\n    for (let i = 0; i < chunks.length; i += 1) {\n      const end = chunks[i].startLine + chunks[i].text.split('\\n').length;\n      if (l1 >= chunks[i].startLine && l1 <= end) {\n        return i;\n      }\n    }\n    return false;\n  }\n\n  function getExistingHighlights(chunk : Chunk): number[][] | false {\n    if (chunk.errorState.status === 'failed') {\n      return chunk.errorState.highlights;\n    }\n\n    return false;\n  }\n\n  switch (editorMode) {\n    case EditorMode.Text:\n      return {\n        ...state,\n        compiling: false,\n        interactionErrors: status.errors,\n        definitionsHighlights: places,\n      };\n    case EditorMode.Chunks: {\n      if (places.length > 0) {\n        const { chunks } = state;\n        const newChunks = [...chunks];\n        for (let i = 0; i < places.length; i += 1) {\n          const chunkIndex = findChunkFromSrclocResult(places[i]);\n          if (chunkIndex) {\n            const hl = getExistingHighlights(newChunks[chunkIndex]);\n            newChunks[chunkIndex] = {\n              ...newChunks[chunkIndex],\n              errorState: {\n                status: 'failed',\n                effect: 'compile',\n                failures: status.errors,\n                highlights: hl ? [...hl, places[i]] : [places[i]],\n              },\n              needsJiggle: true,\n            };\n          }\n        }\n        return handleEnter({\n          ...state,\n          compiling: false,\n          chunks: newChunks,\n        });\n      }\n      return handleEnter({\n        ...state,\n        compiling: false,\n        interactionErrors: status.errors,\n        definitionsHighlights: places,\n      });\n    }\n    default:\n      throw new Error('handleCompileFailure: unknown editor mode');\n  }\n}\n\nfunction handleRunFailure(state: State, status: FailureForEffect<'run'>) {\n  console.log('handleFailure', status);\n  return handleEnter({\n    ...state,\n    running: false,\n    interactionErrors: [JSON.stringify(status.errors)],\n  });\n}\n\nfunction handleEffectFailed(state: State, action: EffectFailure): State {\n  switch (action.effect) {\n    case 'createRepl':\n      return handleCreateReplFailure();\n    case 'lint':\n      return handleLintFailure(state, action);\n    case 'compile':\n      return handleCompileFailure(state, action);\n    case 'run':\n      return handleRunFailure(state, action);\n    default:\n      throw new Error(`handleEffectFailed: unknown effect ${JSON.stringify(action)}`);\n  }\n}\n\nfunction handleEffectEnded(state: State, action: EffectEnded): State {\n  switch (action.status) {\n    case 'succeeded':\n      return handleEffectSucceeded(state, action);\n    case 'failed':\n      return handleEffectFailed(state, action);\n    default:\n      throw new Error(`handleEffectEnded: unknown action ${JSON.stringify(action)}`);\n  }\n}\n\nfunction handleEnqueueEffect(state: State, action: EnqueueEffect): State {\n  const { effectQueue } = state;\n  return {\n    ...state,\n    effectQueue: [...effectQueue, action.effect],\n  };\n}\n\nfunction handleSetEditorMode(state: State, newEditorMode: EditorMode): State {\n  const { editorMode } = state;\n\n  if (newEditorMode === EditorMode.Text && editorMode === EditorMode.Chunks) {\n    // we already keep currentFileContents in sync with chunk contents while\n    // in chunk mode, since we need it to save the file contents.\n    return {\n      ...state,\n      editorMode: EditorMode.Text,\n    };\n  }\n\n  if (newEditorMode === EditorMode.Chunks && editorMode === EditorMode.Text) {\n    // in text mode currentFileContents can be more up-to-date than chunks, so we\n    // need to recreate the chunks.\n\n    const { currentFileContents } = state;\n\n    if (currentFileContents === undefined) {\n      return {\n        ...state,\n        editorMode: EditorMode.Chunks,\n        chunks: [],\n      };\n    }\n\n    let totalLines = 0;\n    const chunks: Chunk[] = [];\n\n    currentFileContents.split(CHUNKSEP).forEach((chunkString) => {\n      chunks.push({\n        text: chunkString,\n        startLine: totalLines,\n        id: newId(),\n        errorState: { status: 'notLinted' },\n        editor: false,\n        needsJiggle: false,\n      });\n\n      totalLines += chunkString.split('\\n').length;\n    });\n\n    return {\n      ...state,\n      editorMode: EditorMode.Chunks,\n      chunks,\n    };\n  }\n\n  return state;\n}\n\nfunction handleSetCurrentRunner(state: State, runner: any): State {\n  return {\n    ...state,\n    currentRunner: runner,\n  };\n}\n\nfunction handleSetCurrentFileContents(state: State, contents: string): State {\n  const {\n    effectQueue,\n    compiling,\n    editorMode,\n  } = state;\n\n  if (editorMode !== EditorMode.Text) {\n    throw new Error('handleSetCurrentFileContents: not in text mode');\n  }\n\n  return {\n    ...state,\n    currentFileContents: contents,\n    effectQueue: [...effectQueue, 'startEditTimer'],\n    isFileSaved: false,\n    compiling: compiling ? 'out-of-date' : false,\n  };\n}\n\nfunction handleSetBrowsePath(state: State, path: string): State {\n  return {\n    ...state,\n    browsePath: path,\n  };\n}\n\nfunction handleSetCurrentFile(state: State, file: string): State {\n  const { effectQueue } = state;\n\n  return {\n    ...state,\n    currentFile: file,\n    effectQueue: [...effectQueue, 'loadFile'],\n  };\n}\n\nfunction handleSetChunks(state: State, chunksOrChunk: Chunk[] | Chunk): State {\n  const { editorMode } = state;\n  if (editorMode !== EditorMode.Chunks) {\n    throw new Error('handleSetChunks: not in chunk mode');\n  }\n\n  const {\n    compiling,\n  } = state;\n\n  if (Array.isArray(chunksOrChunk)) {\n    const chunks = chunksOrChunk;\n\n    const contents = chunks.map((chunk) => chunk.text).join(CHUNKSEP);\n\n    return {\n      ...state,\n      chunks,\n      currentFileContents: contents,\n      isFileSaved: false,\n      compiling: compiling ? 'out-of-date' : false,\n    };\n  }\n\n  const chunk = chunksOrChunk;\n  const { chunks } = state;\n\n  const newChunks = [];\n  for (let i = 0; i < chunks.length; i += 1) {\n    if (chunks[i].id === chunk.id) {\n      newChunks.push(chunk);\n    } else {\n      newChunks.push(chunks[i]);\n    }\n  }\n\n  const contents = newChunks.map((c) => c.text).join(CHUNKSEP);\n\n  return {\n    ...state,\n    chunks: newChunks,\n    currentFileContents: contents,\n    isFileSaved: false,\n    compiling: compiling ? 'out-of-date' : false,\n  };\n}\n\nfunction handleSetFocusedChunk(state: State, index: number): State {\n  const { effectQueue, isFileSaved, focusedChunk } = state;\n  const shouldStartEditTimer = !isFileSaved && focusedChunk !== index;\n  return {\n    ...state,\n    focusedChunk: index,\n    effectQueue: shouldStartEditTimer ? [...effectQueue, 'startEditTimer'] : effectQueue,\n  };\n}\n\nfunction handleSetFontSize(state: State, fontSize: number): State {\n  return { ...state, fontSize };\n}\n\nfunction handleSetMenuTabVisible(state: State, tab: false | number) {\n  const { menuTabVisible } = state;\n  if (menuTabVisible !== false) {\n    if (menuTabVisible !== tab) {\n      return { ...state, menuTabVisible: tab };\n    }\n\n    // typescript tries to lift a literal `false` to the `boolean` type, but `false | number`\n    // cannot be `true`.\n    const myFalse: false = false;\n    return { ...state, menuTabVisible: myFalse };\n  }\n\n  return { ...state, menuTabVisible: tab };\n}\n\nfunction handleUpdate(\n  state: State,\n  action: Update,\n): State {\n  switch (action.key) {\n    case 'editorMode':\n      return handleSetEditorMode(state, action.value);\n    case 'currentRunner':\n      return handleSetCurrentRunner(state, action.value);\n    case 'currentFileContents':\n      return handleSetCurrentFileContents(state, action.value);\n    case 'browsePath':\n      return handleSetBrowsePath(state, action.value);\n    case 'currentFile':\n      return handleSetCurrentFile(state, action.value);\n    case 'chunks':\n      return handleSetChunks(state, action.value);\n    case 'focusedChunk':\n      return handleSetFocusedChunk(state, action.value);\n    case 'fontSize':\n      return handleSetFontSize(state, action.value);\n    case 'autoRun':\n      return { ...state, autoRun: action.value };\n    case 'runKind':\n      return { ...state, runKind: action.value };\n    case 'typeCheck':\n      return { ...state, typeCheck: action.value };\n    case 'dropdownVisible':\n      return { ...state, dropdownVisible: action.value };\n    case 'shouldAdvanceCursor':\n      return { ...state, shouldAdvanceCursor: action.value };\n    case 'menuTabVisible':\n      return handleSetMenuTabVisible(state, action.value);\n    case 'rhs':\n      return { ...state, rhs: action.value };\n    case 'firstSelectedChunkIndex':\n      return { ...state, firstSelectedChunkIndex: action.value };\n    default:\n      throw new Error(`handleUpdate: unknown action ${JSON.stringify(action)}`);\n  }\n}\n\nfunction rootReducer(state: State, action: Action): State {\n  switch (action.type) {\n    case 'effectStarted':\n      return handleEffectStarted(state, action);\n    case 'effectEnded':\n      return handleEffectEnded(state, action);\n    case 'enqueueEffect':\n      return handleEnqueueEffect(state, action);\n    case 'update':\n      return handleUpdate(state, action);\n    default:\n      return state;\n  }\n}\n\nexport default function ideApp(state = initialState, action: Action): State {\n  return rootReducer(state, action);\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ConnectedEditor from './Editor';\nimport store from './store';\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <ConnectedEditor />\n    </Provider>\n  );\n}\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}