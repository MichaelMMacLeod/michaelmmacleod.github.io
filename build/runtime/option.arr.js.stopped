const $__C=stopify.compiler;var $__T=stopify;var $__R=$__T.newRTS("lazy");var $S=stopify.init($__R);var fun0;if($__R.mode)fun0=function funExpr0(){var newTarget=new.target;var target=null;var $frame=null;$__R.remainingStack--;if(!$__R.mode){$frame=$__R.stack.pop();target=$frame.index;[fun1,newTarget]=$frame.locals}function captureLocals(frame){frame.locals=[fun1,newTarget]}var restoreNextFrame=()=>{return funExpr0.call(this)};var fun1;if($__R.mode){fun1=function funExpr1(){var $some9,$none10,_nothing,fun2,fun3,fun4,Option1,is$Option6,is$some5,some4,is$none3,none2;$some9={box:undefined};$none10={box:undefined};_nothing=$S.g.undefined;$some9.box={"names":["elt"]};$none10.box={"names":false};fun2=function some(elt11){return{"$brand":$some9.box,"$tag":0,"elt":elt11}};fun3=function some(val){return val.$brand===$some9.box};fun4=function none(val){return val.$brand===$none10.box};Option1={"some":fun2,"none":{"$brand":$none10.box,"$tag":1},"is-some":fun3,"is-none":fun4};is$Option6=Option1["Option"];is$some5=Option1["is-some"];some4=Option1["some"];is$none3=Option1["is-none"];none2=Option1["none"];return $S.g.module["exports"]={"is-none":is$none3,"none":none2,"is-Option":is$Option6,"is-some":is$some5,"some":some4,"$answer":_nothing,"$checks":$S.g.undefined}};$__R.remainingStack++}if($__R.mode)return fun1();else;$__R.remainingStack++;if(newTarget)return this};if($__R.mode)fun0;