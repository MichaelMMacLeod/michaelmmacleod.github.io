const $__C=stopify.compiler;var $__T=stopify;var $__R=$__T.newRTS("lazy");var $S=stopify.init($__R);var fun0;if($__R.mode)fun0=function funExpr0(){var newTarget=new.target;var target=null;var $frame=null;$__R.remainingStack--;if(!$__R.mode){$frame=$__R.stack.pop();target=$frame.index;[fun1,newTarget]=$frame.locals}function captureLocals(frame){frame.locals=[fun1,newTarget]}var restoreNextFrame=()=>{return funExpr0.call(this)};var fun1;if($__R.mode){fun1=function funExpr1(){var newTarget=new.target;var target=null;var $frame=null;$__R.remainingStack--;if(!$__R.mode){$frame=$__R.stack.pop();target=$frame.index;[app1,app0,EQUALITY_CORE00,newTarget]=$frame.locals}function captureLocals(frame){frame.locals=[app1,app0,EQUALITY_CORE00,newTarget]}var restoreNextFrame=()=>{return funExpr1.call(this)};var app0,EQUALITY_CORE00,app1;try{if($__R.mode){app0=$S.suspend()}else if(target===0)app0=$__R.stack[$__R.stack.length-1].f()}catch(exn0){if(exn0 instanceof $__T.Capture){exn0.stack.push({kind:"rest",f:restoreNextFrame,index:0,this:this});captureLocals(exn0.stack[exn0.stack.length-1])}else{$__R.pushTrace(": in (anonymous function)")}throw exn0}try{if($__R.mode){EQUALITY_CORE00=$S.g.require.call(void 0,"./equality.js")}else if(target===1)EQUALITY_CORE00=$__R.stack[$__R.stack.length-1].f()}catch(exn1){if(exn1 instanceof $__T.Capture){exn1.stack.push({kind:"rest",f:restoreNextFrame,index:1,this:this});captureLocals(exn1.stack[exn1.stack.length-1])}else{$__R.pushTrace("Line 4: in (anonymous function)")}throw exn1}try{if($__R.mode){app1=EQUALITY_CORE00.Equal()}else if(target===2)app1=$__R.stack[$__R.stack.length-1].f()}catch(exn2){if(exn2 instanceof $__T.Capture){exn2.stack.push({kind:"rest",f:restoreNextFrame,index:2,this:this});captureLocals(exn2.stack[exn2.stack.length-1])}else{$__R.pushTrace("Line 10: in (anonymous function)")}throw exn2}if($__R.mode){$S.g.module.exports["Equal"]=app1;$S.g.module.exports["NotEqual"]=EQUALITY_CORE00.NotEqual;$S.g.module.exports["Uknown"]=EQUALITY_CORE00.Unknown;$S.g.module.exports["is-Equal"]=EQUALITY_CORE00.isEqual;$S.g.module.exports["is-NotEqual"]=EQUALITY_CORE00.isNotEqual;$S.g.module.exports["is-Unknown"]=EQUALITY_CORE00.isUnknown;$S.g.module.exports["to-boolean"]=EQUALITY_CORE00.to_boolean;$S.g.module.exports["equal-or"]=EQUALITY_CORE00.equal_or;$S.g.module.exports["equal-and"]=EQUALITY_CORE00.equal_and;$S.g.module.exports["within"]=EQUALITY_CORE00.withinRel;$S.g.module.exports["within-rel"]=EQUALITY_CORE00.withinRel;$S.g.module.exports["within-abs"]=EQUALITY_CORE00.withinAbs;$S.g.module.exports["within-rel-now"]=EQUALITY_CORE00.withinRelNow;$S.g.module.exports["within-abs-now"]=EQUALITY_CORE00.withinAbsNow;$S.g.module.exports["equal-now"]=EQUALITY_CORE00.equalNow;$S.g.module.exports["equal-now3"]=EQUALITY_CORE00.equalNow3;$S.g.module.exports["identical"]=EQUALITY_CORE00.identical;$S.g.module.exports["identical3"]=EQUALITY_CORE00.identical3;$S.g.module.exports["equal-always"]=EQUALITY_CORE00.equalAlways;$S.g.module.exports["equal-always3"]=EQUALITY_CORE00.equalAlways3}$__R.remainingStack++;if(newTarget)return this};$__R.remainingStack++}if($__R.mode)return fun1();else;$__R.remainingStack++;if(newTarget)return this};if($__R.mode)fun0;